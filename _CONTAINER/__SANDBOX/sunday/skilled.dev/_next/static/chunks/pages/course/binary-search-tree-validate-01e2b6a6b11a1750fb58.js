_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[53],{"+FKO":function(e,a,t){"use strict";var n=t("ODXe"),c=t("q1tI"),s=t("ahz1"),o=t("vOnD"),p=t("IqxL"),r=t("gWsq"),m=t("MLAZ"),N=Object(o.e)(r.p).withConfig({componentId:"sc-77trup-0"})(["color:inherit;font-weight:inherit;background-image:linear-gradient( transparent 0%,transparent calc(50% - ","px),"," calc(50% - ","px),"," 100% );background-size:100% 200%;transition:background-position 125ms ease-in-out 0s,padding 125ms ease-in-out 0s;background-position:0px 0px;padding:0;padding:2px 0px 3px;&:hover,&:focus{background-position:0px 100%;background-image:linear-gradient( transparent 0%,transparent calc(50% - ","px),"," calc(50% - ","px),"," 100% );color:",";outline:none;}"],4,(function(e){var a=e.theme;return Object(m.a)(a.color.highlight,.6)}),4,(function(e){var a=e.theme;return Object(m.a)(a.color.highlight,.6)}),4,(function(e){return e.theme.color.highlight}),4,(function(e){return e.theme.color.highlight}),p.b.Black2),l=function(e){var a=e.children,t=e.content,o=c.useState(!1),p=Object(n.a)(o,2),r=p[0],m=p[1],l=c.useCallback((function(){return m((function(e){return!e}))}),[]);return c.createElement(c.Fragment,null,c.createElement(N,{onClick:l,"aria-haspopup":!0,"aria-expanded":r},a),c.createElement(s.a,{titleText:"Concept reference",isOpen:r,onClose:l,content:t}))};a.a=l},"7Fnj":function(e,a,t){"use strict";var n=t("rePB"),c=t("JT+q"),s=t("Utoj"),o=Object(n.a)({},s.a.Javascript,"null"),p=Object(c.a)(o);a.a=p},CWAf:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/binary-search-tree-validate",function(){return t("mElw")}])},DcR9:function(e,a,t){"use strict";t.d(a,"a",(function(){return j}));var n=t("wx14"),c=t("Ff2n"),s=t("q1tI"),o=t("7ljp"),p=t("jkan"),r=t("rePB"),m=t("Utoj"),N=t("Jpar"),l={};function u(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},l,t,{components:a,mdxType:"MDXLayout"}),Object(o.a)("pre",{className:"language-javascript"},Object(o.a)("code",{parentName:"pre",className:"language-javascript"},Object(o.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(o.a)("span",{parentName:"code",className:"token function"},"inOrderTraversal"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(o.a)("span",{parentName:"code",className:"token parameter"},"node"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(o.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(o.a)("span",{parentName:"code",className:"token punctuation"},"("),"node ",Object(o.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(o.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(o.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(o.a)("span",{parentName:"code",className:"token function"},"inOrderTraversal"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(o.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(o.a)("span",{parentName:"code",className:"token function"},"visitNode"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(o.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(o.a)("span",{parentName:"code",className:"token function"},"inOrderTraversal"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(o.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(o.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(o.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(o.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(o.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}u.isMDXComponent=!0;var d=Object(r.a)({},m.a.Javascript,s.createElement(u,null)),i=Object(N.a)(d),b={};function j(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(o.a)("h3",null,"In-Order Traversal"),Object(o.a)("p",null,"In-order traversal is the most common and visits the nodes in ascending order.\nIf it were a binary search tree, this will start with the smallest value at the left-most node and end at the largest value at the right-most node."),Object(o.a)("p",null,"Use in-order traversal if you need to utilize the nodes as if they are in a sorted linear order."),Object(o.a)(i,{mdxType:"InOrderTraversal"}),Object(o.a)(p.a,{src:"/images/in-order-traversal.gif",mdxType:"Image"}))}j.isMDXComponent=!0},jkan:function(e,a,t){"use strict";var n=t("q1tI"),c=t("vOnD"),s=t("uqmq"),o=t("5nwr"),p=Object(c.e)(s.b).withConfig({componentId:"sc-1u1nk7e-0"})(["display:flex;justify-content:center;align-items:center;flex-direction:column;"]),r=c.e.img.withConfig({componentId:"sc-1u1nk7e-1"})(["border-radius:6px;max-width:",";","{max-width:100% !important;}"],(function(e){var a=e.maxWidth;return a?"".concat(a," !important"):"100%"}),Object(o.b)()),m=c.e.div.withConfig({componentId:"sc-1u1nk7e-2"})(["margin-top:4px;font-size:12px;color:",";text-align:center;width:100%;a,a:hover,a:visited{color:",";text-decoration:underline;}"],(function(e){return e.theme.color.textSecondary}),(function(e){return e.theme.color.textSecondary})),N=function(){return n.createElement("span",null,"Credit:"," ",n.createElement("a",{href:"https://visualgo.net/",target:"_blank",rel:"noopener noreferrer"},"VisuAlgo"))},l=function(e){var a=e.src,t=e.credit,c=e.isVisuAlgo,s=e.maxWidth;return n.createElement(p,null,n.createElement(r,{maxWidth:s,src:a}),!!t&&n.createElement(m,null,t),!!c&&n.createElement(m,null,n.createElement(N,null)))};a.a=l},mElw:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return Ce}));var n=t("wx14"),c=t("q1tI"),s=t("NoRJ"),o=t("Qovc"),p=t("gh+C"),r=t("kB7q"),m=t("Ff2n"),N=t("7ljp"),l=(t("YFqc"),t("Utoj")),u=(t("uk0T"),t("rePB")),d=t("Jpar"),i={};function b(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},i,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token comment"},"// Example 1:"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token number"},"9"),"\n   ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\\n  ",Object(N.a)("span",{parentName:"code",className:"token number"},"5"),"  ",Object(N.a)("span",{parentName:"code",className:"token number"},"22"),"\n ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\   \\\n",Object(N.a)("span",{parentName:"code",className:"token number"},"1"),"   ",Object(N.a)("span",{parentName:"code",className:"token number"},"7"),"  ",Object(N.a)("span",{parentName:"code",className:"token number"},"30"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/"),"\n     ",Object(N.a)("span",{parentName:"code",className:"token number"},"25"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token function"},"isBST"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// true"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Example 2:"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token number"},"9"),"\n   ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\\n  ",Object(N.a)("span",{parentName:"code",className:"token number"},"5"),"  ",Object(N.a)("span",{parentName:"code",className:"token number"},"22"),"\n ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\   \\\n",Object(N.a)("span",{parentName:"code",className:"token number"},"1"),"  ",Object(N.a)("span",{parentName:"code",className:"token number"},"10"),"  ",Object(N.a)("span",{parentName:"code",className:"token number"},"30"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token function"},"isBST"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// false"),"\n",Object(N.a)("span",{parentName:"code",className:"token comment"},"// 10 > 9 but falls under its left path"),"\n")))}b.isMDXComponent=!0;var j=Object(u.a)({},l.a.Javascript,c.createElement(b,null)),O=Object(d.a)(j),k={};function h(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},k,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)(O,{mdxType:"InputOutput"}))}h.isMDXComponent=!0;var y=t("JT+q"),w=Object(u.a)({},l.a.Javascript,"isBST"),f=Object(y.a)(w),g={};function v(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},g,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," data",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}v.isMDXComponent=!0;var T=Object(u.a)({},l.a.Javascript,c.createElement(v,null)),x=Object(d.a)(T),B={};function C(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},B,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,Object(N.a)("strong",{parentName:"p"},"Given the root node of a binary tree, write a function ",Object(N.a)(f,{mdxType:"SolutionSignature"})," that returns a boolean if the binary tree is also a valid binary search tree.")),Object(N.a)("ul",null,Object(N.a)("li",{parentName:"ul"},"You can assume the tree won't be empty"),Object(N.a)("li",{parentName:"ul"},"The tree will not contain duplicate values")),Object(N.a)(h,{mdxType:"SampleInputOutput"}),Object(N.a)("p",null,"The nodes in the tree will be standard binary nodes:"),Object(N.a)(x,{mdxType:"BinaryNode"}))}C.isMDXComponent=!0;var S=C,I={};function D(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},I,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)(S,{mdxType:"QuestionStatement"}))}D.isMDXComponent=!0;var M=D,X={};function L(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},X,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"There are different iterative and recursive solutions that all have the same time and space complexity.\nFeel free to approach it in whichever way you feel most comfortable, and I'll provide both an iterative and recursive approach in my solution."))}L.isMDXComponent=!0;var E=t("jkan"),W={};function A(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},W,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"For a binary search tree, ALL the descendants to the left of a node are smaller, and ALL the descendants to the right of a node are larger.\nYou must ensure that a node is not only correct for its immediate parent, but also all of the ancestors."),Object(N.a)(E.a,{src:"/images/invalid-bst.png",maxWidth:"480px",mdxType:"Image"}))}A.isMDXComponent=!0;var F=t("Ydbm"),V={};function q(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},V,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"The worst-case Big O time and space solution in both the iterative and recursive case are ",Object(N.a)(F.a.n,null)," where ",Object(N.a)("inlineCode",{parentName:"p"},"n")," is the number of nodes in the tree."))}q.isMDXComponent=!0;var J=[L,A,q],_=t("+FKO"),U=t("DcR9"),P={};function Y(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},P,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"A binary search tree is an ordered tree.\nThe node on the far left has the smallest value and the node on the far right is the largest value.\nFor any given node, all the descendants to its left must be smaller and all the descendants to its right must be larger."),Object(N.a)("p",null,"This gives us two approaches to solve the problem:"),Object(N.a)("p",null,"1) ",Object(N.a)(_.a,{content:Object(N.a)(U.a,{mdxType:"InOrderTraversal"}),mdxType:"ConceptModal"},"Traverse in-order")," from the left node to the right and ensure it is always ascending."),Object(N.a)(E.a,{src:"/images/in-order-increase.gif",mdxType:"Image"}),Object(N.a)("p",null,"2) For any node, show that all the left descendants are strictly decreasing and all the right descendants are strictly increasing."),Object(N.a)("p",null,"For this question, we'll recursively prove #2, that all the descendants decrease or increase correctly.\nAs a bonus at the end, I'll provide a solution using an iterative in-order traversal."))}Y.isMDXComponent=!0;var R={};function z(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},R,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"Let's take a simple case and think through how we set bounds.\nIf we start at the root and walk left, every node must be smaller.\nWe can restate this by saying that the value of the parent node becomes the upper bound of the nodes below it in its left subtree.\nIf we move right, the node's value becomes the new lower bound because every nodes' value must be larger in its right subtree.\nIf this is ever not the case we return false."),Object(N.a)("p",null,"So the lower and upper bounds are determined relative to any descendants' parents."),Object(N.a)("p",null,"We can then treat this as a repeating subproblem where we set a new upper bound when we move left and a new lower bound when we move right.\nWe check that each node is between the lower and upper bound and propagate the true/false upward.\nIf we reach our initial call with a true value from both its ",Object(N.a)("inlineCode",{parentName:"p"},"left")," and ",Object(N.a)("inlineCode",{parentName:"p"},"right")," branch, then all values must be true."),Object(N.a)(E.a,{src:"/images/valid-bst-bounds.gif",mdxType:"Image"}),Object(N.a)("p",null,"Now that we have the logic, we can cover the implementation details for the base cases and recursive cases."))}z.isMDXComponent=!0;var Q=t("7Fnj"),G={};function K(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},G,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},"lowerBound ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"-"),Object(N.a)("span",{parentName:"code",className:"token number"},"Infinity"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\nupperBound ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"Infinity"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}K.isMDXComponent=!0;var H=Object(u.a)({},l.a.Javascript,c.createElement(K,null)),Z=Object(d.a)(H),$={};function ee(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},$,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"For any recursive function, we need a base case.\nIf we reach a ",Object(N.a)(Q.a,{mdxType:"Null"}),", we return true because there are no additional values to test."),Object(N.a)("p",null,"We perform a pre-order DFS traversal.\nWe test a current node's value against the lower and upper bound before making the recursive calls.\nIf the value is smaller than the lower bound or larger than the upper bound, we return false.\nThis also acts as a base case because there is no need to continue the recursive calls if we find an invalid node,\nmeaning we can immediately return."),Object(N.a)("p",null,"For our recursive case, we call the function and update the lower or upper bound accordingly.\nIf either path returns false, we propagate the false upward.\nIf both return true, we return also return true for that function call which means\nthat this node and all of its descendants are ordered correctly."),Object(N.a)("p",null,"The final piece is the initial lower and upper bound.\nFor these, they are just the smallest and largest number in your language.\nSince the root node has no parent, its relative lower and upper bound can be anything.\nWhen we traverse, we then update the bounds accordingly."),Object(N.a)(Z,{mdxType:"LanguageMinMax"}))}ee.isMDXComponent=!0;var ae=[Y,z,ee],te=t("lcwc"),ne=(t("PH+U"),t("S2YG")),ce={};function se(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},ce,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("ul",null,Object(N.a)("li",{parentName:"ul"},"Understand how to maintain bounds on any given tree's nodes"),Object(N.a)("li",{parentName:"ul"},"Create a helper function to add additional data to a recursive call"),Object(N.a)("li",{parentName:"ul"},"Validate a BST based on its nodes' values"),Object(N.a)("li",{parentName:"ul"},"Understand why we use different tree traversal methods (in-order, pre-order, post-order)"),Object(N.a)("li",{parentName:"ul"},"Traverse a tree iteratively")))}se.isMDXComponent=!0;var oe=se,pe={};function re(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},pe,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"recursiveValidate")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," lowerBound",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," upperBound"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Base case 1 (reached leaf, valid)"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"true"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Base case 2 (invalid)"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"<=")," lowerBound ",Object(N.a)("span",{parentName:"code",className:"token operator"},"||")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},">=")," upperBound",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"false"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// When we traverse left, the current node's value must be the newest upper bound"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// This ensures it's always strictly decreaseing from the current node"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," isValidLeft ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"recursiveValidate"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," lowerBound",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// When we traverse right, the current node's value must be the newest lower bound"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// This ensures it's always strictly increasing from the current node"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," isValidRight ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"recursiveValidate"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," upperBound",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Both must be true for this to return true"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," isValidLeft ",Object(N.a)("span",{parentName:"code",className:"token operator"},"&&")," isValidRight",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"isBST")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," isValid ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"recursiveValidate"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"-"),Object(N.a)("span",{parentName:"code",className:"token number"},"Infinity"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"Infinity"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," isValid",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}re.isMDXComponent=!0;var me=Object(u.a)({},l.a.Javascript,c.createElement(re,null)),Ne=Object(d.a)(me),le={};function ue(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},le,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"isBST")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," stack ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"let")," currentNode ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"let")," inOrderValue ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"-"),Object(N.a)("span",{parentName:"code",className:"token number"},"Infinity"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Begin itertaive in-order traversal"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"length")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"0")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"||")," currentNode ",Object(N.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Traverse down a node's left children as long as they continue to exist"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode ",Object(N.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      currentNode ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Check nodes in-order, testing that their value is larger than the previous"),"\n    currentNode ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"pop"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// In-order traversal failed"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"<=")," inOrderValue",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"false"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Update value"),"\n    inOrderValue ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Continue in-order traveresal to the current node's right path"),"\n    currentNode ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Finish traversal and all values were valid"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"true"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}ue.isMDXComponent=!0;var de=Object(u.a)({},l.a.Javascript,c.createElement(ue,null)),ie=Object(d.a)(de),be={};function je(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},be,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"To validate our BST, we will maintain the lower and upper bounds a node must fall between."),Object(N.a)("p",null,"When we follow the ",Object(N.a)("inlineCode",{parentName:"p"},"left")," path, the current node's value becomes the upper bound to all the descendants in that subtree since all are required to be smaller in a BST.\nWhen we follow the ",Object(N.a)("inlineCode",{parentName:"p"},"right")," path, the current node's value becomes the new lower bound for  its right subtree."),Object(N.a)("p",null,"We perform a pre-order traversal where we check if a value is between the bounds and return false if it is not.\nOur base case is reaching a ",Object(N.a)(Q.a,{mdxType:"Null"})," value, and we know we can return true."),Object(N.a)("p",null,"If for every node / subtree / subproblem we return true, then we yield that as our solution.\nIf any function returns false, this value is propagated upward and shows our binary tree is not a BST."),Object(N.a)(Ne,{mdxType:"SolutionCode"}),Object(N.a)(te.a,{mdxType:"ComplexitySubtitle"}),Object(N.a)("p",null,Object(N.a)(F.a.n,null)," time and ",Object(N.a)(F.a.n,null)," space."),Object(N.a)("p",null,"We must traverse all ",Object(N.a)("inlineCode",{parentName:"p"},"n")," nodes and in the worst-case, store them all in the call stack (or an auxiliary data structure)."),Object(N.a)("h3",null,"Bonus: Iterative In-Order Traversal"),Object(N.a)("p",null,"An in-order traversal will visit nodes in ascending order for a BST.\nTherefore, we can check that each node in the list is larger than the previous,\nand if so, this will prove it's a BST."),Object(N.a)(ie,{mdxType:"IterativeSolution"}),Object(N.a)(ne.a,{mdxType:"LearningOutcomesSubtitle"}),Object(N.a)(oe,{mdxType:"LearningOutcomes"}))}je.isMDXComponent=!0;var Oe=je,ke={};function he(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},ke,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"isBST")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Your solution here"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}he.isMDXComponent=!0;var ye=Object(u.a)({},l.a.Javascript,c.createElement(he,null)),we=function(e){return ye[e]},fe={};function ge(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},fe,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," data",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," tests ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"["),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"true"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'handles only a root'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"20"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"20"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"17"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"70"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"false"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'false case with duplicate node'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"55"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"65"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"75"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"85"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"true"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'unbalanced true case'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"55"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"65"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"95"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"85"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"false"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'unbalanced false case'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"20"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"17"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"12"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"18"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"25"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"24"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"27"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"70"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"80"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token boolean"},"true"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'multiple nodes at the same level true case'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"validate")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},Object(N.a)("span",{parentName:"span",className:"token punctuation"},"{")," input",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," expected",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," description ",Object(N.a)("span",{parentName:"span",className:"token punctuation"},"}")),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," userAnswer ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"isBST"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," passed ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," userAnswer ",Object(N.a)("span",{parentName:"code",className:"token operator"},"===")," expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," passed",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," userAnswer ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}ge.isMDXComponent=!0;var ve=Object(u.a)({},l.a.Javascript,c.createElement(ge,null)),Te=function(e){return ve[e]},xe={segments:[{name:"Introduction",startTimeSeconds:0,endTimeSeconds:9},{name:"Question Prompt",startTimeSeconds:9,endTimeSeconds:40},{name:"Constraints",startTimeSeconds:40,endTimeSeconds:72},{name:"Solution Breakdown",startTimeSeconds:72,endTimeSeconds:459},{name:"Solution Summary and Big O",startTimeSeconds:459,endTimeSeconds:524},{name:"Alternate Solution (In-Order Traversal)",startTimeSeconds:524,endTimeSeconds:632},{name:"Code Walkthrough",startTimeSeconds:632,endTimeSeconds:919}]},Be=function(e){var a=e.hasLessonAccess;return c.createElement(p.a,Object(n.a)({},e,{Introduction:M,QuestionStatement:S,Solution:a?Oe:r.a,LearningOutcomes:a?oe:null,validationItems:J,explanationItems:a?ae:[],getUserAnswer:we,getTests:a?Te:r.b,getSolutionCode:a?Ne:r.b,video:xe}))},Ce=!0;a.default=Object(o.a)((function(e){return c.useEffect((function(){e.lesson&&"ACTIVE"===e.lesson.status||(window.location.href="/course")}),[e]),e.lesson&&"ACTIVE"===e.lesson.status?c.createElement(s.a,Object(n.a)({},e,{Component:Be})):null}),{ssr:!1})},uqmq:function(e,a,t){"use strict";t.d(a,"b",(function(){return o})),t.d(a,"c",(function(){return p})),t.d(a,"a",(function(){return r}));var n=t("vOnD"),c=t("gWsq"),s=t("SOUA"),o=Object(n.e)(c.h).withConfig({componentId:"sc-16wjbcj-0"})(["margin-top:","px;"],s.a),p=Object(n.e)(o).withConfig({componentId:"sc-16wjbcj-1"})(["display:flex;justify-content:center;align-items:center;"]),r=n.e.div.withConfig({componentId:"sc-16wjbcj-2"})(["margin-top:","px;"],s.a)}},[["CWAf",0,1,4,6,5,9,12,11,13,14,15,18,17,21,2,3,7,8,10,16,19,22,23,24]]]);