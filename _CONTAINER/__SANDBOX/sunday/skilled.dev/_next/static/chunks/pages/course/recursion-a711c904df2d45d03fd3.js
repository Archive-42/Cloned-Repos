_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[96],{"3GFW":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/recursion",function(){return t("lnhG")}])},AgfK:function(e,a,t){"use strict";var n=t("q1tI"),c=t("tGWw");a.a=function(){return Object(n.useContext)(c.a)}},Jpar:function(e,a,t){"use strict";var n=t("q1tI"),c=t("iD9/");a.a=function(e,a){var t=function(e){return a?function(e,a){return a.options.includes(e)?e:a.default}(e,a):e},o=function(a){return e[t(a)||a]};return function(){return n.createElement(c.a,{code:o,getLanguageUsed:t})}}},Ydbm:function(e,a,t){"use strict";var n=t("q1tI"),c={constant:function(){return n.createElement("em",null,"O(1)")},n:function(e){var a=e.letter,t=void 0===a?"n":a;return n.createElement("em",null,"O(",t,")")},n2:function(e){var a=e.letter,t=void 0===a?"n":a,c=e.exponent,o=void 0===c?2:c;return n.createElement("em",null,"O(",t,n.createElement("sup",null,o),")")},logn:function(e){var a=e.letter,t=void 0===a?"n":a;return n.createElement("em",null,"O(log ",t,")")},nlogn:function(e){var a=e.letter,t=void 0===a?"n":a;return n.createElement("em",null,"O(",t," log ",t,")")},bin:function(e){var a=e.base,t=void 0===a?2:a,c=e.letter,o=void 0===c?"n":c;return n.createElement("em",null,"O(",t,n.createElement("sup",null,o),")")},factorial:function(e){var a=e.letter,t=void 0===a?"n":a;return n.createElement("em",null,"O(",t,"!)")}};a.a=c},"iD9/":function(e,a,t){"use strict";var n=t("q1tI"),c=t("gWsq"),o=t("AgfK"),s=function(e){var a=e.code,t=Object(o.a)().language;return n.createElement(c.h,null,a(t))};a.a=s},jDXR:function(e,a,t){"use strict";var n=t("q1tI"),c=function(e){var a=e.children;return n.createElement("h2",null,a)};a.a=c},jkan:function(e,a,t){"use strict";var n=t("q1tI"),c=t("vOnD"),o=t("uqmq"),s=t("5nwr"),r=Object(c.e)(o.b).withConfig({componentId:"sc-1u1nk7e-0"})(["display:flex;justify-content:center;align-items:center;flex-direction:column;"]),p=c.e.img.withConfig({componentId:"sc-1u1nk7e-1"})(["border-radius:6px;max-width:",";","{max-width:100% !important;}"],(function(e){var a=e.maxWidth;return a?"".concat(a," !important"):"100%"}),Object(s.b)()),m=c.e.div.withConfig({componentId:"sc-1u1nk7e-2"})(["margin-top:4px;font-size:12px;color:",";text-align:center;width:100%;a,a:hover,a:visited{color:",";text-decoration:underline;}"],(function(e){return e.theme.color.textSecondary}),(function(e){return e.theme.color.textSecondary})),i=function(){return n.createElement("span",null,"Credit:"," ",n.createElement("a",{href:"https://visualgo.net/",target:"_blank",rel:"noopener noreferrer"},"VisuAlgo"))},l=function(e){var a=e.src,t=e.credit,c=e.isVisuAlgo,o=e.maxWidth;return n.createElement(r,null,n.createElement(p,{maxWidth:o,src:a}),!!t&&n.createElement(m,null,t),!!c&&n.createElement(m,null,n.createElement(i,null)))};a.a=l},lnhG:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return te}));var n=t("wx14"),c=t("q1tI"),o=t.n(c),s=t("NoRJ"),r=t("Qovc"),p=t("ekJs"),m={segments:[{name:"Introduction",startTimeSeconds:0,endTimeSeconds:15},{name:"Definition",startTimeSeconds:15,endTimeSeconds:67},{name:"Comparing Iterative and Recursive Algorithms",startTimeSeconds:67,endTimeSeconds:466},{name:"Stack Overflows",startTimeSeconds:466,endTimeSeconds:533},{name:"Code Walkthrough",startTimeSeconds:533,endTimeSeconds:870}]},i=t("Ff2n"),l=t("7ljp"),u=t("jkan"),N=t("93Pr"),d=t("gWsq"),b=t("jDXR"),j=t("Ydbm"),O=t("uk0T"),k=t("rePB"),h=t("Utoj"),f=t("Jpar"),w={};function v(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},w,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"doRecursion"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// doRecursion will call itself which will execute the function again."),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// In this case, it will happen infinitely because nothing tells it when to stop."),"\n  ",Object(l.a)("span",{parentName:"code",className:"token function"},"doRecursion"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Execute doRecursion"),"\n",Object(l.a)("span",{parentName:"code",className:"token function"},"doRecursion"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}v.isMDXComponent=!0;var g=Object(k.a)({},h.a.Javascript,c.createElement(v,null)),y=Object(f.a)(g),x={};function T(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},x,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"0"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"<")," array",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(l.a)("span",{parentName:"code",className:"token operator"},"++"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{")," ",Object(l.a)("span",{parentName:"code",className:"token comment"},"/* perform some task using each item */")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"solution ",Object(l.a)("span",{parentName:"code",className:"token operator"},"!==")," valid",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{")," ",Object(l.a)("span",{parentName:"code",className:"token comment"},"/* update a value until it is a valid solution */")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}T.isMDXComponent=!0;var C=Object(k.a)({},h.a.Javascript,c.createElement(T,null)),E=Object(f.a)(C),S={};function F(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},S,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token comment"},"// Ex. factorial of 4: 4! = 4 * 3 * 2 * 1 = 24"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"iterativeFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"number"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," factorial ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"<=")," number",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(l.a)("span",{parentName:"code",className:"token operator"},"++"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    factorial ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," factorial ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," i",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," factorial",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Same as:"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// 4! = 4 * 3 * 2 * 1"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//    = 4 * 3!"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//    = 4 * 3 * 2!"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//    = 4 * 3 * 2 * 1!"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//    = 4 * 3 * 2 * 1"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"number"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Stop calling when the value is 1 or less"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"number ",Object(l.a)("span",{parentName:"code",className:"token operator"},"<=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Multiply a number by the factorial of the number that comes before it"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," number ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"number ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}F.isMDXComponent=!0;var I=Object(k.a)({},h.a.Javascript,c.createElement(F,null)),q=Object(f.a)(I),D={};function W(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},D,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"4"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"4")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"2"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"2"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"2")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// base case"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// or"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"4"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"2"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFactorial"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// base case"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"2")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// -> 2 * 1"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"2")," ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// -> 3 * 2 * 1"),"\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"4")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"6")," ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// 4 * 3 * 2 * 1"),"\n")))}W.isMDXComponent=!0;var R=Object(k.a)({},h.a.Javascript,c.createElement(W,null)),A=Object(f.a)(R),M={};function X(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},M,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursiveFlatten"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"array"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," array",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"reduce"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"flattenedArray",Object(l.a)("span",{parentName:"span",className:"token punctuation"},",")," item"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token known-class-name class-name"},"Array"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"isArray"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"item",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token operator"},"?")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token spread operator"},"..."),"flattenedArray",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token spread operator"},"..."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"recursiveFlatten"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"item",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token spread operator"},"..."),"flattenedArray",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," item",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"iterativeFlatten"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"array"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," output ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," toBeFlattened ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),"array",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," current",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"while"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"toBeFlattened",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," current ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," toBeFlattened",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"shift"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token known-class-name class-name"},"Array"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"isArray"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"current",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      toBeFlattened ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token spread operator"},"..."),"toBeFlattened",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token spread operator"},"..."),"current",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      output",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"current",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," output",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}X.isMDXComponent=!0;var _=Object(k.a)({},h.a.Javascript,c.createElement(X,null)),L=Object(f.a)(_),z={};function H(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},z,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"reverseString"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"str"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Base case"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"str",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"length")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"0"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"''"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Recursively add the front character to end of the remaining string"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"reverseString"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"str",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"slice"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"+")," str",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"0"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token function"},"reverseString"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token string"},"'dev'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// reverseString('dev')"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//   reverseString('ev')"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//     reverseString('v')"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//       reverseString('')"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//       return ''"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//     return '' + 'v'"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"//   return 'v' + 'e'"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// return 've' + 'd'"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// -> 'ved'"),"\n")))}H.isMDXComponent=!0;var J=Object(k.a)({},h.a.Javascript,c.createElement(H,null)),B=Object(f.a)(J),P={};function G(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},P,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"fibonacci"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"n"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Base case"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"n ",Object(l.a)("span",{parentName:"code",className:"token operator"},"<")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"2"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n     ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," n\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Sum the two previous numbers to get the current value"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"fibonacci"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"n ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"fibonacci"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"n ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"2"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}G.isMDXComponent=!0;var U=Object(k.a)({},h.a.Javascript,c.createElement(G,null)),Y=Object(f.a)(U),V={};function K(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},V,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"hanoi"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"disc",Object(l.a)("span",{parentName:"span",className:"token punctuation"},",")," src",Object(l.a)("span",{parentName:"span",className:"token punctuation"},",")," aux",Object(l.a)("span",{parentName:"span",className:"token punctuation"},",")," dest"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Base case (stop moving discs)"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"disc ",Object(l.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"0"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Recursively rotate discs"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token function"},"hanoi"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"disc ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," src",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," dest",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," aux",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token console class-name"},"console"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"log"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token template-string"},Object(l.a)("span",{parentName:"span",className:"token template-punctuation string"},"`"),Object(l.a)("span",{parentName:"span",className:"token string"},"Move disc "),Object(l.a)("span",{parentName:"span",className:"token interpolation"},Object(l.a)("span",{parentName:"span",className:"token interpolation-punctuation punctuation"},"${"),"disc",Object(l.a)("span",{parentName:"span",className:"token interpolation-punctuation punctuation"},"}")),Object(l.a)("span",{parentName:"span",className:"token string"}," from "),Object(l.a)("span",{parentName:"span",className:"token interpolation"},Object(l.a)("span",{parentName:"span",className:"token interpolation-punctuation punctuation"},"${"),"src",Object(l.a)("span",{parentName:"span",className:"token interpolation-punctuation punctuation"},"}")),Object(l.a)("span",{parentName:"span",className:"token string"}," to "),Object(l.a)("span",{parentName:"span",className:"token interpolation"},Object(l.a)("span",{parentName:"span",className:"token interpolation-punctuation punctuation"},"${"),"dest",Object(l.a)("span",{parentName:"span",className:"token interpolation-punctuation punctuation"},"}")),Object(l.a)("span",{parentName:"span",className:"token template-punctuation string"},"`")),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token function"},"hanoi"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"disc ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," aux",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," src",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," dest",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token function"},"hanoi"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"4"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"'left peg'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"'middle peg'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"'right peg'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}K.isMDXComponent=!0;var $=Object(k.a)({},h.a.Javascript,c.createElement(K,null)),Q=Object(f.a)($),Z={};function ee(e){var a=e.components,t=Object(i.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},Z,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)(N.b,{mdxType:"Section"},Object(l.a)("p",null,"Recursion is when a function calls itself."),Object(l.a)("blockquote",null,Object(l.a)("p",{parentName:"blockquote"},'"In order to understand recursion, you must first understand recursion" - Anonymous')),Object(l.a)(y,{mdxType:"RecursionSimple"}),Object(l.a)("p",null,"As you work through this module, you will learn:"),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},"How the iterative and recursive approach relate to each other."),Object(l.a)("li",{parentName:"ul"},"How recursion works."),Object(l.a)("li",{parentName:"ul"},"How to determine a stopping condition."),Object(l.a)("li",{parentName:"ul"},"Recognize when to use recursion."),Object(l.a)("li",{parentName:"ul"},"How to simplify complex problems using recursion."),Object(l.a)("li",{parentName:"ul"},"The tradeoffs and downside for using recursion.")),Object(l.a)("p",null,"You have probably heard of recursion, but it may not be obvious why it is important, how to think through a recursive function, or when to use it for a solution."),Object(l.a)("p",null,"When we solve problems in interviews, we often repeat an operation many times, and once completed, this calculates the solution.\nThis is our algorithm.\nFor example, you have used the below patterns in your code:"),Object(l.a)(E,{mdxType:"ForWhileBoilerplate"}),Object(l.a)("p",null,"There are two strategies to implement our algorithms: ",Object(l.a)("strong",{parentName:"p"},"iterative")," and ",Object(l.a)("strong",{parentName:"p"},"recursive"),".\nThe iterative approach is likely the one you are most familiar with.\nFor example, looping through an array is a repeated operation, and we use the iterative ",Object(l.a)("inlineCode",{parentName:"p"},"for")," loop to perform this task for each item.\nAnother iterative example is the ",Object(l.a)("inlineCode",{parentName:"p"},"while")," loop where we continue to repeat some modification until we reach a valid condition."),Object(l.a)("p",null,Object(l.a)("em",{parentName:"p"},"Recursion does the exact same thing as iteration"),", but it just takes a different approach.\nAnything that can be done iteratively can also be done recursively and vice versa."),Object(l.a)("p",null,"For example, to calculate the factorial of a number iteratively vs. recursively:"),Object(l.a)(q,{mdxType:"FactorialComparison"}),Object(l.a)("p",null,"Let's visualize the recursive case. We start by calling ",Object(l.a)("inlineCode",{parentName:"p"},"factorial(4)"),".\nWe recursively call the function with a smaller number each time until we reach the base case.\nOnce hitting the base case, we always return ",Object(l.a)("inlineCode",{parentName:"p"},"1"),".\nSo we return a constant value instead of continuing to call functions.\nUsing this value, we can calculate the solution at each step and pass this result to the recursive function that called it until we reach our initial function call.\nWhen the initial execution gets the result from the recursive function it called, it can then calculate the final answer."),Object(l.a)(u.a,{src:"/images/recursion-demo.gif",mdxType:"Image"}),Object(l.a)("p",null,"Both the iterative and recursive functions here operate in ",Object(l.a)(j.a.n,null)," time where ",Object(l.a)("inlineCode",{parentName:"p"},"n")," is the value of the integer."),Object(l.a)("p",null,"With the factorial example, it likely still doesn't make sense why we need recursion.\nThe iterative method seems more straightforward.\nUsing recursion in this example may not add much value in terms of improving the solution,\nbut there are many other cases where a recursive algorithm can reduce a very complex problem down to simple, repeatable steps that can solve a difficult question in just a few lines of code."),Object(l.a)("p",null,"We will develop the intuition in this module and throughout the course on how/when to apply recursion and understand how it can simplify code.")),Object(l.a)(N.b,{mdxType:"Section"},Object(l.a)(b.a,{mdxType:"SubsectionHeader"},"Coding a Recursive Function"),Object(l.a)("p",null,"There are two essential parts to the algorithms we use to solve interview questions:"),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},Object(l.a)("strong",{parentName:"li"},"Logic"),": the repeated operations that will determine the solution"),Object(l.a)("li",{parentName:"ol"},Object(l.a)("strong",{parentName:"li"},"Stopping condition"),": the condition that indicates we have found the solution")),Object(l.a)("blockquote",null,Object(l.a)("p",{parentName:"blockquote"},"For recursion, we refer to these as the recursive case and the base case, if you are more familiar with those terms.")),Object(l.a)("p",null,"Let's expand on the factorial example since we already have some intuition for it."),Object(l.a)("p",null,"If we take our iterative factorial algorithm,\nour logic was just doing ",Object(l.a)("inlineCode",{parentName:"p"},"product = product * i"),".\nThe stopping condition was the ",Object(l.a)("inlineCode",{parentName:"p"},"for")," loop ",Object(l.a)("inlineCode",{parentName:"p"},"i = 1; i <= factorial; i++"),".\nWe iterate until we have utilized every number required to calculate the factorial.\nIf we wrote a malformed stopping condition, our ",Object(l.a)("inlineCode",{parentName:"p"},"for")," loop could run forever.\nFor example, ",Object(l.a)("inlineCode",{parentName:"p"},"let i = 1; i > 0; i++")," will run infinitely because ",Object(l.a)("inlineCode",{parentName:"p"},"i")," will always be larger than 0."),Object(l.a)("p",null,"Our recursive solution requires the exact same 2 parts.\n",Object(l.a)("strong",{parentName:"p"},"A stopping condition is essential to have in any recursive function"),".\nJust like in a ",Object(l.a)("inlineCode",{parentName:"p"},"for")," or ",Object(l.a)("inlineCode",{parentName:"p"},"while")," loop where we determine when our logic should stop executing,\na recursive function must do the exact same thing."),Object(l.a)("p",null,'In a recursive function, the "logic" and "stopping condition" can also be called the "recursive case" and "base case" respectively.\nThe recursive case is the block of code that modifies the input, calls the function recursively, and uses the result returned from recursive function calls to build up the solution.\nThe base case is executed when our input reaches a value that indicates we have completed all the steps needed to calculate the solution.\nThe base case returns a pre-defined value (instead of calling the function recursively), and then all the recursive calls above it can unwind and use the calculated result from each step after it.'),Object(l.a)("p",null,"In our recursive factorial example, the base case is ",Object(l.a)("inlineCode",{parentName:"p"},"number <= 1")," which means we have multiplied all the numbers together for the factorial, and we can return ",Object(l.a)("inlineCode",{parentName:"p"},"1"),".\nThe recursive case is ",Object(l.a)("inlineCode",{parentName:"p"},"number * recursiveFactorial(number - 1)"),"."),Object(l.a)("p",null,"For recursive functions, there are almost always two ",Object(l.a)("inlineCode",{parentName:"p"},"return")," statements \u2014 one for the base case and one for the recursive case."),Object(l.a)("p",null,"Let's break this down to understand what it means and how our recursive factorial function works this way."),Object(l.a)("p",null,"A factorial means we multiply an integer ",Object(l.a)("inlineCode",{parentName:"p"},"n")," by all the integers that come before it ",Object(l.a)("inlineCode",{parentName:"p"},"1 to n"),".\nA factorial is represented by the syntax ",Object(l.a)("inlineCode",{parentName:"p"},"n!")," where ",Object(l.a)("inlineCode",{parentName:"p"},"n * (n-1) * (n-2) * ... * 1"),"."),Object(l.a)("p",null,"Taking ",Object(l.a)("inlineCode",{parentName:"p"},"1!")," through ",Object(l.a)("inlineCode",{parentName:"p"},"4!")," as an example:"),Object(l.a)(d.h,{mdxType:"Container"},Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token operator"},"!")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),"\n",Object(l.a)("span",{parentName:"code",className:"token number"},"2"),Object(l.a)("span",{parentName:"code",className:"token operator"},"!")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"2"),"\n",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token operator"},"!")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"2")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),"\n",Object(l.a)("span",{parentName:"code",className:"token number"},"4"),Object(l.a)("span",{parentName:"code",className:"token operator"},"!")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"2")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"*")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"4"),"\n"))),Object(l.a)("p",null,"We can immediately see that there is a lot of repetition here.\n",Object(l.a)("inlineCode",{parentName:"p"},"4!")," is equivalent to ",Object(l.a)("inlineCode",{parentName:"p"},"4 * 3!"),", and ",Object(l.a)("inlineCode",{parentName:"p"},"3! = 3 * 2!"),".\nThis holds true for every number until you reach ",Object(l.a)("inlineCode",{parentName:"p"},"1!")," which is just equivalent to itself."),Object(l.a)(u.a,{src:"/images/recursion-simple-demo.gif",mdxType:"Image"}),Object(l.a)("p",null,"This is exactly why recursion works here.\nIt is a bunch of subproblems that are steps to a larger problem, but if we solve them all individually and combine results, it calculates the answer."),Object(l.a)("p",null,"To calculate ",Object(l.a)("inlineCode",{parentName:"p"},"4!")," we need ",Object(l.a)("inlineCode",{parentName:"p"},"3!"),". To calculate ",Object(l.a)("inlineCode",{parentName:"p"},"3!")," we need ",Object(l.a)("inlineCode",{parentName:"p"},"2!"),".\nTo calculate ",Object(l.a)("inlineCode",{parentName:"p"},"2!"),", we need ",Object(l.a)("inlineCode",{parentName:"p"},"1!"),", which is just ",Object(l.a)("inlineCode",{parentName:"p"},"1")," and therefore the stopping condition."),Object(l.a)("p",null,"This is exactly how we did it in our code:"),Object(l.a)(A,{mdxType:"FactorialRecursionNesting"}),Object(l.a)("p",null,"The difficult part about understanding recursion is that you need to think of the problem backward and that each execution is its own step.\nEach time you call the function, it needs the result of the function call after it, so it must wait until that result is calculated."),Object(l.a)("p",null,"Since each step depends on a function call after it, these function calls stack up, and we must wait until it reaches the stopping condition which means it finally stops executing recursively.\nThen it passes the value from the stopping condition to the function call before, and this step can calculate its value.\nThen it yields the result to the step before it, and we unwind all the function calls this way until we reach our initial execution (",Object(l.a)("inlineCode",{parentName:"p"},"recursiveFactorial(4)"),")\nwhich will now be able to calculate the result."),Object(l.a)("p",null,"Being able to reduce a complex problem to a simple set of repeatable steps is when recursion becomes very powerful.\nLet's take a look in the next section at a case when recursion simplifies our solution.")),Object(l.a)(N.b,{mdxType:"Section"},Object(l.a)(b.a,{mdxType:"SubsectionHeader"},"Practical Example of Recursion"),Object(l.a)("p",null,"To see when recursive is helpful, we will flatten an array.\nThis is a very common scenario when you have nested items.\nFor example, it is analogous to comments/replies in a thread or files/folders/subfolders on your computer."),Object(l.a)("p",null,"We will also see that you can combine recursive and iterative techniques to build an optimal solution,\nas we do in the ",Object(l.a)("inlineCode",{parentName:"p"},"recursiveFlatten")," function."),Object(l.a)("p",null,"At this point, you don't need to fully grasp what's happening in the functions.\nThe important thing is to recognize that there are scenarios where recursion can simplify complex problems, and iteration can amplify them."),Object(l.a)("p",null,"Given a dynamic array of integers or nested arrays of integers, write a function ",Object(l.a)("inlineCode",{parentName:"p"},"flatten")," that creates a one-dimensional array of integers."),Object(l.a)(L,{mdxType:"FlattenArray"}),Object(l.a)("p",null,"The iterative flatten algorithm is pretty complex.\nThere is this ",Object(l.a)("inlineCode",{parentName:"p"},"while")," loop that will continue to run while we try to flatten the input.\nIt creates a new data structure where we have to continually add and remove items determined by if the current item is an array or an integer."),Object(l.a)("p",null,"On the other hand, our recursive solution just determines if each item is an array or not.\nIf it is an array, it calls ",Object(l.a)("inlineCode",{parentName:"p"},"recursiveFlatten")," with that item and combines it with the output.\nEach level of nesting is handled as its own subproblem in the recursive solution,\nbut the iterative solution must track the entire array while the algorithm flattens it."),Object(l.a)("p",null,"The iterative approach works well when the solution is very linear and performs a set number of operations.\nHowever, the iterative approach starts to get complex when we need to iterate an unknown number of times or if there can be branching or nesting.\nRecursion performs very well in these cases because it just treats each iteration/nesting/branching as a new subproblem and solves it individually.")),Object(l.a)(N.b,{mdxType:"Section"},Object(l.a)(b.a,{mdxType:"SubsectionHeader"},"Call Stack and Stack Overflow"),Object(l.a)("p",null,"We saw that with recursion, when we call functions in a nested manner,\nthey must wait until the stopping condition is reached because each step needs the result from the function that comes after it."),Object(l.a)("p",null,"This concept is known as the call stack, where each function call is added and creates a linear pile on top of each other.\nSince each consecutive function must wait on the result of another function before it can calculate the result for its own step, we're storing it in memory."),Object(l.a)("p",null,"This means recursive solutions require ",Object(l.a)(j.a.n,null)," space, where ",Object(l.a)("inlineCode",{parentName:"p"},"n")," is the size of the call stack \u2014 the number of recursive function calls for an arbitrarily large input."),Object(l.a)("p",null,"We often don't know the number of recursive calls required before we start executing a recursive function,\nand since computers have limited memory, it's possible that the number of function calls added to the call stack grows larger than what the computer's memory can hold.\nExceeding the size of memory available to the stack for function calls is known as a stack overflow and causes your program crash."),Object(l.a)(u.a,{src:"/images/stack-overflow-visual.png",mdxType:"Image"}),Object(l.a)("p",null,"We can see this happen by running the ",Object(l.a)("inlineCode",{parentName:"p"},"doRecursion")," function in the browser console."),Object(l.a)(u.a,{src:"/images/browser-stack-overflow.gif",mdxType:"Image"}),Object(l.a)("p",null,"Stack overflows are a huge downside to recursive solutions, and this is something that is always important to mention in an interview.\nWith the iterative solution, we don't build up a call stack in the same manner, so it operates with ",Object(l.a)(j.a.constant,null)," space as long as another data structure is not introduced."),Object(l.a)("p",null,"If an iterative vs. recursive solution have similar readability in terms of code quality,\nit is preferred to use the iterative solution since stack overflows can be an issue.\nIf a recursive solution is clearly more readable, or there is evidence to show the call stack won't overflow,\nyou can (and may be expected to) use the recursive solution."),Object(l.a)("h3",null,"Tail-Call Optimization"),Object(l.a)("p",null,"Some languages implement ",Object(l.a)("a",{href:"https://en.wikipedia.org/wiki/Tail_call",target:"_blank",rel:"noopener noreferrer"},"tail-call optimization")," where the recursive calls don't build a stack in memory, which reduces the space to ",Object(l.a)(j.a.constant,null),".\nThis removes a downside of recursion of incurring space complexity and potentially causing a stack overflow."),Object(l.a)("p",null,"The decision to include tail-call optimization is up to the language itself and often even the implementation of the language (ie. some versions of Python include it while others do not).")),Object(l.a)(N.b,{mdxType:"Section"},Object(l.a)(b.a,{mdxType:"SubsectionHeader"},"Recursion in Coding Interviews"),Object(l.a)("p",null,"Recursion is seen in interviews in three forms:"),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},"Repeated tasks that can be viewed as smaller subproblems"),Object(l.a)("li",{parentName:"ol"},"Iterating a data structure that has unknown length, nesting depth, or branching"),Object(l.a)("li",{parentName:"ol"},"Searching and sorting algorithms")),Object(l.a)("p",null,"Dynamic programming is commonly associated with solving a complex problem by treating it as the combination of simple subproblems.\nYou can use recursion with dynamic programming where you use memoization to store the result of recursive calls to prevent duplicate work.\nWe have a ",Object(l.a)("a",{href:"/".concat(O.b.Course,"/dynamic-programming")},"dynamic programming module")," in this course where you will learn this concept thoroughly."),Object(l.a)("p",null,"Traversing through data structures like linked lists, graphs, trees, and heaps is often done recursively.\nWe often don't know the length, depth of nesting, or amount of branching, and recursion allows us to handle it simply by treating each node as its own step."),Object(l.a)("p",null,"There is also an advanced technique known as backtracking that considers a tree of all possible results, recursively searches through them, and  produces an optimal solution by considering all the possible outcomes."),Object(l.a)("p",null,"Many searching and sorting methods break the input into smaller segments which directly aligns with how recursion approaches problems.\nYou will see examples of this throughout the course."),Object(l.a)("p",null,'Another term used to describe recursion is "divide and conquer".\nWe break our problem into smaller subproblems, solve each locally, and combine them into a final answer.'),Object(l.a)("p",null,"Keep in mind potential tradeoffs and downside to recursion:"),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},"Possibility for stack overflow"),Object(l.a)("li",{parentName:"ol"},"Repeated operations which can degrade time complexity")),Object(l.a)("p",null,"Stack overflows may be unavoidable, but the repeated operations can be fixed with memoization."),Object(l.a)("p",null,"Phrases that could indicate recursion is a candidate to solve a problem:"),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},'"Compute the ',Object(l.a)("inlineCode",{parentName:"li"},"nth"),' value". Example: Calculate the ',Object(l.a)("inlineCode",{parentName:"li"},"nth")," Fibonacci number"),Object(l.a)("li",{parentName:"ol"},'"Calculate all the values". Example: Calculate all the permutations of a string'),Object(l.a)("li",{parentName:"ol"},'"Find a path between two points". Example: Given two points, determine the shortest path between them.'))),Object(l.a)(N.b,{mdxType:"Section"},Object(l.a)(b.a,{mdxType:"SubsectionHeader"},"Popular Recursion Examples"),Object(l.a)("p",null,"To gain a better intuition for recursion, this section lists some popular recursive functions."),Object(l.a)("blockquote",null,Object(l.a)("p",{parentName:"blockquote"},"Note that these functions don't implement optimizations like memoization that will be covered later in the course.")),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Reverse a string")),Object(l.a)(B,{mdxType:"ReverseString"}),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Calculate the nth Fibonacci number")),Object(l.a)(Y,{mdxType:"Fibonacci"}),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},Object(l.a)("a",{href:"https://en.wikipedia.org/wiki/Tower_of_Hanoi",target:"_blank",rel:"noopener noreferrer"},"Tower of Hanoi"))),Object(l.a)(Q,{mdxType:"Hanoi"})),Object(l.a)(N.b,{mdxType:"Section"},Object(l.a)(b.a,{mdxType:"SubsectionHeader"},"Recursion in the Real-World"),Object(l.a)("p",null,"Recursion is a fundamental topic in computer science, but it appears in nature as well.\nExamples of this include trees, snowflakes, and shells.\nThey are the same pattern repeating horizontally and vertically to create their form.\nMany of these phenomena follow the Fibonacci sequence as well which is also a common recursive algorithm."),Object(l.a)(u.a,{src:"/images/natural-recursion.jpg",mdxType:"Image"}),Object(l.a)("p",null,"Programming has very similar patterns. For example, the folder structure on your computer and the DOM tree on a website are both represented and iterated recursively.\nAt any level there can be an infinite number of siblings or children."),Object(l.a)(u.a,{src:"/images/dom-tree.png",mdxType:"Image"}),Object(l.a)("p",null,"To walk the DOM purely iteratively, it would be incredibly challenging because we would have to track all the sibling and children nodes ourselves.\nHowever, using recursion we treat each level as a new subproblem, and if we encounter a child node, we recursively walk that.\nThis simplifies iterating the DOM into just a few lines of basic code. Copy the function below in your browser terminal to see."),Object(l.a)(o.a.Fragment,null),Object(l.a)(d.h,{mdxType:"Container"},Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursivelyWalkDom"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"node"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," currentNode ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," node",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token constant"},"ELEMENT_NODE")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    currentNode ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"firstChild"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(l.a)("span",{parentName:"code",className:"token console class-name"},"console"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"log"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"tagName"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token function"},"recursivelyWalkDom"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      currentNode ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"nextSibling"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token function"},"recursivelyWalkDom"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token dom variable"},"document"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))))}ee.isMDXComponent=!0;var ae=function(e){return c.createElement(p.a,Object(n.a)({},e,{Content:ee,video:m}))},te=!0;a.default=Object(r.a)((function(e){return c.useEffect((function(){e.lesson&&"ACTIVE"===e.lesson.status||(window.location.href="/course")}),[e]),e.lesson&&"ACTIVE"===e.lesson.status?c.createElement(s.a,Object(n.a)({},e,{Component:ae})):null}),{ssr:!1})},uqmq:function(e,a,t){"use strict";t.d(a,"b",(function(){return s})),t.d(a,"c",(function(){return r})),t.d(a,"a",(function(){return p}));var n=t("vOnD"),c=t("gWsq"),o=t("SOUA"),s=Object(n.e)(c.h).withConfig({componentId:"sc-16wjbcj-0"})(["margin-top:","px;"],o.a),r=Object(n.e)(s).withConfig({componentId:"sc-16wjbcj-1"})(["display:flex;justify-content:center;align-items:center;"]),p=n.e.div.withConfig({componentId:"sc-16wjbcj-2"})(["margin-top:","px;"],o.a)}},[["3GFW",0,1,4,6,5,9,12,11,13,14,15,18,17,2,3,7,8,10,16,19,20]]]);