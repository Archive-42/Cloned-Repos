_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[110],{Xwdg:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return ze}));var n=t("wx14"),o=t("q1tI"),c=t("NoRJ"),s=t("Qovc"),p=t("gh+C"),r=t("kB7q"),m=t("Ff2n"),u=t("7ljp"),l=t("rePB"),i=t("Utoj"),N=t("Jpar"),b={};function d(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("pre",{className:"language-javascript"},Object(u.a)("code",{parentName:"pre",className:"language-javascript"},Object(u.a)("span",{parentName:"code",className:"token keyword"},"const")," boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"4"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength",Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Answer: 7"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Ways to reach the end:"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 1,1,1,1"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 1,1,2"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 1,2,1"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 2,1,1"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 2,2"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 1,3"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 3,1"),"\n")))}d.isMDXComponent=!0;var j=Object(l.a)({},i.a.Javascript,o.createElement(d,null)),O=Object(N.a)(j),k={};function h(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},k,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)(O,{mdxType:"InputOutput"}))}h.isMDXComponent=!0;var w=t("JT+q"),f=Object(l.a)({},i.a.Javascript,"countTotalMoves"),g=Object(w.a)(f),y=t("gWsq"),v=t("vOnD"),T=v.e.div.withConfig({componentId:"sc-1r6ortu-0"})([""]),x=v.e.div.withConfig({componentId:"sc-1r6ortu-1"})(["text-align:center;font-weight:600;margin-bottom:6px;"]),M=v.e.div.withConfig({componentId:"sc-1r6ortu-2"})(["display:flex;justify-content:center;"]),L=v.e.div.withConfig({componentId:"sc-1r6ortu-3"})(["width:","px;height:","px;display:flex;align-items:center;justify-content:center;"],48,48),S=v.e.div.withConfig({componentId:"sc-1r6ortu-4"})(["width:","px;height:","px;background-color:",";border-radius:50%;"],24,24,(function(e){return e.theme.color.textPrimary})),C=v.e.div.withConfig({componentId:"sc-1r6ortu-5"})(["width:","px;height:","px;border:1px solid ",";"],48,48,(function(e){return e.theme.color.textPrimary})),E=v.e.div.withConfig({componentId:"sc-1r6ortu-6"})(["text-align:center;font-size:14px;font-weight:600;margin-top:4px;"]),D=function(e){var a=e.board,t=new Array(a).fill(0);return o.createElement(y.h,null,o.createElement(T,null,o.createElement(x,null,"Board Length: ",a),o.createElement(M,null,o.createElement("div",null,o.createElement(L,null,o.createElement(S,null)),o.createElement(E,null,"0")),t.map((function(e,a){return o.createElement("div",{key:a},o.createElement(L,null,o.createElement(C,null)),o.createElement(E,null,a+1))})))))},X={};function I(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},X,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,Object(u.a)("strong",{parentName:"p"},"Write a function ",Object(u.a)(g,{mdxType:"SolutionSignature"})," that calculates the total ways to reach the last spot in a board using any combination of 1, 2, and 3 jumps."),"\n",Object(u.a)("strong",{parentName:"p"},"The input for the function is the length of the board.")),Object(u.a)("p",null,"You are developing a game where players can move 1, 2, or 3 steps.\nThe board is a straight line, and you want to know the total number of ways you can reach the final spot for any combination of jumps."),Object(u.a)("p",null,'When we say "total number of ways", we mean the count of all the possible unique paths you can take to reach the end by jumping 1, 2, or 3 spots from any point.'),Object(u.a)("p",null,Object(u.a)("strong",{parentName:"p"},"NOTE: If the board length is 0 or 1, you can assume it is 1 total way in both cases"),".\nThis is an intentional decision by the interviewer which will allow you to focus on the logic of the solution.\nWith a board length of 0, there is no board at all which is an edge case where the starting and ending location converge,\nso we'll say the total number of ways for the piece to exist in the game is still 1 which is not performing any jumps.\nWith a board length of 1, the only combination of moves is using the 1-hop option.\nIf we instead said for a board length of 0 that the total moves is 0, it complicates the base cases and doesn't really provide any additional meaning.\nThere is an argument for length 0 to be either 0 or 1 moves with no \"right answer\", so we are opting for the simpler path."),Object(u.a)(h,{mdxType:"SampleInputOutput"}),Object(u.a)(D,{board:4,mdxType:"BoardExample"}))}I.isMDXComponent=!0;var W=I,B={};function A(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},B,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)(W,{mdxType:"QuestionStatement"}))}A.isMDXComponent=!0;var q=A,z={};function _(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},z,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,"A top-down approach is very elegant here.\nThink how to break this into subproblems and what your base cases would be."))}_.isMDXComponent=!0;var J={};function P(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},J,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,"Ensure you handle all cases for negative, zero, and positive board lengths."))}P.isMDXComponent=!0;var U=t("Ydbm"),R={};function V(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},R,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,"There is a lot of repeated work for a brute force recursive solution.\nThese are overlapping subproblems.\nFind a way to remove this to get a ",Object(u.a)(U.a.n,null)," time and space solution."))}V.isMDXComponent=!0;var Y=[_,P,V],F=t("jkan"),Q={};function G(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},Q,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("pre",{className:"language-javascript"},Object(u.a)("code",{parentName:"pre",className:"language-javascript"},Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Answer: 1"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Moves:"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 1"),"\n\n",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token number"},"2"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Answer: 2"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Moves:"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 1, 1"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 2"),"\n\n",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token number"},"3"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Answer: 4"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Moves:"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 1, 1, 1"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 1, 2"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 2, 1"),"\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// 3"),"\n")))}G.isMDXComponent=!0;var H=Object(l.a)({},i.a.Javascript,o.createElement(G,null)),K=Object(N.a)(H),Z={};function $(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},Z,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,"Let's first think through the simple cases and understand the problem better."),Object(u.a)(K,{mdxType:"ExampleMoves"}),Object(u.a)("p",null,"And from the example in the question prompt, we saw that reaching a board length of 4 is a combined 7 possible paths."),Object(u.a)("p",null,"As we continue on, this gets complex very quickly.\nEven by going from a board length of 4 to 5, we greatly increase the number of possible paths to 13.\nCount them below to see."),Object(u.a)("div",{style:{marginTop:"24px"}},Object(u.a)(D,{board:5,mdxType:"BoardExample"})),Object(u.a)("p",null,"What if we instead thought about this top-down?"),Object(u.a)("p",null,"If we consider the final spot, since our piece can only move 1-3 steps at a time, the only way to reach the end is from the prior 3 spots on the board.\nLet's consider the case if the board has 100 squares."),Object(u.a)(F.a,{src:"/images/board-100.png",mdxType:"Image"}))}$.isMDXComponent=!0;var ee={};function ae(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},ee,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("pre",{className:"language-javascript"},Object(u.a)("code",{parentName:"pre",className:"language-javascript"},"totalMoves ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"2"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"3"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}ae.isMDXComponent=!0;var te=Object(l.a)({},i.a.Javascript,o.createElement(ae,null)),ne=Object(N.a)(te),oe={};function ce(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},oe,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("pre",{className:"language-javascript"},Object(u.a)("code",{parentName:"pre",className:"language-javascript"},Object(u.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token parameter"},"boardLength"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Base case 1: Invalid board length"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"<")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Base case 2: Introduction says length 0 is still 1 step"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Recursive case"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+"),"\n      ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"2"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+"),"\n      ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"3"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}ce.isMDXComponent=!0;var se=Object(l.a)({},i.a.Javascript,o.createElement(ce,null)),pe=Object(N.a)(se),re={};function me(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},re,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,"We can only reach spot 100 from spot 99, 98, and 97.\nIf we can figure out the number of ways to reach (end - 1 jump), (end - 2 jumps), and (end - 3 jumps),\nwe will automatically know the total ways to reach the destination."),Object(u.a)("p",null,"But then for spot 99, 98, and 97, they can only be reached from 1 to 3 spots prior to each of them respectively since these are the only moves we make from these locations."),Object(u.a)("p",null,"We can see that we have subproblems forming.\nWe're able to find the total number of ways to reach any spot on the board if we know the total number of ways to reach the prior 3 spots since the steps we can take from any location is 1, 2, or 3 hops."),Object(u.a)("p",null,"Let's visualize this using our sample input/output where we had a board length of 4:"),Object(u.a)(F.a,{src:"/images/three-moves-example.png",mdxType:"Image"}),Object(u.a)("ul",null,Object(u.a)("li",{parentName:"ul"},"There is 1 path to reach the final spot by going through spot 1"),Object(u.a)("li",{parentName:"ul"},"There are 2 paths to reach the final spot by going through spot 2"),Object(u.a)("li",{parentName:"ul"},"There are 4 paths to reach the final spot by going through spot 3")),Object(u.a)("p",null,"So since we reach spot 1 once and then do a 3-jump, this is 1 path to the final spot.\nWe reach spot 2 twice and do a 2-jump both times which is 2 paths to the final spot.\nWe reach spot 3 four times and do a 1-jump which is 4 paths to the final spot."),Object(u.a)("p",null,"If we count the number of ways to the final spot from these 3 prior spots, we see it is our solution of 7.\nThere are 7 total unique paths to reach spot 4 by using a 1-jump, 2-jumps, and 3-jumps from the three previous spots."),Object(u.a)(F.a,{src:"/images/sum-of-moves.png",mdxType:"Image"}),Object(u.a)("p",null,"Also notice that we're only counting the ways to reach the final spot and not any of the spots in between.\nWhen we found the number of ways to reach spot 2, this already accounted for the fact that we had a path ",Object(u.a)("inlineCode",{parentName:"p"},"1,1")," which went through spot 1.\nWhen we looked at the paths to reach spot 3, this already accounted for the ways to reach spot 3 by going through both spots 1 and 2.\nWe'll see in a moment, this is formally defined because they were already accounted for when solving each prior spot's subproblem."),Object(u.a)("p",null,"There is a path to the final spot through the 3 prior spots.\nSo if we sum the total number of ways to reach the 3 prior spots on the board,\nthis produces the combination of total unique paths to reach the final spot."),Object(u.a)("p",null,"And this is true for ",Object(u.a)("em",{parentName:"p"},"any")," board length."),Object(u.a)("p",null,"To express it in code, to count the ways to reach any board length\nwe sum the number of ways to reach the 3 spots prior:"),Object(u.a)(ne,{mdxType:"SimpleSum"}),Object(u.a)("p",null,"And how do we know the number of ways to find those spots?\nFor each, we simply need the number of ways to reach any of the 3 spots to it."),Object(u.a)("p",null,"This logic shows we've found repeating subproblems!\nIf we were to express this recursively it would be:"),Object(u.a)(pe,{mdxType:"RecursiveSolution"}))}me.isMDXComponent=!0;var ue={};function le(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},ue,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,"Excellent! We thought through our subproblems and a very simple and elegant recursive solution fell out of it.\nWe have two stopping conditions: if the board length is less than 0 or exactly 0.\nThe constraint in the introduction said to consider length 0 to be 1 total move which made this solution work nicely."),Object(u.a)("p",null,"We're not quite done yet though.\nYou may have noticed that to reach any spot on the board, we calculate the total number of paths to reach prior spots multiple times.\nThis means we're doing a ton of duplicate work, and not only do we have subproblems, but we have ",Object(u.a)("em",{parentName:"p"},"overlapping")," subproblems.\nThis causes Big O time of ",Object(u.a)(U.a.bin,{base:3}),"."),Object(u.a)("p",null,"If we visualize it as a recursive tree we get:"),Object(u.a)(F.a,{src:"/images/three-moves-recursive-tree.png",isVisuAlgo:!0,mdxType:"Image"}),Object(u.a)("p",null,"To remove these repeated operations, we can memoize the path count to reach a spot.\nAfter we calculate the solution to a subproblem the first time, we'll store the number of ways to reach this location in an array.\nThen when we need that subproblem solution again to calculate the answer to future subproblems, we can just read it from this data structure."),Object(u.a)("p",null,"The blue circles in the image above indicate that a value has already been calculated, and that we should use the memoized result.\nThe red numbers indicate the total combination of unique ways to reach any subproblem board length, and we see that for five squares, the total paths is 13."),Object(u.a)("p",null,"With this, we can write an optimal solution."))}le.isMDXComponent=!0;var ie=[$,me,le],Ne=t("lcwc"),be=(t("PH+U"),t("S2YG")),de={};function je(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},de,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,"In this question, we solved a classic dynamic programming problem using recursion with memoization.\nIt is dynamic programming because to calculate the number of moves for any board length,\nwe need to calculate the moves required for the three spots before it.\nWe recursively solve these subproblems down to our base case and build up the solution to each subproblem and memoize the results."),Object(u.a)("ul",null,Object(u.a)("li",{parentName:"ul"},"Recognize subproblems to create a simple top-down solution"),Object(u.a)("li",{parentName:"ul"},"Recognize that subproblems are overlapping"),Object(u.a)("li",{parentName:"ul"},"Memoize repeated work to create an ",Object(u.a)(U.a.n,null)," solution")))}je.isMDXComponent=!0;var Oe=je,ke={};function he(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},ke,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("pre",{className:"language-javascript"},Object(u.a)("code",{parentName:"pre",className:"language-javascript"},Object(u.a)("span",{parentName:"code",className:"token comment"},"// We will using -1 to indicate unfilled spot"),"\n",Object(u.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(u.a)("span",{parentName:"code",className:"token constant"},"UNCOUNTED_SPOT")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-"),Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(u.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token parameter"},"boardLength"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Initialize our memoize array"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"const")," memo ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(u.a)("span",{parentName:"code",className:"token class-name"},"Array"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(u.a)("span",{parentName:"code",className:"token method function property-access"},"fill"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token constant"},"UNCOUNTED_SPOT"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"const")," totalMoves ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMovesMemoized"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength",Object(u.a)("span",{parentName:"code",className:"token punctuation"},",")," memo",Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," totalMoves",Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Recursive helper function that also tracks memoized values"),"\n",Object(u.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMovesMemoized"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token parameter"},"boardLength",Object(u.a)("span",{parentName:"span",className:"token punctuation"},",")," memo"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Base case 1: Invalid board length"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"<")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Base case 2: Prompt says length 0 is still 1 step"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"memo",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"["),"boardLength",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(u.a)("span",{parentName:"code",className:"token constant"},"UNCOUNTED_SPOT"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," memo",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"["),"boardLength",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Recursive case (and memoize its result)"),"\n    memo",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"["),"boardLength",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMovesMemoized"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},",")," memo",Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+"),"\n      ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMovesMemoized"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"2"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},",")," memo",Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+"),"\n      ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMovesMemoized"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"3"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},",")," memo",Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return"),"  memo",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"["),"boardLength",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}he.isMDXComponent=!0;var we=Object(l.a)({},i.a.Javascript,o.createElement(he,null)),fe=Object(N.a)(we),ge={};function ye(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},ge,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("pre",{className:"language-javascript"},Object(u.a)("code",{parentName:"pre",className:"language-javascript"},Object(u.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token parameter"},"boardLength"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"boardLength ",Object(u.a)("span",{parentName:"code",className:"token operator"},"<")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"let")," threeSpotBack ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"let")," twoSpotsBack ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"let")," oneSpotBack ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(u.a)("span",{parentName:"code",className:"token operator"},"<")," boardLength",Object(u.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(u.a)("span",{parentName:"code",className:"token operator"},"++"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"let")," finalSpot ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," oneSpotBack ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+")," twoSpotsBack ",Object(u.a)("span",{parentName:"code",className:"token operator"},"+")," threeSpotBack",Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    threeSpotBack ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," twoSpotsBack",Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    twoSpotsBack ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," oneSpotBack",Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    oneSpotBack ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," finalSpot",Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// We return oneSpotBack because it was actually updated to the finalSpot"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// during the last iteration of the loop when we moved values forward"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," oneSpotBack",Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n")))}ye.isMDXComponent=!0;var ve=Object(l.a)({},i.a.Javascript,o.createElement(ye,null)),Te=Object(N.a)(ve),xe={};function Me(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},xe,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("p",null,"We calculate the result by recursively finding the number of ways to reach the three spots before any board location and sum them together.\nThis introduces overlapping subproblems, so we memoize the values once we calculate the paths required to reach any location."),Object(u.a)("p",null,"We initialize our ",Object(u.a)("inlineCode",{parentName:"p"},"memo")," array to ",Object(u.a)("inlineCode",{parentName:"p"},"-1")," which indicates we haven't calculated that location's number of paths."),Object(u.a)("p",null,"As with any recursive solution, we must have base cases.\nOur stopping conditions here are when the board length is less than 0 or exactly 0.\nBased on the problem statement, we know we can view a length of 0 to require 1 move.\nA negative number is an invalid board length, so we return 0 moves."),Object(u.a)(fe,{mdxType:"SolutionCode"}),Object(u.a)(Ne.a,{mdxType:"ComplexitySubtitle"}),Object(u.a)("p",null,Object(u.a)(U.a.n,null)," time and ",Object(u.a)(U.a.n,null)," space where ",Object(u.a)("code",null,"n")," is the total length of the board"),Object(u.a)("p",null,"The brute force recursive solution has a very bad time complexity of ",Object(u.a)(U.a.bin,{base:3}),".\nHowever, we removed the repeated work by memoizing values which improved the time to ",Object(u.a)(U.a.n,null)," by adding ",Object(u.a)(U.a.n,null)," space.\nWe calculate the total number of ways to reach any board location once."),Object(u.a)("h3",null,"Bonus"),Object(u.a)("p",null,"This question actually turns into an easy iterative solution that is similar to how we calculate a Fibonacci number, but we have three values.\nAt any point, we solve its subproblem by summing the total number of ways to reach the prior 3 spots.\nBy using the bottom-up approach, you can remove the ",Object(u.a)(U.a.n,null)," space cost."),Object(u.a)(Te,{mdxType:"IterativeSolutionCode"}),Object(u.a)(be.a,{mdxType:"LearningOutcomesSubtitle"}),Object(u.a)(Oe,{mdxType:"LearningOutcomes"}))}Me.isMDXComponent=!0;var Le=Me,Se={};function Ce(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},Se,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("pre",{className:"language-javascript"},Object(u.a)("code",{parentName:"pre",className:"language-javascript"},Object(u.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token parameter"},"boardLength"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token comment"},"// Your solution here"),"\n",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}Ce.isMDXComponent=!0;var Ee=Object(l.a)({},i.a.Javascript,o.createElement(Ce,null)),De=function(e){return Ee[e]},Xe={};function Ie(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(u.a)("wrapper",Object(n.a)({},Xe,t,{components:a,mdxType:"MDXLayout"}),Object(u.a)("pre",{className:"language-javascript"},Object(u.a)("code",{parentName:"pre",className:"language-javascript"},Object(u.a)("span",{parentName:"code",className:"token keyword"},"const")," tests ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"["),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"-"),Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token string"},"'invalid'"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"0"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token string"},"'empty'"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"1"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token string"},"'1'"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"2"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"2"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token string"},"'2'"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"3"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"4"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token string"},"'3'"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"4"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"7"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token string"},"'4'"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"5"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"13"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token string"},"'5'"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"10"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token number"},"274"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(u.a)("span",{parentName:"code",className:"token string"},"'10'"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(u.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(u.a)("span",{parentName:"code",className:"token function-variable function"},"validate")," ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(u.a)("span",{parentName:"code",className:"token parameter"},Object(u.a)("span",{parentName:"span",className:"token punctuation"},"{")," input",Object(u.a)("span",{parentName:"span",className:"token punctuation"},",")," expected",Object(u.a)("span",{parentName:"span",className:"token punctuation"},",")," description ",Object(u.a)("span",{parentName:"span",className:"token punctuation"},"}")),Object(u.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(u.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"const")," userAnswer ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(u.a)("span",{parentName:"code",className:"token function"},"countTotalMoves"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},"("),"input",Object(u.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"const")," passed ",Object(u.a)("span",{parentName:"code",className:"token operator"},"=")," userAnswer ",Object(u.a)("span",{parentName:"code",className:"token operator"},"===")," expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(u.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"{")," passed",Object(u.a)("span",{parentName:"code",className:"token punctuation"},",")," description",Object(u.a)("span",{parentName:"code",className:"token punctuation"},",")," expected",Object(u.a)("span",{parentName:"code",className:"token punctuation"},",")," userAnswer ",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(u.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(u.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}Ie.isMDXComponent=!0;var We=Object(l.a)({},i.a.Javascript,o.createElement(Ie,null)),Be=function(e){return We[e]},Ae={segments:[{name:"Introduction",startTimeSeconds:0,endTimeSeconds:9},{name:"Question Prompt",startTimeSeconds:9,endTimeSeconds:120},{name:"Solution Breakdown",startTimeSeconds:120,endTimeSeconds:827},{name:"Solution Summary and Big O",startTimeSeconds:827,endTimeSeconds:912},{name:"Code Walkthrough",startTimeSeconds:912,endTimeSeconds:1177}]},qe=function(e){var a=e.hasLessonAccess;return o.createElement(p.a,Object(n.a)({},e,{Introduction:q,QuestionStatement:W,Solution:a?Le:r.a,LearningOutcomes:a?Oe:null,validationItems:Y,explanationItems:a?ie:[],getUserAnswer:De,getTests:a?Be:r.b,getSolutionCode:a?fe:r.b,video:Ae}))},ze=!0;a.default=Object(s.a)((function(e){return o.useEffect((function(){e.lesson&&"ACTIVE"===e.lesson.status||(window.location.href="/course")}),[e]),e.lesson&&"ACTIVE"===e.lesson.status?o.createElement(c.a,Object(n.a)({},e,{Component:qe})):null}),{ssr:!1})},"f+sV":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/three-moves",function(){return t("Xwdg")}])},jkan:function(e,a,t){"use strict";var n=t("q1tI"),o=t("vOnD"),c=t("uqmq"),s=t("5nwr"),p=Object(o.e)(c.b).withConfig({componentId:"sc-1u1nk7e-0"})(["display:flex;justify-content:center;align-items:center;flex-direction:column;"]),r=o.e.img.withConfig({componentId:"sc-1u1nk7e-1"})(["border-radius:6px;max-width:",";","{max-width:100% !important;}"],(function(e){var a=e.maxWidth;return a?"".concat(a," !important"):"100%"}),Object(s.b)()),m=o.e.div.withConfig({componentId:"sc-1u1nk7e-2"})(["margin-top:4px;font-size:12px;color:",";text-align:center;width:100%;a,a:hover,a:visited{color:",";text-decoration:underline;}"],(function(e){return e.theme.color.textSecondary}),(function(e){return e.theme.color.textSecondary})),u=function(){return n.createElement("span",null,"Credit:"," ",n.createElement("a",{href:"https://visualgo.net/",target:"_blank",rel:"noopener noreferrer"},"VisuAlgo"))},l=function(e){var a=e.src,t=e.credit,o=e.isVisuAlgo,c=e.maxWidth;return n.createElement(p,null,n.createElement(r,{maxWidth:c,src:a}),!!t&&n.createElement(m,null,t),!!o&&n.createElement(m,null,n.createElement(u,null)))};a.a=l},uqmq:function(e,a,t){"use strict";t.d(a,"b",(function(){return s})),t.d(a,"c",(function(){return p})),t.d(a,"a",(function(){return r}));var n=t("vOnD"),o=t("gWsq"),c=t("SOUA"),s=Object(n.e)(o.h).withConfig({componentId:"sc-16wjbcj-0"})(["margin-top:","px;"],c.a),p=Object(n.e)(s).withConfig({componentId:"sc-16wjbcj-1"})(["display:flex;justify-content:center;align-items:center;"]),r=n.e.div.withConfig({componentId:"sc-16wjbcj-2"})(["margin-top:","px;"],c.a)}},[["f+sV",0,1,4,6,5,9,12,11,13,14,15,18,17,21,2,3,7,8,10,16,19,22,23,24]]]);