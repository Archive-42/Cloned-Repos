// Auto-generated by yarn workspace typescriptlang-org compile-index-examples
import React from "react"

const innerHTML = `<div class='code-container'><code><span style="color: #569CD6">import</span><span style="color: #D4D4D4"> <data-lsp lsp='(alias) function express(): core.Express&amp;#13;(alias) namespace express&amp;#13;import express'>express</data-lsp> </span><span style="color: #569CD6">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">"express"</span>
<span style="color: #569CD6">const</span><span style="color: #D4D4D4"> <data-lsp lsp='const app: Express'>app</data-lsp> = <data-lsp lsp='(alias) express(): Express&amp;#13;import express'>express</data-lsp>()</span>

<span style="color: #D4D4D4"><data-lsp lsp='const app: Express'>app</data-lsp>.<data-lsp lsp='(property) Application.get: &amp;lt;ParamsDictionary, any, any, QueryString.ParsedQs>(path: PathParams, ...handlers: RequestHandler&amp;lt;ParamsDictionary, any, any, QueryString.ParsedQs>[]) => Express (+3 overloads)'>get</data-lsp>(</span><span style="color: #CE9178">"/"</span><span style="color: #D4D4D4">, </span><span style="color: #569CD6">function</span><span style="color: #D4D4D4"> (<data-lsp lsp='(parameter) req: Request&amp;lt;ParamsDictionary, any, any, QueryString.ParsedQs>'>req</data-lsp>, <data-lsp lsp='(parameter) res: Response&amp;lt;any>'>res</data-lsp>) {</span>
<span style="color: #D4D4D4">  <data-lsp lsp='(parameter) res: Response&amp;lt;any>'>res</data-lsp>.<data-lsp lsp='any'>sen</data-lsp></span>
         <span class='inline-completions'><ul class='dropdown'><li class=''><span><span class='result-found'>sen</span>d<span></li><li class=''><span><span class='result-found'>sen</span>dDate<span></li><li class='deprecated'><span><span class='result-found'>sen</span>dfile<span></li><li class=''><span><span class='result-found'>sen</span>dFile<span></li><li class=''><span><span class='result-found'>sen</span>dStatus<span></li></ul></span>
<span style="color: #D4D4D4">})</span>

<span style="color: #D4D4D4"><data-lsp lsp='const app: Express'>app</data-lsp>.<data-lsp lsp='(method) Application.listen(port: number, callback?: ((...args: any[]) => void) | undefined): Server (+5 overloads)'>listen</data-lsp>(</span><span style="color: #B5CEA8">3000</span><span style="color: #D4D4D4">)</span></code><a href='https://www.typescriptlang.org/play/#code/PTAEAEDsHsFECd7XgZwFAggUxQWWgCYCuANlgJKQAuWSADmgJYC2dyVoWAHnfDiqABmSZqABE3XvzFoAxtEgoOAQzp1QAXk48+KFAAoAlGjSq6AOgDmWKvrHAxAGiFFIsqowWh9fAI7PdQ1AAbzRQUF1zFCxIDDBwhNAAPQAfNABfY1M1cxJGJRj9AGYABjLjIA'>Try</a></div>`

export const TypeDefinitionsExample = () => <pre className='shiki twoslash lsp' dangerouslySetInnerHTML={{ __html: innerHTML }} />
