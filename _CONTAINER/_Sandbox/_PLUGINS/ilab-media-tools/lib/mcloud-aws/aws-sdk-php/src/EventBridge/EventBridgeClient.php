<?php

namespace MediaCloud\Vendor\Aws\EventBridge;
use MediaCloud\Vendor\Aws\AwsClient;

/**
 * This client is used to interact with the **Amazon EventBridge** service.
 * @method \MediaCloud\Vendor\Aws\Result activateEventSource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise activateEventSourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createEventBus(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createEventBusAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createPartnerEventSource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createPartnerEventSourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deactivateEventSource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deactivateEventSourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteEventBus(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteEventBusAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deletePartnerEventSource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deletePartnerEventSourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteRule(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteRuleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeEventBus(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeEventBusAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeEventSource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeEventSourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describePartnerEventSource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describePartnerEventSourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeRule(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeRuleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result disableRule(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise disableRuleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result enableRule(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise enableRuleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listEventBuses(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listEventBusesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listEventSources(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listEventSourcesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listPartnerEventSourceAccounts(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listPartnerEventSourceAccountsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listPartnerEventSources(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listPartnerEventSourcesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listRuleNamesByTarget(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listRuleNamesByTargetAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listRules(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listRulesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listTagsForResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listTagsForResourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listTargetsByRule(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listTargetsByRuleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result putEvents(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise putEventsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result putPartnerEvents(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise putPartnerEventsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result putPermission(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise putPermissionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result putRule(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise putRuleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result putTargets(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise putTargetsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result removePermission(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise removePermissionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result removeTargets(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise removeTargetsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result tagResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise tagResourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result testEventPattern(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise testEventPatternAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result untagResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise untagResourceAsync(array $args = [])
 */
class EventBridgeClient extends AwsClient {}
