<?php

namespace MediaCloud\Vendor\Aws\DatabaseMigrationService;
use MediaCloud\Vendor\Aws\AwsClient;

/**
 * This client is used to interact with the **AWS Database Migration Service** service.
 * @method \MediaCloud\Vendor\Aws\Result addTagsToResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise addTagsToResourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result applyPendingMaintenanceAction(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise applyPendingMaintenanceActionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result cancelReplicationTaskAssessmentRun(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise cancelReplicationTaskAssessmentRunAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createEndpoint(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createEndpointAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createEventSubscription(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createEventSubscriptionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createReplicationInstance(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createReplicationInstanceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createReplicationSubnetGroup(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createReplicationSubnetGroupAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createReplicationTask(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createReplicationTaskAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteCertificate(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteCertificateAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteConnection(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteConnectionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteEndpoint(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteEndpointAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteEventSubscription(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteEventSubscriptionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteReplicationInstance(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteReplicationInstanceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteReplicationSubnetGroup(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteReplicationSubnetGroupAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteReplicationTask(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteReplicationTaskAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteReplicationTaskAssessmentRun(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteReplicationTaskAssessmentRunAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeAccountAttributes(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeAccountAttributesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeApplicableIndividualAssessments(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeApplicableIndividualAssessmentsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeCertificates(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeCertificatesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeConnections(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeConnectionsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeEndpointTypes(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeEndpointTypesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeEndpoints(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeEndpointsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeEventCategories(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeEventCategoriesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeEventSubscriptions(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeEventSubscriptionsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeEvents(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeEventsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeOrderableReplicationInstances(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeOrderableReplicationInstancesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describePendingMaintenanceActions(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describePendingMaintenanceActionsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeRefreshSchemasStatus(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeRefreshSchemasStatusAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeReplicationInstanceTaskLogs(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeReplicationInstanceTaskLogsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeReplicationInstances(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeReplicationInstancesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeReplicationSubnetGroups(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeReplicationSubnetGroupsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeReplicationTaskAssessmentResults(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeReplicationTaskAssessmentResultsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeReplicationTaskAssessmentRuns(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeReplicationTaskAssessmentRunsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeReplicationTaskIndividualAssessments(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeReplicationTaskIndividualAssessmentsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeReplicationTasks(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeReplicationTasksAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeSchemas(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeSchemasAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeTableStatistics(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeTableStatisticsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result importCertificate(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise importCertificateAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listTagsForResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listTagsForResourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result modifyEndpoint(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise modifyEndpointAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result modifyEventSubscription(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise modifyEventSubscriptionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result modifyReplicationInstance(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise modifyReplicationInstanceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result modifyReplicationSubnetGroup(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise modifyReplicationSubnetGroupAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result modifyReplicationTask(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise modifyReplicationTaskAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result rebootReplicationInstance(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise rebootReplicationInstanceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result refreshSchemas(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise refreshSchemasAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result reloadTables(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise reloadTablesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result removeTagsFromResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise removeTagsFromResourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result startReplicationTask(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise startReplicationTaskAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result startReplicationTaskAssessment(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise startReplicationTaskAssessmentAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result startReplicationTaskAssessmentRun(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise startReplicationTaskAssessmentRunAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result stopReplicationTask(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise stopReplicationTaskAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result testConnection(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise testConnectionAsync(array $args = [])
 */
class DatabaseMigrationServiceClient extends AwsClient {}
