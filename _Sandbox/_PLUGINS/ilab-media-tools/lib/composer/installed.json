[
    {
        "name": "mcloud-aws/aws-sdk-php",
        "version": "3.150.3",
        "version_normalized": "3.150.3.0",
        "dist": {
            "type": "path",
            "url": "../library/aws/aws-sdk-php",
            "reference": "6c1ea27df797633bbb9542227444b0feb64c296b",
            "shasum": null
        },
        "require": {
            "ext-json": "*",
            "ext-pcre": "*",
            "ext-simplexml": "*",
            "mcloud-guzzlehttp/guzzle": "6.5.5",
            "mcloud-guzzlehttp/promises": "v1.3.1",
            "mcloud-guzzlehttp/psr7": "1.6.1",
            "mcloud-mtdowling/jmespath.php": "2.6.0",
            "php": ">=5.5"
        },
        "require-dev": {
            "andrewsville/php-token-reflection": "^1.4",
            "aws/aws-php-sns-message-validator": "~1.0",
            "behat/behat": "~3.0",
            "doctrine/cache": "~1.4",
            "ext-dom": "*",
            "ext-openssl": "*",
            "ext-pcntl": "*",
            "ext-sockets": "*",
            "nette/neon": "^2.3",
            "paragonie/random_compat": ">= 2",
            "phpunit/phpunit": "^4.8.35|^5.4.3",
            "psr/cache": "^1.0",
            "psr/simple-cache": "^1.0",
            "sebastian/comparator": "^1.2.3"
        },
        "suggest": {
            "aws/aws-php-sns-message-validator": "To validate incoming SNS notifications",
            "doctrine/cache": "To use the DoctrineCacheAdapter",
            "ext-curl": "To send requests using cURL",
            "ext-openssl": "Allows working with CloudFront private distributions and verifying received SNS messages",
            "ext-sockets": "To use client-side monitoring"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Aws\\": "src/"
            },
            "files": [
                "src/functions.php"
            ]
        },
        "autoload-dev": {
            "psr-4": {
                "Aws\\Test\\": "tests/"
            },
            "classmap": [
                "build/"
            ]
        },
        "license": [
            "Apache-2.0"
        ],
        "authors": [
            {
                "name": "Amazon Web Services",
                "homepage": "http://aws.amazon.com"
            }
        ],
        "description": "AWS SDK for PHP - Use Amazon Web Services in your PHP project",
        "homepage": "http://aws.amazon.com/sdkforphp",
        "keywords": [
            "amazon",
            "aws",
            "cloud",
            "dynamodb",
            "ec2",
            "glacier",
            "s3",
            "sdk"
        ],
        "support": {
            "forum": "https://forums.aws.amazon.com/forum.jspa?forumID=80",
            "issues": "https://github.com/aws/aws-sdk-php/issues"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-defuse/php-encryption",
        "version": "v2.2.1",
        "version_normalized": "2.2.1.0",
        "dist": {
            "type": "path",
            "url": "../library/defuse/php-encryption",
            "reference": "d3369a9902a7c966eb05ba189bb84cc23bbafed6",
            "shasum": null
        },
        "require": {
            "ext-openssl": "*",
            "mcloud-paragonie/random_compat": "v2.0.18",
            "php": ">=5.4.0"
        },
        "require-dev": {
            "nikic/php-parser": "^2.0|^3.0|^4.0",
            "phpunit/phpunit": "^4|^5"
        },
        "bin": [
            "bin/generate-defuse-key"
        ],
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Defuse\\Crypto\\": "src"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Taylor Hornby",
                "email": "taylor@defuse.ca",
                "homepage": "https://defuse.ca/"
            },
            {
                "name": "Scott Arciszewski",
                "email": "info@paragonie.com",
                "homepage": "https://paragonie.com"
            }
        ],
        "description": "Secure PHP Encryption Library",
        "keywords": [
            "AES",
            "authenticated encryption",
            "cipher",
            "crypto",
            "cryptography",
            "encrypt",
            "encryption",
            "openssl",
            "security",
            "symmetric key cryptography"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-doctrine/inflector",
        "version": "1.3.1",
        "version_normalized": "1.3.1.0",
        "dist": {
            "type": "path",
            "url": "../library/doctrine/inflector",
            "reference": "70ac6f06c889fa8273b7aaea77b1b792b9dbf9de",
            "shasum": null
        },
        "require": {
            "php": "^7.1"
        },
        "require-dev": {
            "phpunit/phpunit": "^6.2"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Doctrine\\Common\\Inflector\\": "lib/Doctrine/Common/Inflector"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Doctrine\\Tests\\Common\\Inflector\\": "tests/Doctrine/Tests/Common/Inflector"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Guilherme Blanco",
                "email": "guilhermeblanco@gmail.com"
            },
            {
                "name": "Roman Borschel",
                "email": "roman@code-factory.org"
            },
            {
                "name": "Benjamin Eberlei",
                "email": "kontakt@beberlei.de"
            },
            {
                "name": "Jonathan Wage",
                "email": "jonwage@gmail.com"
            },
            {
                "name": "Johannes Schmitt",
                "email": "schmittjoh@gmail.com"
            }
        ],
        "description": "Common String Manipulations with regard to casing and singular/plural rules.",
        "homepage": "http://www.doctrine-project.org",
        "keywords": [
            "inflection",
            "pluralize",
            "singularize",
            "string"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-dragonmantank/cron-expression",
        "version": "3.0.1",
        "version_normalized": "3.0.1.0",
        "dist": {
            "type": "path",
            "url": "../library/dragonmantank/cron-expression",
            "reference": "7782e1d82dff5dbfe0fadb43862ed0cca9aadf44",
            "shasum": null
        },
        "require": {
            "php": "^7.1"
        },
        "replace": {
            "mtdowling/cron-expression": "^1.0"
        },
        "require-dev": {
            "phpstan/phpstan": "^0.11",
            "phpunit/phpunit": "^6.4|^7.0"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Cron\\": "src/Cron/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Cron\\Tests\\": "tests/Cron/"
            }
        },
        "scripts": {
            "phpstan": [
                "./vendor/bin/phpstan analyse -l 0 src tests"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Chris Tankersley",
                "email": "chris@ctankersley.com",
                "homepage": "https://github.com/dragonmantank"
            }
        ],
        "description": "CRON for PHP: Calculate the next or previous run date and determine if a CRON expression is due",
        "keywords": [
            "cron",
            "schedule"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-duncan3dc/blade",
        "version": "4.6.0",
        "version_normalized": "4.6.0.0",
        "dist": {
            "type": "path",
            "url": "../library/duncan3dc/blade",
            "reference": "30257b257efa4718dd8cc1b0c0d6e7bb80838ee2",
            "shasum": null
        },
        "require": {
            "mcloud-illuminate/contracts": "v5.5.44",
            "mcloud-illuminate/events": "v5.5.44",
            "mcloud-illuminate/filesystem": "v5.5.44",
            "mcloud-illuminate/view": "v5.5.44",
            "php": "^7.1"
        },
        "require-dev": {
            "duncan3dc/object-intruder": "^0.3.0",
            "maglnet/composer-require-checker": "^2.0",
            "mockery/mockery": "^1.2",
            "phpstan/phpstan": "^0.11",
            "phpstan/phpstan-mockery": "^0.11",
            "phpstan/phpstan-phpunit": "^0.11",
            "phpunit/phpunit": "^7.3",
            "squizlabs/php_codesniffer": "^3.4"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\duncan3dc\\Laravel\\": "src/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "duncan3dc\\LaravelTests\\": "tests/"
            }
        },
        "scripts": {
            "test": [
                "vendor/bin/phpunit",
                "vendor/bin/composer-require-checker",
                "vendor/bin/phpstan analyse --level=max src",
                "vendor/bin/phpstan analyse --level=max --configuration=phpstan-tests.neon tests",
                "vendor/bin/phpcs --standard=phpcs.xml"
            ]
        },
        "license": [
            "Apache-2.0"
        ],
        "authors": [
            {
                "name": "Craig Duncan",
                "email": "git@duncanc.co.uk",
                "homepage": "https://github.com/duncan3dc",
                "role": "Developer"
            }
        ],
        "description": "Use Laravel Blade templates without the full Laravel framework",
        "homepage": "https://github.com/duncan3dc/blade",
        "keywords": [
            "laravel",
            "template",
            "templating",
            "views"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-duncan3dc/object-intruder",
        "version": "0.3.0",
        "version_normalized": "0.3.0.0",
        "dist": {
            "type": "path",
            "url": "../library/duncan3dc/object-intruder",
            "reference": "a248e5022391a279bfcfad9e69264babd143a4bf",
            "shasum": null
        },
        "require": {
            "php": "^5.6|^7.0"
        },
        "require-dev": {
            "phpunit/phpunit": "^5.6"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\duncan3dc\\ObjectIntruder\\": "src/",
                "MediaCloud\\Vendor\\duncan3dc\\ObjectIntruderTests\\": "tests/"
            }
        },
        "license": [
            "Apache-2.0"
        ],
        "authors": [
            {
                "name": "Craig Duncan",
                "email": "git@duncanc.co.uk",
                "homepage": "https://github.com/duncan3dc",
                "role": "Developer"
            }
        ],
        "description": "A small library to access private/protected properties/methods of objects",
        "homepage": "https://github.com/duncan3dc/object-intruder",
        "keywords": [
            "private",
            "protected",
            "public",
            "reflection"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-fasterimage/fasterimage",
        "version": "v1.5.0",
        "version_normalized": "1.5.0.0",
        "dist": {
            "type": "path",
            "url": "../library/fasterimage/fasterimage",
            "reference": "b9a4214bc0ce272f4362f5addecca2b871a07c0f",
            "shasum": null
        },
        "require": {
            "mcloud-willwashburn/stream": "v1.0.0",
            "php": ">=5.4.0"
        },
        "require-dev": {
            "php-coveralls/php-coveralls": "^2.1",
            "php-mock/php-mock-phpunit": "^2.3",
            "phpunit/phpunit": "~6.0"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "classmap": [
                "src"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Will Washburn",
                "email": "will@tailwindapp.com"
            },
            {
                "name": "Weston Ruter"
            }
        ],
        "description": "FasterImage finds the size or type of a set of images given their uris by fetching as little as needed, in parallel. Originally ported by Tom Moor.",
        "homepage": "https://github.com/willwashburn/fasterimage",
        "keywords": [
            "fast image",
            "faster image",
            "fasterimage",
            "fastimage",
            "getimagesize",
            "image size",
            "parallel"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-firebase/php-jwt",
        "version": "v5.2.0",
        "version_normalized": "5.2.0.0",
        "dist": {
            "type": "path",
            "url": "../library/firebase/php-jwt",
            "reference": "2a2b44c4f5a3749b1b285e66fdd7ea4c8fef94da",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.0"
        },
        "require-dev": {
            "phpunit/phpunit": ">=4.8 <=9"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Firebase\\JWT\\": "src"
            }
        },
        "license": [
            "BSD-3-Clause"
        ],
        "authors": [
            {
                "name": "Neuman Vong",
                "email": "neuman+pear@twilio.com",
                "role": "Developer"
            },
            {
                "name": "Anant Narayanan",
                "email": "anant@php.net",
                "role": "Developer"
            }
        ],
        "description": "A simple library to encode and decode JSON Web Tokens (JWT) in PHP. Should conform to the current spec.",
        "homepage": "https://github.com/firebase/php-jwt",
        "keywords": [
            "jwt",
            "php"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/auth",
        "version": "v1.11.1",
        "version_normalized": "1.11.1.0",
        "dist": {
            "type": "path",
            "url": "../library/google/auth",
            "reference": "0c40977fd593fc4d24e1c5350fd73d9be91de6ed",
            "shasum": null
        },
        "require": {
            "mcloud-firebase/php-jwt": "v5.2.0",
            "mcloud-guzzlehttp/guzzle": "6.5.5",
            "mcloud-guzzlehttp/psr7": "1.6.1",
            "mcloud-psr/cache": "1.0.1",
            "mcloud-psr/http-message": "1.0.1",
            "php": ">=5.4"
        },
        "require-dev": {
            "guzzlehttp/promises": "0.1.1|^1.3",
            "kelvinmo/simplejwt": "^0.2.5",
            "phpseclib/phpseclib": "^2",
            "phpunit/phpunit": "^4.8.36|^5.7",
            "sebastian/comparator": ">=1.2.3",
            "squizlabs/php_codesniffer": "^3.5"
        },
        "suggest": {
            "phpseclib/phpseclib": "May be used in place of OpenSSL for signing strings or for token management. Please require version ^2."
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Google\\Auth\\": "src"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Google\\Auth\\Tests\\": "tests"
            }
        },
        "license": [
            "Apache-2.0"
        ],
        "description": "Google Auth Library for PHP",
        "homepage": "http://github.com/google/google-auth-library-php",
        "keywords": [
            "authentication",
            "google",
            "oauth2"
        ],
        "support": {
            "docs": "https://googleapis.github.io/google-auth-library-php/master/"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/cloud-core",
        "version": "v1.38.0",
        "version_normalized": "1.38.0.0",
        "dist": {
            "type": "path",
            "url": "../library/google/cloud-core",
            "reference": "ff843644105ed95202025c3cf1370b1c3fcf4986",
            "shasum": null
        },
        "require": {
            "mcloud-google/auth": "v1.11.1",
            "mcloud-guzzlehttp/guzzle": "6.5.5",
            "mcloud-guzzlehttp/promises": "v1.3.1",
            "mcloud-guzzlehttp/psr7": "1.6.1",
            "mcloud-monolog/monolog": "1.25.5",
            "mcloud-psr/http-message": "1.0.1",
            "mcloud-rize/uri-template": "0.3.2",
            "php": ">=5.5"
        },
        "require-dev": {
            "erusev/parsedown": "^1.6",
            "google/common-protos": "^1.0",
            "google/gax": "^1.1",
            "opis/closure": "^3",
            "phpdocumentor/reflection": "^3.0",
            "phpunit/phpunit": "^4.8|^5.0",
            "squizlabs/php_codesniffer": "2.*"
        },
        "suggest": {
            "opis/closure": "May be used to serialize closures to process jobs in the batch daemon. Please require version ^3.",
            "symfony/lock": "Required for the Spanner cached based session pool. Please require the following commit: 3.3.x-dev#1ba6ac9"
        },
        "bin": [
            "bin/google-cloud-batch"
        ],
        "type": "library",
        "extra": {
            "component": {
                "id": "cloud-core",
                "target": "googleapis/google-cloud-php-core.git",
                "path": "Core",
                "entry": "src/ServiceBuilder.php"
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Google\\Cloud\\Core\\": "src"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Google\\Cloud\\Core\\Tests\\": "tests"
            }
        },
        "license": [
            "Apache-2.0"
        ],
        "description": "Google Cloud PHP shared dependency, providing functionality useful to all components.",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/cloud-storage",
        "version": "v1.22.0",
        "version_normalized": "1.22.0.0",
        "dist": {
            "type": "path",
            "url": "../library/google/cloud-storage",
            "reference": "7d11d0cb8cb63a9454776ec4cbfa20d11ba66edb",
            "shasum": null
        },
        "require": {
            "mcloud-google/cloud-core": "v1.38.0",
            "mcloud-google/crc32": "v0.1.0"
        },
        "require-dev": {
            "erusev/parsedown": "^1.6",
            "google/cloud-pubsub": "^1.0",
            "phpdocumentor/reflection": "^3.0",
            "phpseclib/phpseclib": "^2",
            "phpunit/phpunit": "^4.8|^5.0",
            "squizlabs/php_codesniffer": "2.*"
        },
        "suggest": {
            "google/cloud-pubsub": "May be used to register a topic to receive bucket notifications.",
            "phpseclib/phpseclib": "May be used in place of OpenSSL for creating signed Cloud Storage URLs. Please require version ^2."
        },
        "type": "library",
        "extra": {
            "component": {
                "id": "cloud-storage",
                "target": "googleapis/google-cloud-php-storage.git",
                "path": "Storage",
                "entry": "src/StorageClient.php"
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Google\\Cloud\\Storage\\": "src"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Google\\Cloud\\Storage\\Tests\\": "tests"
            }
        },
        "license": [
            "Apache-2.0"
        ],
        "description": "Cloud Storage Client for PHP",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/cloud-vision",
        "version": "v1.1.1",
        "version_normalized": "1.1.1.0",
        "dist": {
            "type": "path",
            "url": "../library/google/cloud-vision",
            "reference": "b351cb16fce30f0a20d32e44a29d5c4f25eb50ab",
            "shasum": null
        },
        "require": {
            "mcloud-google/cloud-core": "v1.38.0",
            "mcloud-google/gax": "1.3.1"
        },
        "require-dev": {
            "erusev/parsedown": "^1.6",
            "google/cloud-storage": "^1.12",
            "phpdocumentor/reflection": "^3.0",
            "phpunit/phpunit": "^4.8|^5.0",
            "squizlabs/php_codesniffer": "2.*"
        },
        "suggest": {
            "ext-grpc": "The gRPC extension enables use of the performant gRPC transport",
            "ext-protobuf": "Provides a significant increase in throughput over the pure PHP protobuf implementation. See https://cloud.google.com/php/grpc for installation instructions.",
            "google/cloud-storage": "Annotate images stored in Google Cloud Storage"
        },
        "type": "library",
        "extra": {
            "component": {
                "id": "cloud-vision",
                "target": "googleapis/google-cloud-php-vision.git",
                "path": "Vision",
                "entry": "src/VisionClient.php"
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Google\\Cloud\\Vision\\": "src",
                "MediaCloud\\Vendor\\GPBMetadata\\Google\\Cloud\\Vision\\": "metadata"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Google\\Cloud\\Vision\\Tests\\": "tests"
            }
        },
        "license": [
            "Apache-2.0"
        ],
        "description": "Cloud Vision Client for PHP",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/common-protos",
        "version": "1.3",
        "version_normalized": "1.3.0.0",
        "dist": {
            "type": "path",
            "url": "../library/google/common-protos",
            "reference": "85f1a94f500b5caf9d1d0d5abae440668e59ca05",
            "shasum": null
        },
        "require": {
            "mcloud-google/protobuf": "v3.13.0"
        },
        "require-dev": {
            "phpunit/phpunit": "^4.8.36",
            "sami/sami": "*"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Google\\": "src",
                "MediaCloud\\Vendor\\GPBMetadata\\Google\\": "metadata"
            }
        },
        "license": [
            "Apache-2.0"
        ],
        "description": "Google API Common Protos for PHP",
        "homepage": "https://github.com/googleapis/common-protos-php",
        "keywords": [
            "google"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/crc32",
        "version": "v0.1.0",
        "version_normalized": "0.1.0.0",
        "dist": {
            "type": "path",
            "url": "../library/google/crc32",
            "reference": "2ccd42a0b6771356a16b55e94e7be4d9f471d2fa",
            "shasum": null
        },
        "require": {
            "php": ">=5.4"
        },
        "require-dev": {
            "friendsofphp/php-cs-fixer": "^1.13 || v2.14.2",
            "paragonie/random_compat": ">=2",
            "phpunit/phpunit": "^4"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Google\\CRC32\\": "src"
            }
        },
        "license": [
            "Apache-2.0"
        ],
        "authors": [
            {
                "name": "Andrew Brampton",
                "email": "bramp@google.com"
            }
        ],
        "description": "Various CRC32 implementations",
        "homepage": "https://github.com/google/php-crc32",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/gax",
        "version": "1.3.1",
        "version_normalized": "1.3.1.0",
        "dist": {
            "type": "path",
            "url": "../library/google/gax",
            "reference": "8d34484d4d3c9e77e569fb0b012bf465c74052a2",
            "shasum": null
        },
        "require": {
            "mcloud-google/auth": "v1.11.1",
            "mcloud-google/common-protos": "1.3",
            "mcloud-google/grpc-gcp": "0.1.5",
            "mcloud-google/protobuf": "v3.13.0",
            "mcloud-grpc/grpc": "1.30.0",
            "mcloud-guzzlehttp/promises": "v1.3.1",
            "mcloud-guzzlehttp/psr7": "1.6.1",
            "php": ">=5.5"
        },
        "conflict": {
            "ext-protobuf": "<3.7.0"
        },
        "require-dev": {
            "phpunit/phpunit": "^4.8.36",
            "sami/sami": "*",
            "squizlabs/php_codesniffer": "3.*"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Google\\ApiCore\\": "src",
                "MediaCloud\\Vendor\\GPBMetadata\\Google\\": "metadata"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Google\\ApiCore\\Dev\\": "dev/src",
                "Google\\ApiCore\\": "tests",
                "GPBMetadata\\": "metadata"
            }
        },
        "scripts": {
            "regenerate-test-protos": [
                "dev/sh/regenerate-test-protos.sh"
            ]
        },
        "license": [
            "BSD-3-Clause"
        ],
        "description": "Google API Core for PHP",
        "homepage": "https://github.com/googleapis/gax-php",
        "keywords": [
            "google"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/grpc-gcp",
        "version": "0.1.5",
        "version_normalized": "0.1.5.0",
        "dist": {
            "type": "path",
            "url": "../library/google/grpc-gcp",
            "reference": "02b3bb1c88f0f8eeab4a4a3dde3182921a58f80e",
            "shasum": null
        },
        "require": {
            "mcloud-google/auth": "v1.11.1",
            "mcloud-google/protobuf": "v3.13.0",
            "mcloud-grpc/grpc": "1.30.0",
            "mcloud-psr/cache": "1.0.1",
            "php": ">=5.5.0"
        },
        "require-dev": {
            "google/cloud-spanner": "^1.7",
            "phpunit/phpunit": "4.8.36"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Grpc\\Gcp\\": "src/"
            },
            "classmap": [
                "src/generated/"
            ]
        },
        "license": [
            "Apache-2.0"
        ],
        "description": "gRPC GCP library for channel management",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-google/protobuf",
        "version": "v3.13.0",
        "version_normalized": "3.13.0.0",
        "dist": {
            "type": "path",
            "url": "../library/google/protobuf",
            "reference": "3cf181eb6d78dfe18a0994ba2b0a4aa31c142f29",
            "shasum": null
        },
        "require": {
            "php": ">=5.5.0"
        },
        "require-dev": {
            "phpunit/phpunit": ">=4.8.0"
        },
        "suggest": {
            "ext-bcmath": "Need to support JSON deserialization"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Google\\Protobuf\\": "src/Google/Protobuf",
                "MediaCloud\\Vendor\\GPBMetadata\\Google\\Protobuf\\": "src/GPBMetadata/Google/Protobuf"
            }
        },
        "license": [
            "BSD-3-Clause"
        ],
        "description": "proto library for PHP",
        "homepage": "https://developers.google.com/protocol-buffers/",
        "keywords": [
            "proto"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-grpc/grpc",
        "version": "1.30.0",
        "version_normalized": "1.30.0.0",
        "dist": {
            "type": "path",
            "url": "../library/grpc/grpc",
            "reference": "8e0167e473557354001a3e9b83532fc823daeff4",
            "shasum": null
        },
        "require": {
            "php": ">=5.5.0"
        },
        "require-dev": {
            "google/auth": "^v1.3.0"
        },
        "suggest": {
            "ext-protobuf": "For better performance, install the protobuf C extension.",
            "google/protobuf": "To get started using grpc quickly, install the native protobuf library."
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Grpc\\": "src/lib/"
            }
        },
        "license": [
            "Apache-2.0"
        ],
        "description": "gRPC library for PHP",
        "homepage": "https://grpc.io",
        "keywords": [
            "rpc"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-guzzlehttp/guzzle",
        "version": "6.5.5",
        "version_normalized": "6.5.5.0",
        "dist": {
            "type": "path",
            "url": "../library/guzzlehttp/guzzle",
            "reference": "c5dd833faa35f14f870ed2a6cdc3c316a8be93e2",
            "shasum": null
        },
        "require": {
            "ext-json": "*",
            "mcloud-guzzlehttp/promises": "v1.3.1",
            "mcloud-guzzlehttp/psr7": "1.6.1",
            "mcloud-symfony/polyfill-intl-idn": "v1.18.1",
            "php": ">=5.5"
        },
        "require-dev": {
            "ext-curl": "*",
            "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.4 || ^7.0",
            "psr/log": "^1.1"
        },
        "suggest": {
            "psr/log": "Required for using the Log middleware"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\GuzzleHttp\\": "src/"
            },
            "files": [
                "src/functions_include.php"
            ]
        },
        "autoload-dev": {
            "psr-4": {
                "GuzzleHttp\\Tests\\": "tests/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Michael Dowling",
                "email": "mtdowling@gmail.com",
                "homepage": "https://github.com/mtdowling"
            }
        ],
        "description": "Guzzle is a PHP HTTP client library",
        "homepage": "http://guzzlephp.org/",
        "keywords": [
            "HTTP client",
            "client",
            "curl",
            "framework",
            "http",
            "rest",
            "web service"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-guzzlehttp/promises",
        "version": "v1.3.1",
        "version_normalized": "1.3.1.0",
        "dist": {
            "type": "path",
            "url": "../library/guzzlehttp/promises",
            "reference": "8f1dd8a3c67f0de83a20c9d89568e477824682cb",
            "shasum": null
        },
        "require": {
            "php": ">=5.5.0"
        },
        "require-dev": {
            "phpunit/phpunit": "^4.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\GuzzleHttp\\Promise\\": "src/"
            },
            "files": [
                "src/functions_include.php"
            ]
        },
        "scripts": {
            "test": [
                "vendor/bin/phpunit"
            ],
            "test-ci": [
                "vendor/bin/phpunit --coverage-text"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Michael Dowling",
                "email": "mtdowling@gmail.com",
                "homepage": "https://github.com/mtdowling"
            }
        ],
        "description": "Guzzle promises library",
        "keywords": [
            "promise"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-guzzlehttp/psr7",
        "version": "1.6.1",
        "version_normalized": "1.6.1.0",
        "dist": {
            "type": "path",
            "url": "../library/guzzlehttp/psr7",
            "reference": "41a0dab15af95da91958d7e5e620a44c1268623d",
            "shasum": null
        },
        "require": {
            "mcloud-psr/http-message": "1.0.1",
            "mcloud-ralouphie/getallheaders": "3.0.3",
            "php": ">=5.4.0"
        },
        "provide": {
            "psr/http-message-implementation": "1.0"
        },
        "require-dev": {
            "ext-zlib": "*",
            "phpunit/phpunit": "~4.8.36 || ^5.7.27 || ^6.5.8"
        },
        "suggest": {
            "zendframework/zend-httphandlerrunner": "Emit PSR-7 responses"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\GuzzleHttp\\Psr7\\": "src/"
            },
            "files": [
                "src/functions_include.php"
            ]
        },
        "autoload-dev": {
            "psr-4": {
                "GuzzleHttp\\Tests\\Psr7\\": "tests/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Michael Dowling",
                "email": "mtdowling@gmail.com",
                "homepage": "https://github.com/mtdowling"
            },
            {
                "name": "Tobias Schultze",
                "homepage": "https://github.com/Tobion"
            }
        ],
        "description": "PSR-7 message implementation that also provides common utility methods",
        "keywords": [
            "http",
            "message",
            "psr-7",
            "request",
            "response",
            "stream",
            "uri",
            "url"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-ilab/b2-sdk-php",
        "version": "1.4.1",
        "version_normalized": "1.4.1.0",
        "dist": {
            "type": "path",
            "url": "../library/ilab/b2-sdk-php",
            "reference": "8b4d38ce5621d3b41f3e3fbc23da035d32c0a191",
            "shasum": null
        },
        "require": {
            "mcloud-guzzlehttp/guzzle": "6.5.5",
            "php": ">=5.5.0"
        },
        "require-dev": {
            "phpunit/phpunit": "4.8.*"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\ILAB\\B2\\": "src/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "ILAB\\B2\\Tests\\": "tests/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Chris White",
                "email": "chris@cwhite.me",
                "homepage": "https://cwhite.me"
            }
        ],
        "description": "A SDK for working with B2 cloud storage.",
        "homepage": "https://github.com/cwhite92/b2-sdk-php",
        "keywords": [
            "b2",
            "backblaze",
            "backup",
            "cloud",
            "filesystem",
            "storage"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-illuminate/container",
        "version": "v5.5.44",
        "version_normalized": "5.5.44.0",
        "dist": {
            "type": "path",
            "url": "../library/illuminate/container",
            "reference": "dc9998c29643896c10c944785972f869f610c83f",
            "shasum": null
        },
        "require": {
            "mcloud-illuminate/contracts": "v5.5.44",
            "mcloud-psr/container": "1.0.0",
            "php": ">=7.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Illuminate\\Container\\": ""
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Taylor Otwell",
                "email": "taylor@laravel.com"
            }
        ],
        "description": "The Illuminate Container package.",
        "homepage": "https://laravel.com",
        "support": {
            "issues": "https://github.com/laravel/framework/issues",
            "source": "https://github.com/laravel/framework"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-illuminate/contracts",
        "version": "v5.5.44",
        "version_normalized": "5.5.44.0",
        "dist": {
            "type": "path",
            "url": "../library/illuminate/contracts",
            "reference": "f5da064838fee3f0d2444c0a92dd3496f21674e3",
            "shasum": null
        },
        "require": {
            "mcloud-psr/container": "1.0.0",
            "mcloud-psr/simple-cache": "1.0.1",
            "php": ">=7.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Illuminate\\Contracts\\": ""
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Taylor Otwell",
                "email": "taylor@laravel.com"
            }
        ],
        "description": "The Illuminate Contracts package.",
        "homepage": "https://laravel.com",
        "support": {
            "issues": "https://github.com/laravel/framework/issues",
            "source": "https://github.com/laravel/framework"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-illuminate/events",
        "version": "v5.5.44",
        "version_normalized": "5.5.44.0",
        "dist": {
            "type": "path",
            "url": "../library/illuminate/events",
            "reference": "418143f88f651d4c01a3f63930df38ec2844cf9e",
            "shasum": null
        },
        "require": {
            "mcloud-illuminate/container": "v5.5.44",
            "mcloud-illuminate/contracts": "v5.5.44",
            "mcloud-illuminate/support": "v5.5.44",
            "php": ">=7.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Illuminate\\Events\\": ""
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Taylor Otwell",
                "email": "taylor@laravel.com"
            }
        ],
        "description": "The Illuminate Events package.",
        "homepage": "https://laravel.com",
        "support": {
            "issues": "https://github.com/laravel/framework/issues",
            "source": "https://github.com/laravel/framework"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-illuminate/filesystem",
        "version": "v5.5.44",
        "version_normalized": "5.5.44.0",
        "dist": {
            "type": "path",
            "url": "../library/illuminate/filesystem",
            "reference": "95ded6ee71cd9903503c456cb0c0f4ad92ebd849",
            "shasum": null
        },
        "require": {
            "mcloud-illuminate/contracts": "v5.5.44",
            "mcloud-illuminate/support": "v5.5.44",
            "mcloud-symfony/finder": "v3.4.43",
            "php": ">=7.0"
        },
        "suggest": {
            "league/flysystem": "Required to use the Flysystem local and FTP drivers (~1.0).",
            "league/flysystem-aws-s3-v3": "Required to use the Flysystem S3 driver (~1.0).",
            "league/flysystem-rackspace": "Required to use the Flysystem Rackspace driver (~1.0)."
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Illuminate\\Filesystem\\": ""
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Taylor Otwell",
                "email": "taylor@laravel.com"
            }
        ],
        "description": "The Illuminate Filesystem package.",
        "homepage": "https://laravel.com",
        "support": {
            "issues": "https://github.com/laravel/framework/issues",
            "source": "https://github.com/laravel/framework"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-illuminate/support",
        "version": "v5.5.44",
        "version_normalized": "5.5.44.0",
        "dist": {
            "type": "path",
            "url": "../library/illuminate/support",
            "reference": "5d9a886159958897cab5957957283ef897844c78",
            "shasum": null
        },
        "require": {
            "ext-mbstring": "*",
            "mcloud-doctrine/inflector": "1.3.1",
            "mcloud-illuminate/contracts": "v5.5.44",
            "mcloud-nesbot/carbon": "1.39.1",
            "php": ">=7.0"
        },
        "replace": {
            "tightenco/collect": "<5.5.33"
        },
        "suggest": {
            "illuminate/filesystem": "Required to use the composer class (5.5.*).",
            "symfony/process": "Required to use the composer class (~3.3).",
            "symfony/var-dumper": "Required to use the dd function (~3.3)."
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Illuminate\\Support\\": ""
            },
            "files": [
                "helpers.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Taylor Otwell",
                "email": "taylor@laravel.com"
            }
        ],
        "description": "The Illuminate Support package.",
        "homepage": "https://laravel.com",
        "support": {
            "issues": "https://github.com/laravel/framework/issues",
            "source": "https://github.com/laravel/framework"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-illuminate/view",
        "version": "v5.5.44",
        "version_normalized": "5.5.44.0",
        "dist": {
            "type": "path",
            "url": "../library/illuminate/view",
            "reference": "26aa55ce98a0adb67910007719125514b1fe00de",
            "shasum": null
        },
        "require": {
            "mcloud-illuminate/container": "v5.5.44",
            "mcloud-illuminate/contracts": "v5.5.44",
            "mcloud-illuminate/events": "v5.5.44",
            "mcloud-illuminate/filesystem": "v5.5.44",
            "mcloud-illuminate/support": "v5.5.44",
            "mcloud-symfony/debug": "v3.4.43",
            "php": ">=7.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Illuminate\\View\\": ""
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Taylor Otwell",
                "email": "taylor@laravel.com"
            }
        ],
        "description": "The Illuminate View package.",
        "homepage": "https://laravel.com",
        "support": {
            "issues": "https://github.com/laravel/framework/issues",
            "source": "https://github.com/laravel/framework"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-imgix/imgix-php",
        "version": "3.3.0",
        "version_normalized": "3.3.0.0",
        "dist": {
            "type": "path",
            "url": "../library/imgix/imgix-php",
            "reference": "b94b279c80238d8152046a928149f76adf81e109",
            "shasum": null
        },
        "require": {
            "php": ">=5.3"
        },
        "require-dev": {
            "phpunit/phpunit": "*"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-0": {
                "MediaCloud\\Vendor\\Imgix\\": "src/"
            }
        },
        "license": [
            "BSD-2-Clause"
        ],
        "description": "A PHP client library for generating URLs with imgix.",
        "keywords": [
            "imgix"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-ivopetkov/html5-dom-document-php",
        "version": "v2.2.4",
        "version_normalized": "2.2.4.0",
        "dist": {
            "type": "path",
            "url": "../library/ivopetkov/html5-dom-document-php",
            "reference": "36f0d3f16790907cc29f5877cd08fa8469da0849",
            "shasum": null
        },
        "require": {
            "ext-dom": "*",
            "php": ">=7.0.0"
        },
        "require-dev": {
            "ivopetkov/docs-generator": "0.2.*",
            "phpunit/phpunit": "6.*"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "files": [
                "autoload.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Ivo Petkov",
                "email": "ivo@ivopetkov.com",
                "homepage": "http://ivopetkov.com"
            }
        ],
        "description": "HTML5 DOMDocument PHP library (extends DOMDocument)",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-kraken-io/kraken-php",
        "version": "1.6",
        "version_normalized": "1.6.0.0",
        "dist": {
            "type": "path",
            "url": "../library/kraken-io/kraken-php",
            "reference": "3026528b0c6925b6c59de6b7dc7641abc22eceff",
            "shasum": null
        },
        "require": {
            "ext-curl": "*",
            "ext-json": "*"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-0": {
                "MediaCloud\\Vendor\\Kraken": "lib"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Kraken Image Optimizer",
                "email": "support@kraken.io",
                "url": "https://kraken.io"
            }
        ],
        "description": "Official Kraken.io SDK",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-lorisleiva/cron-translator",
        "version": "v0.1.1",
        "version_normalized": "0.1.1.0",
        "dist": {
            "type": "path",
            "url": "../library/lorisleiva/cron-translator",
            "reference": "30faa77b8b5ea329ef103468e5bf22d2232af566",
            "shasum": null
        },
        "require-dev": {
            "phpunit/phpunit": "^8.0"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Lorisleiva\\CronTranslator\\": "src"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Lorisleiva\\CronTranslator\\Tests\\": "tests"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Loris LEIVA",
                "email": "loris.leiva@gmail.com",
                "homepage": "https://lorisleiva.com"
            }
        ],
        "description": "Makes CRON expressions human-readable",
        "homepage": "https://github.com/lorisleiva/cron-translator",
        "keywords": [
            "cron",
            "expression",
            "human"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-mikey179/vfsstream",
        "version": "v1.6.8",
        "version_normalized": "1.6.8.0",
        "dist": {
            "type": "path",
            "url": "../library/mikey179/vfsstream",
            "reference": "7216c7c239c656ed39dd2e70df329992482347ac",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.0"
        },
        "require-dev": {
            "phpunit/phpunit": "^4.5|^5.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-0": {
                "MediaCloud\\Vendor\\org\\bovigo\\vfs\\": "src/main/php"
            }
        },
        "license": [
            "BSD-3-Clause"
        ],
        "authors": [
            {
                "name": "Frank Kleine",
                "homepage": "http://frankkleine.de/",
                "role": "Developer"
            }
        ],
        "description": "Virtual file system to mock the real file system in unit tests.",
        "homepage": "http://vfs.bovigo.org/",
        "support": {
            "issues": "https://github.com/bovigo/vfsStream/issues",
            "source": "https://github.com/bovigo/vfsStream/tree/master",
            "wiki": "https://github.com/bovigo/vfsStream/wiki"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-monolog/monolog",
        "version": "1.25.5",
        "version_normalized": "1.25.5.0",
        "dist": {
            "type": "path",
            "url": "../library/monolog/monolog",
            "reference": "35dfd38989f54cc3ab31894aa18f29e1d5df11bf",
            "shasum": null
        },
        "require": {
            "mcloud-psr/log": "1.1.3",
            "php": ">=5.3.0"
        },
        "provide": {
            "psr/log-implementation": "1.0.0"
        },
        "require-dev": {
            "aws/aws-sdk-php": "^2.4.9 || ^3.0",
            "doctrine/couchdb": "~1.0@dev",
            "graylog2/gelf-php": "~1.0",
            "php-amqplib/php-amqplib": "~2.4",
            "php-console/php-console": "^3.1.3",
            "php-parallel-lint/php-parallel-lint": "^1.0",
            "phpunit/phpunit": "~4.5",
            "ruflin/elastica": ">=0.90 <3.0",
            "sentry/sentry": "^0.13",
            "swiftmailer/swiftmailer": "^5.3|^6.0"
        },
        "suggest": {
            "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
            "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
            "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
            "ext-mongo": "Allow sending log messages to a MongoDB server",
            "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
            "mongodb/mongodb": "Allow sending log messages to a MongoDB server via PHP Driver",
            "php-amqplib/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib",
            "php-console/php-console": "Allow sending log messages to Google Chrome",
            "rollbar/rollbar": "Allow sending log messages to Rollbar",
            "ruflin/elastica": "Allow sending log messages to an Elastic Search server",
            "sentry/sentry": "Allow sending log messages to a Sentry server"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Monolog\\": "src/Monolog"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Monolog\\": "tests/Monolog"
            }
        },
        "scripts": {
            "test": [
                "parallel-lint . --exclude vendor --exclude src/Monolog/Handler/FormattableHandlerInterface.php  --exclude src/Monolog/Handler/FormattableHandlerTrait.php --exclude src/Monolog/Handler/ProcessableHandlerInterface.php --exclude src/Monolog/Handler/ProcessableHandlerTrait.php",
                "phpunit"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Jordi Boggiano",
                "email": "j.boggiano@seld.be",
                "homepage": "http://seld.be"
            }
        ],
        "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
        "homepage": "http://github.com/Seldaek/monolog",
        "keywords": [
            "log",
            "logging",
            "psr-3"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-mtdowling/jmespath.php",
        "version": "2.6.0",
        "version_normalized": "2.6.0.0",
        "dist": {
            "type": "path",
            "url": "../library/mtdowling/jmespath.php",
            "reference": "e3a6ddc1f5fcb95c4888820d04fadb90216aadd2",
            "shasum": null
        },
        "require": {
            "mcloud-symfony/polyfill-mbstring": "v1.18.1",
            "php": "^5.4 || ^7.0 || ^8.0"
        },
        "require-dev": {
            "composer/xdebug-handler": "^1.4",
            "phpunit/phpunit": "^4.8.36 || ^7.5.15"
        },
        "bin": [
            "bin/jp.php"
        ],
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\JmesPath\\": "src/"
            },
            "files": [
                "src/JmesPath.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Michael Dowling",
                "email": "mtdowling@gmail.com",
                "homepage": "https://github.com/mtdowling"
            }
        ],
        "description": "Declaratively specify how to extract elements from a JSON document",
        "keywords": [
            "json",
            "jsonpath"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-muxinc/mux-php",
        "version": "0.4.0",
        "version_normalized": "0.4.0.0",
        "dist": {
            "type": "path",
            "url": "../library/muxinc/mux-php",
            "reference": "3f30f133637bef81de132e581d723f6d8b7559cc",
            "shasum": null
        },
        "require": {
            "ext-curl": "*",
            "ext-json": "*",
            "ext-mbstring": "*",
            "mcloud-guzzlehttp/guzzle": "6.5.5",
            "php": ">=7.1"
        },
        "require-dev": {
            "friendsofphp/php-cs-fixer": "~2.12",
            "squizlabs/php_codesniffer": "~2.6"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\MuxPhp\\": "MuxPhp/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "MuxPhp\\": "test/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Mux SDK team",
                "homepage": "https://mux.com",
                "email": "sdks@mux.com"
            }
        ],
        "description": "Official Mux API wrapper for PHP projects, supporting both Mux Data and Mux Video. Not familiar with Mux? Check out https://mux.com/ for more information.",
        "homepage": "https://mux.com",
        "keywords": [
            "api",
            "php",
            "rest",
            "sdk",
            "streaming",
            "video"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-nesbot/carbon",
        "version": "1.39.1",
        "version_normalized": "1.39.1.0",
        "dist": {
            "type": "path",
            "url": "../library/nesbot/carbon",
            "reference": "40a3cad053a92e976461ae929c3729c3f0deb7a3",
            "shasum": null
        },
        "require": {
            "mcloud-symfony/translation": "v3.4.43",
            "php": ">=5.3.9"
        },
        "require-dev": {
            "composer/composer": "^1.2",
            "friendsofphp/php-cs-fixer": "~2",
            "phpunit/phpunit": "^4.8.35 || ^5.7"
        },
        "bin": [
            "bin/upgrade-carbon"
        ],
        "type": "library",
        "extra": {
            "update-helper": "Carbon\\Upgrade",
            "laravel": {
                "providers": [
                    "Carbon\\Laravel\\ServiceProvider"
                ]
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\": "src/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Tests\\": "tests/"
            }
        },
        "scripts": {
            "test": [
                "@phpunit",
                "@phpcs"
            ],
            "phpunit": [
                "phpunit --verbose --coverage-clover=coverage.xml"
            ],
            "phpcs": [
                "php-cs-fixer fix -v --diff --dry-run"
            ],
            "phpstan": [
                "phpstan analyse --configuration phpstan.neon --level 3 src tests"
            ],
            "post-autoload-dump": [
                "UpdateHelper\\UpdateHelper::check"
            ],
            "upgrade-carbon": [
                "Carbon\\Upgrade::upgrade"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Brian Nesbitt",
                "email": "brian@nesbot.com",
                "homepage": "http://nesbot.com"
            }
        ],
        "description": "A simple API extension for DateTime.",
        "homepage": "http://carbon.nesbot.com",
        "keywords": [
            "DateTime",
            "date",
            "time"
        ],
        "support": {
            "issues": "https://github.com/briannesbitt/Carbon/issues",
            "source": "https://github.com/briannesbitt/Carbon"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-paragonie/constant_time_encoding",
        "version": "v2.3.0",
        "version_normalized": "2.3.0.0",
        "dist": {
            "type": "path",
            "url": "../library/paragonie/constant_time_encoding",
            "reference": "f6880e2b5b6e52a92b67154209ea218e7eea62f5",
            "shasum": null
        },
        "require": {
            "php": "^7|^8"
        },
        "require-dev": {
            "phpunit/phpunit": "^6|^7",
            "vimeo/psalm": "^1|^2|^3"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\ParagonIE\\ConstantTime\\": "src/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Paragon Initiative Enterprises",
                "email": "security@paragonie.com",
                "homepage": "https://paragonie.com",
                "role": "Maintainer"
            },
            {
                "name": "Steve 'Sc00bz' Thomas",
                "email": "steve@tobtu.com",
                "homepage": "https://www.tobtu.com",
                "role": "Original Developer"
            }
        ],
        "description": "Constant-time Implementations of RFC 4648 Encoding (Base-64, Base-32, Base-16)",
        "keywords": [
            "base16",
            "base32",
            "base32_decode",
            "base32_encode",
            "base64",
            "base64_decode",
            "base64_encode",
            "bin2hex",
            "encoding",
            "hex",
            "hex2bin",
            "rfc4648"
        ],
        "support": {
            "issues": "https://github.com/paragonie/constant_time_encoding/issues",
            "email": "info@paragonie.com",
            "source": "https://github.com/paragonie/constant_time_encoding"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-paragonie/easyrsa",
        "version": "v0.5.2",
        "version_normalized": "0.5.2.0",
        "dist": {
            "type": "path",
            "url": "../library/paragonie/easyrsa",
            "reference": "5512abb4c74f01854b6ca130ab8cf6d1e457b5d2",
            "shasum": null
        },
        "require": {
            "mcloud-defuse/php-encryption": "v2.2.1",
            "mcloud-paragonie/constant_time_encoding": "v2.3.0",
            "mcloud-paragonie/random_compat": "v2.0.18",
            "mcloud-phpseclib/phpseclib": "2.0.28",
            "mcloud-sarciszewski/php-future": "0.4.2"
        },
        "require-dev": {
            "phpunit/phpunit": "4.*|5.*"
        },
        "suggest": {
            "ext-libsodium": "Libsodium offers far better cryptography than RSA can ever offer. Use libsodium instead of EasyRSA.",
            "paragonie/halite": "A simple and secure libsodium wrapper. Consider using Halite instead of EasyRSA."
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\ParagonIE\\EasyRSA\\": "src"
            }
        },
        "license": [
            "MIT"
        ],
        "description": "Simple and secure asymmetric encryption powered by PHPSecLib",
        "keywords": [
            "RSA",
            "asymmetric",
            "cryptography",
            "public-key"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-paragonie/random_compat",
        "version": "v2.0.18",
        "version_normalized": "2.0.18.0",
        "dist": {
            "type": "path",
            "url": "../library/paragonie/random_compat",
            "reference": "1803c12dfdb346fd4f381e7da0323f3a12907423",
            "shasum": null
        },
        "require": {
            "php": ">=5.2.0"
        },
        "require-dev": {
            "phpunit/phpunit": "4.*|5.*"
        },
        "suggest": {
            "ext-libsodium": "Provides a modern crypto API that can be used to generate random bytes."
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "files": [
                "lib/random.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Paragon Initiative Enterprises",
                "email": "security@paragonie.com",
                "homepage": "https://paragonie.com"
            }
        ],
        "description": "PHP 5.x polyfill for random_bytes() and random_int() from PHP 7",
        "keywords": [
            "csprng",
            "polyfill",
            "pseudorandom",
            "random"
        ],
        "support": {
            "issues": "https://github.com/paragonie/random_compat/issues",
            "email": "info@paragonie.com",
            "source": "https://github.com/paragonie/random_compat"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-phpseclib/phpseclib",
        "version": "2.0.28",
        "version_normalized": "2.0.28.0",
        "dist": {
            "type": "path",
            "url": "../library/phpseclib/phpseclib",
            "reference": "c0799d5b5e0e77a36348334351504acaa8883ea5",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.3"
        },
        "require-dev": {
            "phing/phing": "~2.7",
            "phpunit/phpunit": "^4.8.35|^5.7|^6.0",
            "sami/sami": "~2.0",
            "squizlabs/php_codesniffer": "~2.0"
        },
        "suggest": {
            "ext-gmp": "Install the GMP (GNU Multiple Precision) extension in order to speed up arbitrary precision integer arithmetic operations.",
            "ext-libsodium": "SSH2/SFTP can make use of some algorithms provided by the libsodium-php extension.",
            "ext-mcrypt": "Install the Mcrypt extension in order to speed up a few other cryptographic operations.",
            "ext-openssl": "Install the OpenSSL extension in order to speed up a wide variety of cryptographic operations."
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "files": [
                "phpseclib/bootstrap.php"
            ],
            "psr-4": {
                "MediaCloud\\Vendor\\phpseclib\\": "phpseclib/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Jim Wigginton",
                "email": "terrafrost@php.net",
                "role": "Lead Developer"
            },
            {
                "name": "Patrick Monnerat",
                "email": "pm@datasphere.ch",
                "role": "Developer"
            },
            {
                "name": "Andreas Fischer",
                "email": "bantu@phpbb.com",
                "role": "Developer"
            },
            {
                "name": "Hans-Jürgen Petrich",
                "email": "petrich@tronic-media.com",
                "role": "Developer"
            },
            {
                "name": "Graham Campbell",
                "email": "graham@alt-three.com",
                "role": "Developer"
            }
        ],
        "description": "PHP Secure Communications Library - Pure-PHP implementations of RSA, AES, SSH2, SFTP, X.509 etc.",
        "homepage": "http://phpseclib.sourceforge.net",
        "keywords": [
            "BigInteger",
            "aes",
            "asn.1",
            "asn1",
            "blowfish",
            "crypto",
            "cryptography",
            "encryption",
            "rsa",
            "security",
            "sftp",
            "signature",
            "signing",
            "ssh",
            "twofish",
            "x.509",
            "x509"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-psr/cache",
        "version": "1.0.1",
        "version_normalized": "1.0.1.0",
        "dist": {
            "type": "path",
            "url": "../library/psr/cache",
            "reference": "b2fd457c3a9a56d243df7656b7701f7ee0d822f6",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Psr\\Cache\\": "src/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "PHP-FIG",
                "homepage": "http://www.php-fig.org/"
            }
        ],
        "description": "Common interface for caching libraries",
        "keywords": [
            "cache",
            "psr",
            "psr-6"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-psr/container",
        "version": "1.0.0",
        "version_normalized": "1.0.0.0",
        "dist": {
            "type": "path",
            "url": "../library/psr/container",
            "reference": "c4d7810bbf7b4b27fde1afc69b5d04b56169370a",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Psr\\Container\\": "src/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "PHP-FIG",
                "homepage": "http://www.php-fig.org/"
            }
        ],
        "description": "Common Container Interface (PHP FIG PSR-11)",
        "homepage": "https://github.com/php-fig/container",
        "keywords": [
            "container",
            "container-interface",
            "container-interop",
            "psr",
            "psr-11"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-psr/http-message",
        "version": "1.0.1",
        "version_normalized": "1.0.1.0",
        "dist": {
            "type": "path",
            "url": "../library/psr/http-message",
            "reference": "00777153e81f16d12dfde13e82c3c3fcad10e7ae",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Psr\\Http\\Message\\": "src/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "PHP-FIG",
                "homepage": "http://www.php-fig.org/"
            }
        ],
        "description": "Common interface for HTTP messages",
        "homepage": "https://github.com/php-fig/http-message",
        "keywords": [
            "http",
            "http-message",
            "psr",
            "psr-7",
            "request",
            "response"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-psr/log",
        "version": "1.1.3",
        "version_normalized": "1.1.3.0",
        "dist": {
            "type": "path",
            "url": "../library/psr/log",
            "reference": "00690a15f44c7f38197172ba295892965d02282d",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Psr\\Log\\": "Psr/Log/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "PHP-FIG",
                "homepage": "http://www.php-fig.org/"
            }
        ],
        "description": "Common interface for logging libraries",
        "homepage": "https://github.com/php-fig/log",
        "keywords": [
            "log",
            "psr",
            "psr-3"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-psr/simple-cache",
        "version": "1.0.1",
        "version_normalized": "1.0.1.0",
        "dist": {
            "type": "path",
            "url": "../library/psr/simple-cache",
            "reference": "d9973ccf54782e93e74e0a9ab48d643954f3f839",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Psr\\SimpleCache\\": "src/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "PHP-FIG",
                "homepage": "http://www.php-fig.org/"
            }
        ],
        "description": "Common interfaces for simple caching",
        "keywords": [
            "cache",
            "caching",
            "psr",
            "psr-16",
            "simple-cache"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-ralouphie/getallheaders",
        "version": "3.0.3",
        "version_normalized": "3.0.3.0",
        "dist": {
            "type": "path",
            "url": "../library/ralouphie/getallheaders",
            "reference": "962c143dc63bcb30c20c265715225f3028014555",
            "shasum": null
        },
        "require": {
            "php": ">=5.6"
        },
        "require-dev": {
            "php-coveralls/php-coveralls": "^2.1",
            "phpunit/phpunit": "^5 || ^6.5"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "files": [
                "src/getallheaders.php"
            ]
        },
        "autoload-dev": {
            "psr-4": {
                "getallheaders\\Tests\\": "tests/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Ralph Khattar",
                "email": "ralph.khattar@gmail.com"
            }
        ],
        "description": "A polyfill for getallheaders.",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-ralouphie/mimey",
        "version": "2.1.0",
        "version_normalized": "2.1.0.0",
        "dist": {
            "type": "path",
            "url": "../library/ralouphie/mimey",
            "reference": "d3e198b1b9e57c8a6d00db368058ce03f97d64ba",
            "shasum": null
        },
        "require": {
            "php": "^5.4|^7.0"
        },
        "require-dev": {
            "php-coveralls/php-coveralls": "^1.1",
            "phpunit/phpunit": "^4.8 || ^5.7 || ^6.5"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Mimey\\": "src/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Mimey\\Tests\\": "tests/src/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Ralph Khattar",
                "email": "ralph.khattar@gmail.com"
            }
        ],
        "description": "PHP package for converting file extensions to MIME types and vice versa.",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-rize/uri-template",
        "version": "0.3.2",
        "version_normalized": "0.3.2.0",
        "dist": {
            "type": "path",
            "url": "../library/rize/uri-template",
            "reference": "c40e8b2ec37ca624b8e87ae58892e626c71eaa77",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.0"
        },
        "require-dev": {
            "phpunit/phpunit": "~4.0.0"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-0": {
                "MediaCloud\\Vendor\\Rize\\UriTemplate": "src/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Marut K",
                "homepage": "http://twitter.com/rezigned"
            }
        ],
        "description": "PHP URI Template (RFC 6570) supports both expansion & extraction",
        "keywords": [
            "RFC 6570",
            "Template",
            "URI"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-sarciszewski/php-future",
        "version": "0.4.2",
        "version_normalized": "0.4.2.0",
        "dist": {
            "type": "path",
            "url": "../library/sarciszewski/php-future",
            "reference": "cd857e59f69021787a598bbfaaf85c8765e07542",
            "shasum": null
        },
        "require-dev": {
            "phpunit/phpunit": "4.5.*"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "files": [
                "autoload.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Scott Arciszewski",
                "email": "scott@paragonie.com",
                "homepage": "https://appsec.solutions",
                "role": "Developer"
            }
        ],
        "description": "Polyfill new (5.6+) features into old (5.4+) versions of PHP",
        "keywords": [
            "compatibility",
            "future",
            "hash_equals",
            "security"
        ],
        "support": {
            "issues": "https://github.com/sarciszewski/php-future/issues",
            "email": "info@paragonie.com",
            "source": "https://github.com/sarciszewski/php-future"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-shortpixel/shortpixel-php",
        "version": "v1.6.4",
        "version_normalized": "1.6.4.0",
        "dist": {
            "type": "path",
            "url": "../library/shortpixel/shortpixel-php",
            "reference": "4e16f4ce42f5aaab96facda36b7442e382ffb69a",
            "shasum": null
        },
        "require": {
            "ext-curl": "*",
            "ext-json": "*",
            "lib-curl": ">=7.20.0",
            "php": ">=5.3.0"
        },
        "require-dev": {
            "phpunit/phpunit": "~4.0",
            "symfony/yaml": "~2.0"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "files": [
                "lib/ShortPixel.php",
                "lib/ShortPixel/Exception.php"
            ],
            "psr-4": {
                "MediaCloud\\Vendor\\ShortPixel\\": "lib/ShortPixel/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Simon Duduica",
                "email": "simon@shortpixel.com"
            }
        ],
        "description": "ShortPixel PHP SDK. Read more at https://shortpixel.com/api-tools",
        "homepage": "https://shortpixel.com/api",
        "keywords": [
            "api",
            "compress",
            "images",
            "optimize",
            "shortpixel"
        ],
        "support": {
            "email": "support@shortpixel.com"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-smalot/pdfparser",
        "version": "0.16.1",
        "version_normalized": "0.16.1.0",
        "dist": {
            "type": "path",
            "url": "../library/smalot/pdfparser",
            "reference": "ae06021e2d3856b258c08342f5e980bcf6c53cba",
            "shasum": null
        },
        "require": {
            "ext-mbstring": "*",
            "ext-zlib": "*",
            "php": ">=5.6"
        },
        "require-dev": {
            "friendsofphp/php-cs-fixer": "^2.16.3",
            "symfony/phpunit-bridge": "^4.2.3"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-0": {
                "MediaCloud\\Vendor\\Smalot\\PdfParser\\": "src/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Test\\Smalot\\PdfParser\\": "test/",
                "Tests\\Smalot\\PdfParser\\": "tests/"
            }
        },
        "license": [
            "LGPL-3.0"
        ],
        "authors": [
            {
                "name": "Sebastien MALOT",
                "email": "sebastien@malot.fr"
            }
        ],
        "description": "Pdf parser library. Can read and extract information from pdf file.",
        "homepage": "http://www.pdfparser.org",
        "keywords": [
            "PDF",
            "extract",
            "parse",
            "parser",
            "text"
        ],
        "support": {
            "issues": "https://github.com/smalot/pdfparser/issues"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-symfony/debug",
        "version": "v3.4.43",
        "version_normalized": "3.4.43.0",
        "dist": {
            "type": "path",
            "url": "../library/symfony/debug",
            "reference": "1fe85a01e49b6615d0d6c535c878a23a99141dcb",
            "shasum": null
        },
        "require": {
            "mcloud-psr/log": "1.1.3",
            "php": "^5.5.9|>=7.0.8"
        },
        "conflict": {
            "symfony/http-kernel": ">=2.3,<2.3.24|~2.4.0|>=2.5,<2.5.9|>=2.6,<2.6.2"
        },
        "require-dev": {
            "symfony/http-kernel": "~2.8|~3.0|~4.0"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Symfony\\Component\\Debug\\": ""
            },
            "exclude-from-classmap": [
                "/Tests/"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Fabien Potencier",
                "email": "fabien@symfony.com"
            },
            {
                "name": "Symfony Community",
                "homepage": "https://symfony.com/contributors"
            }
        ],
        "description": "Symfony Debug Component",
        "homepage": "https://symfony.com",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-symfony/finder",
        "version": "v3.4.43",
        "version_normalized": "3.4.43.0",
        "dist": {
            "type": "path",
            "url": "../library/symfony/finder",
            "reference": "df57fe41360bd3d067eadda9c60bd3f047c472a5",
            "shasum": null
        },
        "require": {
            "php": "^5.5.9|>=7.0.8"
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Symfony\\Component\\Finder\\": ""
            },
            "exclude-from-classmap": [
                "/Tests/"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Fabien Potencier",
                "email": "fabien@symfony.com"
            },
            {
                "name": "Symfony Community",
                "homepage": "https://symfony.com/contributors"
            }
        ],
        "description": "Symfony Finder Component",
        "homepage": "https://symfony.com",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-symfony/polyfill-intl-idn",
        "version": "v1.18.1",
        "version_normalized": "1.18.1.0",
        "dist": {
            "type": "path",
            "url": "../library/symfony/polyfill-intl-idn",
            "reference": "4e69ace7f75516b71cc92a7f310e708e60e29d8b",
            "shasum": null
        },
        "require": {
            "mcloud-symfony/polyfill-intl-normalizer": "v1.18.1",
            "mcloud-symfony/polyfill-php70": "v1.18.1",
            "mcloud-symfony/polyfill-php72": "v1.18.1",
            "php": ">=5.3.3"
        },
        "suggest": {
            "ext-intl": "For best performance"
        },
        "type": "library",
        "extra": {
            "branch-alias": [],
            "thanks": {
                "name": "symfony/polyfill",
                "url": "https://github.com/symfony/polyfill"
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Symfony\\Polyfill\\Intl\\Idn\\": ""
            },
            "files": [
                "bootstrap.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Laurent Bassin",
                "email": "laurent@bassin.info"
            },
            {
                "name": "Trevor Rowbotham",
                "email": "trevor.rowbotham@pm.me"
            },
            {
                "name": "Symfony Community",
                "homepage": "https://symfony.com/contributors"
            }
        ],
        "description": "Symfony polyfill for intl's idn_to_ascii and idn_to_utf8 functions",
        "homepage": "https://symfony.com",
        "keywords": [
            "compatibility",
            "idn",
            "intl",
            "polyfill",
            "portable",
            "shim"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-symfony/polyfill-intl-normalizer",
        "version": "v1.18.1",
        "version_normalized": "1.18.1.0",
        "dist": {
            "type": "path",
            "url": "../library/symfony/polyfill-intl-normalizer",
            "reference": "fc368a27e347a28067689ebe0476f255d625b764",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.3"
        },
        "suggest": {
            "ext-intl": "For best performance"
        },
        "type": "library",
        "extra": {
            "branch-alias": [],
            "thanks": {
                "name": "symfony/polyfill",
                "url": "https://github.com/symfony/polyfill"
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Symfony\\Polyfill\\Intl\\Normalizer\\": ""
            },
            "files": [
                "bootstrap.php"
            ],
            "classmap": [
                "Resources/stubs"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Nicolas Grekas",
                "email": "p@tchwork.com"
            },
            {
                "name": "Symfony Community",
                "homepage": "https://symfony.com/contributors"
            }
        ],
        "description": "Symfony polyfill for intl's Normalizer class and related functions",
        "homepage": "https://symfony.com",
        "keywords": [
            "compatibility",
            "intl",
            "normalizer",
            "polyfill",
            "portable",
            "shim"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-symfony/polyfill-mbstring",
        "version": "v1.18.1",
        "version_normalized": "1.18.1.0",
        "dist": {
            "type": "path",
            "url": "../library/symfony/polyfill-mbstring",
            "reference": "46d415ebca19d1c7d520bfc761c6c2f2953c6132",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.3"
        },
        "suggest": {
            "ext-mbstring": "For best performance"
        },
        "type": "library",
        "extra": {
            "branch-alias": [],
            "thanks": {
                "name": "symfony/polyfill",
                "url": "https://github.com/symfony/polyfill"
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Symfony\\Polyfill\\Mbstring\\": ""
            },
            "files": [
                "bootstrap.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Nicolas Grekas",
                "email": "p@tchwork.com"
            },
            {
                "name": "Symfony Community",
                "homepage": "https://symfony.com/contributors"
            }
        ],
        "description": "Symfony polyfill for the Mbstring extension",
        "homepage": "https://symfony.com",
        "keywords": [
            "compatibility",
            "mbstring",
            "polyfill",
            "portable",
            "shim"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-symfony/polyfill-php70",
        "version": "v1.18.1",
        "version_normalized": "1.18.1.0",
        "dist": {
            "type": "path",
            "url": "../library/symfony/polyfill-php70",
            "reference": "27a9235cc596983f58d3f286185957510f3d254c",
            "shasum": null
        },
        "require": {
            "mcloud-paragonie/random_compat": "v2.0.18",
            "php": ">=5.3.3"
        },
        "type": "library",
        "extra": {
            "branch-alias": [],
            "thanks": {
                "name": "symfony/polyfill",
                "url": "https://github.com/symfony/polyfill"
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Symfony\\Polyfill\\Php70\\": ""
            },
            "files": [
                "bootstrap.php"
            ],
            "classmap": [
                "Resources/stubs"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Nicolas Grekas",
                "email": "p@tchwork.com"
            },
            {
                "name": "Symfony Community",
                "homepage": "https://symfony.com/contributors"
            }
        ],
        "description": "Symfony polyfill backporting some PHP 7.0+ features to lower PHP versions",
        "homepage": "https://symfony.com",
        "keywords": [
            "compatibility",
            "polyfill",
            "portable",
            "shim"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-symfony/polyfill-php72",
        "version": "v1.18.1",
        "version_normalized": "1.18.1.0",
        "dist": {
            "type": "path",
            "url": "../library/symfony/polyfill-php72",
            "reference": "a812398c283253fa636ab45a5b9f072bbeb4455c",
            "shasum": null
        },
        "require": {
            "php": ">=5.3.3"
        },
        "type": "library",
        "extra": {
            "branch-alias": [],
            "thanks": {
                "name": "symfony/polyfill",
                "url": "https://github.com/symfony/polyfill"
            }
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Symfony\\Polyfill\\Php72\\": ""
            },
            "files": [
                "bootstrap.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Nicolas Grekas",
                "email": "p@tchwork.com"
            },
            {
                "name": "Symfony Community",
                "homepage": "https://symfony.com/contributors"
            }
        ],
        "description": "Symfony polyfill backporting some PHP 7.2+ features to lower PHP versions",
        "homepage": "https://symfony.com",
        "keywords": [
            "compatibility",
            "polyfill",
            "portable",
            "shim"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-symfony/translation",
        "version": "v3.4.43",
        "version_normalized": "3.4.43.0",
        "dist": {
            "type": "path",
            "url": "../library/symfony/translation",
            "reference": "58a8cbb5c99b56abd94e1a34cc43b0f53076a132",
            "shasum": null
        },
        "require": {
            "mcloud-symfony/polyfill-mbstring": "v1.18.1",
            "php": "^5.5.9|>=7.0.8"
        },
        "conflict": {
            "symfony/config": "<2.8",
            "symfony/dependency-injection": "<3.4",
            "symfony/yaml": "<3.4"
        },
        "require-dev": {
            "psr/log": "~1.0",
            "symfony/config": "~2.8|~3.0|~4.0",
            "symfony/dependency-injection": "~3.4|~4.0",
            "symfony/finder": "~2.8|~3.0|~4.0",
            "symfony/http-kernel": "~3.4|~4.0",
            "symfony/intl": "^2.8.18|^3.2.5|~4.0",
            "symfony/var-dumper": "~3.4|~4.0",
            "symfony/yaml": "~3.4|~4.0"
        },
        "suggest": {
            "psr/log-implementation": "To use logging capability in translator",
            "symfony/config": "",
            "symfony/yaml": ""
        },
        "type": "library",
        "extra": {
            "branch-alias": []
        },
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Symfony\\Component\\Translation\\": ""
            },
            "exclude-from-classmap": [
                "/Tests/"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Fabien Potencier",
                "email": "fabien@symfony.com"
            },
            {
                "name": "Symfony Community",
                "homepage": "https://symfony.com/contributors"
            }
        ],
        "description": "Symfony Translation Component",
        "homepage": "https://symfony.com",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-tinify/tinify",
        "version": "1.5.2",
        "version_normalized": "1.5.2.0",
        "dist": {
            "type": "path",
            "url": "../library/tinify/tinify",
            "reference": "094908a4b8a94b04e0c9e55ebc10703d8e96a02f",
            "shasum": null
        },
        "require": {
            "ext-curl": "*",
            "ext-json": "*",
            "lib-curl": ">=7.20.0",
            "php": ">=5.3.0"
        },
        "require-dev": {
            "phpunit/phpunit": "~4.0",
            "symfony/yaml": "~2.0"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "files": [
                "lib/Tinify.php",
                "lib/Tinify/Exception.php"
            ],
            "psr-4": {
                "MediaCloud\\Vendor\\Tinify\\": "lib/Tinify/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Rolf Timmermans",
                "email": "rolftimmermans@voormedia.com"
            }
        ],
        "description": "PHP client for the Tinify API. Tinify compresses your images intelligently. Read more at https://tinify.com.",
        "homepage": "https://tinify.com/developers",
        "keywords": [
            "api",
            "compress",
            "images",
            "tinify",
            "tinyjpg",
            "tinypng"
        ],
        "support": {
            "email": "support@tinify.com"
        },
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-trntv/probe",
        "version": "1.0.1",
        "version_normalized": "1.0.1.0",
        "dist": {
            "type": "path",
            "url": "../library/trntv/probe",
            "reference": "752eeaaf957852049bdf6a24a6adc72722152cb2",
            "shasum": null
        },
        "require-dev": {
            "phpunit/phpunit": "^5.0"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Probe\\": "src/"
            }
        },
        "autoload-dev": {
            "psr-4": {
                "Probe\\Tests\\": "tests/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Eugene Terentev",
                "email": "eugene@terentev.net"
            }
        ],
        "description": "System information provider",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-willwashburn/stream",
        "version": "v1.0.0",
        "version_normalized": "1.0.0.0",
        "dist": {
            "type": "path",
            "url": "../library/willwashburn/stream",
            "reference": "5b7f2732ba9c181bb1631ef930351d0d1564f50a",
            "shasum": null
        },
        "require": {
            "php": ">=5.4.0"
        },
        "require-dev": {
            "mockery/mockery": "~0.9",
            "phpunit/phpunit": "~4.0"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\WillWashburn\\": "src/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Will Washburn",
                "email": "will.washburn@gmail.com"
            }
        ],
        "description": "model a sequence of data elements made available over time ",
        "homepage": "https://github.com/willwashburn/stream",
        "keywords": [
            "peek",
            "read",
            "stream",
            "streamable"
        ],
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-wp-media/imagify-php",
        "version": "1.1.0",
        "version_normalized": "1.1.0.0",
        "dist": {
            "type": "path",
            "url": "../library/wp-media/imagify-php",
            "reference": "1f70441bf4adea413a454bd4741c9122d542b42b",
            "shasum": null
        },
        "require": {
            "ext-curl": "*",
            "php": ">=5.5"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "classmap": [
                "class-imagify.php"
            ]
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "WP Media",
                "email": "contact@wp-media.me",
                "role": "Developer"
            },
            {
                "name": "Clément JOBEILI",
                "email": "contact@yurplan.com",
                "role": "Contributor"
            }
        ],
        "description": "Imagify API client library for PHP",
        "transport-options": {
            "symlink": false
        }
    },
    {
        "name": "mcloud-zumba/amplitude-php",
        "version": "1.0.0",
        "version_normalized": "1.0.0.0",
        "dist": {
            "type": "path",
            "url": "../library/zumba/amplitude-php",
            "reference": "a0d36c5464fb44f886bd42f7e4118bdfd7a884a9",
            "shasum": null
        },
        "require": {
            "mcloud-psr/log": "1.1.3",
            "php": ">=5.4"
        },
        "require-dev": {
            "phpunit/phpunit": "4.8.*",
            "squizlabs/php_codesniffer": "2.6.*"
        },
        "type": "library",
        "installation-source": "dist",
        "autoload": {
            "psr-4": {
                "MediaCloud\\Vendor\\Zumba\\Amplitude\\": "./src/",
                "MediaCloud\\Vendor\\Zumba\\Amplitude\\Test\\": "./test/"
            }
        },
        "license": [
            "MIT"
        ],
        "authors": [
            {
                "name": "Zumba Fitness, LLC",
                "homepage": "https://tech.zumba.com"
            },
            {
                "name": "Jonathan Foote",
                "email": "jonathan.foote@zumba.com",
                "role": "Developer"
            }
        ],
        "description": "PHP SDK for Amplitude",
        "homepage": "https://github.com/zumba/amplitude-php",
        "keywords": [
            "amplitude",
            "analytics",
            "sdk",
            "tracking"
        ],
        "transport-options": {
            "symlink": false
        }
    }
]
