<?php

namespace MediaCloud\Vendor\Aws\CodeCommit;
use MediaCloud\Vendor\Aws\AwsClient;

/**
 * This client is used to interact with the **AWS CodeCommit** service.
 *
 * @method \MediaCloud\Vendor\Aws\Result associateApprovalRuleTemplateWithRepository(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise associateApprovalRuleTemplateWithRepositoryAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result batchAssociateApprovalRuleTemplateWithRepositories(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise batchAssociateApprovalRuleTemplateWithRepositoriesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result batchDescribeMergeConflicts(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise batchDescribeMergeConflictsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result batchDisassociateApprovalRuleTemplateFromRepositories(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise batchDisassociateApprovalRuleTemplateFromRepositoriesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result batchGetCommits(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise batchGetCommitsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result batchGetRepositories(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise batchGetRepositoriesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createApprovalRuleTemplate(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createApprovalRuleTemplateAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createBranch(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createBranchAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createCommit(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createCommitAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createPullRequest(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createPullRequestAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createPullRequestApprovalRule(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createPullRequestApprovalRuleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createRepository(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createRepositoryAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result createUnreferencedMergeCommit(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise createUnreferencedMergeCommitAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteApprovalRuleTemplate(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteApprovalRuleTemplateAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteBranch(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteBranchAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteCommentContent(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteCommentContentAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteFile(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteFileAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deletePullRequestApprovalRule(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deletePullRequestApprovalRuleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result deleteRepository(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise deleteRepositoryAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describeMergeConflicts(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describeMergeConflictsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result describePullRequestEvents(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise describePullRequestEventsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result disassociateApprovalRuleTemplateFromRepository(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise disassociateApprovalRuleTemplateFromRepositoryAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result evaluatePullRequestApprovalRules(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise evaluatePullRequestApprovalRulesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getApprovalRuleTemplate(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getApprovalRuleTemplateAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getBlob(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getBlobAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getBranch(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getBranchAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getComment(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getCommentAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getCommentReactions(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getCommentReactionsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getCommentsForComparedCommit(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getCommentsForComparedCommitAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getCommentsForPullRequest(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getCommentsForPullRequestAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getCommit(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getCommitAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getDifferences(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getDifferencesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getFile(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getFileAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getFolder(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getFolderAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getMergeCommit(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getMergeCommitAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getMergeConflicts(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getMergeConflictsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getMergeOptions(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getMergeOptionsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getPullRequest(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getPullRequestAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getPullRequestApprovalStates(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getPullRequestApprovalStatesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getPullRequestOverrideState(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getPullRequestOverrideStateAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getRepository(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getRepositoryAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result getRepositoryTriggers(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise getRepositoryTriggersAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listApprovalRuleTemplates(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listApprovalRuleTemplatesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listAssociatedApprovalRuleTemplatesForRepository(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listAssociatedApprovalRuleTemplatesForRepositoryAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listBranches(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listBranchesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listPullRequests(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listPullRequestsAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listRepositories(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listRepositoriesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listRepositoriesForApprovalRuleTemplate(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listRepositoriesForApprovalRuleTemplateAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result listTagsForResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise listTagsForResourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result mergeBranchesByFastForward(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise mergeBranchesByFastForwardAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result mergeBranchesBySquash(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise mergeBranchesBySquashAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result mergeBranchesByThreeWay(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise mergeBranchesByThreeWayAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result mergePullRequestByFastForward(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise mergePullRequestByFastForwardAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result mergePullRequestBySquash(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise mergePullRequestBySquashAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result mergePullRequestByThreeWay(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise mergePullRequestByThreeWayAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result overridePullRequestApprovalRules(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise overridePullRequestApprovalRulesAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result postCommentForComparedCommit(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise postCommentForComparedCommitAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result postCommentForPullRequest(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise postCommentForPullRequestAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result postCommentReply(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise postCommentReplyAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result putCommentReaction(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise putCommentReactionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result putFile(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise putFileAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result putRepositoryTriggers(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise putRepositoryTriggersAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result tagResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise tagResourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result testRepositoryTriggers(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise testRepositoryTriggersAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result untagResource(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise untagResourceAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updateApprovalRuleTemplateContent(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updateApprovalRuleTemplateContentAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updateApprovalRuleTemplateDescription(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updateApprovalRuleTemplateDescriptionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updateApprovalRuleTemplateName(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updateApprovalRuleTemplateNameAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updateComment(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updateCommentAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updateDefaultBranch(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updateDefaultBranchAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updatePullRequestApprovalRuleContent(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updatePullRequestApprovalRuleContentAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updatePullRequestApprovalState(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updatePullRequestApprovalStateAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updatePullRequestDescription(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updatePullRequestDescriptionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updatePullRequestStatus(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updatePullRequestStatusAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updatePullRequestTitle(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updatePullRequestTitleAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updateRepositoryDescription(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updateRepositoryDescriptionAsync(array $args = [])
 * @method \MediaCloud\Vendor\Aws\Result updateRepositoryName(array $args = [])
 * @method \MediaCloud\Vendor\GuzzleHttp\Promise\Promise updateRepositoryNameAsync(array $args = [])
 */
class CodeCommitClient extends AwsClient {}
