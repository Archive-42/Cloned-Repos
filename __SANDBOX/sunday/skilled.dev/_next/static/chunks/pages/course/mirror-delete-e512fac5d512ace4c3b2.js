_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[89],{"+FKO":function(e,a,t){"use strict";var n=t("ODXe"),c=t("q1tI"),o=t("ahz1"),s=t("vOnD"),p=t("IqxL"),r=t("gWsq"),m=t("MLAZ"),l=Object(s.e)(r.p).withConfig({componentId:"sc-77trup-0"})(["color:inherit;font-weight:inherit;background-image:linear-gradient( transparent 0%,transparent calc(50% - ","px),"," calc(50% - ","px),"," 100% );background-size:100% 200%;transition:background-position 125ms ease-in-out 0s,padding 125ms ease-in-out 0s;background-position:0px 0px;padding:0;padding:2px 0px 3px;&:hover,&:focus{background-position:0px 100%;background-image:linear-gradient( transparent 0%,transparent calc(50% - ","px),"," calc(50% - ","px),"," 100% );color:",";outline:none;}"],4,(function(e){var a=e.theme;return Object(m.a)(a.color.highlight,.6)}),4,(function(e){var a=e.theme;return Object(m.a)(a.color.highlight,.6)}),4,(function(e){return e.theme.color.highlight}),4,(function(e){return e.theme.color.highlight}),p.b.Black2),N=function(e){var a=e.children,t=e.content,s=c.useState(!1),p=Object(n.a)(s,2),r=p[0],m=p[1],N=c.useCallback((function(){return m((function(e){return!e}))}),[]);return c.createElement(c.Fragment,null,c.createElement(l,{onClick:N,"aria-haspopup":!0,"aria-expanded":r},a),c.createElement(o.a,{titleText:"Concept reference",isOpen:r,onClose:N,content:t}))};a.a=N},"/7Ff":function(e,a,t){"use strict";t("q1tI"),t("gWsq");var n=t("vOnD"),c=t("SOUA");n.e.div.withConfig({componentId:"sc-1wx4o7x-0"})(["margin-top:","px;"],c.a),n.e.div.withConfig({componentId:"sc-1wx4o7x-1"})(["color:",";font-weight:300;text-transform:uppercase;font-size:14px;"],(function(e){return e.theme.color.textSecondary}))},"5Tm1":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/mirror-delete",function(){return t("TEa6")}])},"7Fnj":function(e,a,t){"use strict";var n=t("rePB"),c=t("JT+q"),o=t("Utoj"),s=Object(n.a)({},o.a.Javascript,"null"),p=Object(c.a)(s);a.a=p},JanF:function(e,a,t){"use strict";t.d(a,"a",(function(){return m}));var n=t("wx14"),c=t("Ff2n"),o=(t("q1tI"),t("7ljp")),s=t("ts52"),p=t("jDXR"),r={};function m(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},r,t,{components:a,mdxType:"MDXLayout"}),Object(o.a)(p.a,{mdxType:"SubsectionHeader"},"Pointers"),Object(o.a)("p",null,"VIDEO FOR CONCEPT"),Object(o.a)(s.a,{mdxType:"Introudction"}))}m.isMDXComponent=!0},TEa6:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return ye}));var n=t("wx14"),c=t("q1tI"),o=t("NoRJ"),s=t("Qovc"),p=t("gh+C"),r=t("kB7q"),m=t("Ff2n"),l=t("7ljp"),N=t("7Fnj"),i=(t("/7Ff"),t("Utoj")),d=t("rePB"),u=t("Jpar"),b={};function j(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(l.a)("span",{parentName:"code",className:"token class-name"},"Node")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"data"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," data",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Input"),"\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," head ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(l.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token number"},"42"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// ... then add more nodes"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// k = 5     4     3    2    1    0"),"\n       ",Object(l.a)("span",{parentName:"code",className:"token number"},"42")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"52")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"4")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"6")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"9000"),"\n\n\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Output: mirroDelete(head, 2)"),"\n",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Remove k = 2 which is the 6"),"\n",Object(l.a)("span",{parentName:"code",className:"token number"},"42")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"52")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"4")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"-"),Object(l.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"9000"),"\n")))}j.isMDXComponent=!0;var O=Object(d.a)({},i.a.Javascript,c.createElement(j,null)),k=Object(u.a)(O),h={};function w(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},h,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)(k,{mdxType:"InputOutput"}))}w.isMDXComponent=!0;var f=t("JT+q"),y=Object(d.a)({},i.a.Javascript,"mirrorDelete"),g=Object(f.a)(y),x={};function v(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},x,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"You are given the head ",Object(l.a)("inlineCode",{parentName:"p"},"Node")," of a singly linked list and are told you need to remove an element in the list.\nHowever, instead of being given the index relative to the head for the element you want to delete, you are told you want to remove an item ",Object(l.a)("inlineCode",{parentName:"p"},"k")," nodes back from the tail."),Object(l.a)("p",null,"Constraints:"),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},"Iterate through the linked list in one pass."),Object(l.a)("li",{parentName:"ol"},"You don't know the size of the linked list."),Object(l.a)("li",{parentName:"ol"},Object(l.a)("inlineCode",{parentName:"li"},"k >= 0")),Object(l.a)("li",{parentName:"ol"},"The tail node is considered the ",Object(l.a)("inlineCode",{parentName:"li"},"k = 0")," element."),Object(l.a)("li",{parentName:"ol"},"If there is no node that can be removed, return the same list.")),Object(l.a)("blockquote",null,Object(l.a)("p",{parentName:"blockquote"},"The definition of one pass is up for debate.\nIn this problem, we'll define it as:\nonce your pointer reaches the tail, you can't then start another pointer at the head again.")),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Given a linked list head node and an integer ",Object(l.a)("inlineCode",{parentName:"strong"},"k"),", write a function ",Object(l.a)(g,{mdxType:"InlineCode"})," that removes the kth element back from the tail node in one pass.")),Object(l.a)(w,{mdxType:"SampleInputOutput"}))}v.isMDXComponent=!0;var C=v,T={};function D(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},T,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)(C,{mdxType:"QuestionStatement"}))}D.isMDXComponent=!0;var M=D,X=t("Ydbm"),I={};function S(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},I,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"This can either be solved iteratively or recursively.\nThe recursive solution is not more elegant and will also add ",Object(l.a)(X.a.n,null)," space,\nso the best path is to tackle it iteratively."))}S.isMDXComponent=!0;var L={};function q(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},L,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"Remember you can only use one pass on the linked list.\nThis means as we're iterating through, we need to know exactly where our kth node is to delete it.\nIf you introduce a second pointer with the runner technique, you could calculate that."))}q.isMDXComponent=!0;var E={};function W(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},E,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"Remember to delete a node, you actually need to be in the spot before it on the list.\nMake sure your solution accounts for that."))}W.isMDXComponent=!0;var A={};function F(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},A,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"Make sure you account for any ",Object(l.a)("inlineCode",{parentName:"p"},"k >= 0"),".\nTest where ",Object(l.a)("inlineCode",{parentName:"p"},"k")," is larger than the list, inside the list, corresponds to the head, and corresponds to the tail.\nThere are edge cases and off-by-one issues that you need to make sure you capture."))}F.isMDXComponent=!0;var J=[S,q,W,F],R=t("+FKO"),_=t("wN5W"),z=t("jkan"),B={};function P(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},B,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"We already know how to ",Object(l.a)(R.a,{content:Object(l.a)(_.a,{mdxType:"DeleteNode"}),mdxType:"ConceptModal"},"delete an item")," when we're given an index from the front of the list.\nIterate to the node before the index and then set its ",Object(l.a)("inlineCode",{parentName:"p"},"next")," pointer to the node after the index."),Object(l.a)("p",null,"For this question, we're asked to do the opposite \u2014 remove a node ",Object(l.a)("inlineCode",{parentName:"p"},"k")," spots from the tail."),Object(l.a)("p",null,"This immediately presents some additional challenges:"),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},"With a normal delete, we don't need to know the size of the linked list because we can just count from the beginning.\nWith our mirror delete, without knowing the size, we can't determine the position of the ",Object(l.a)("inlineCode",{parentName:"li"},"k")," node in the list until we know where the tail is."),Object(l.a)("li",{parentName:"ol"},"We need to make sure that we get positioned correctly to delete the ",Object(l.a)("inlineCode",{parentName:"li"},"k")," node which adds additional difficulty by thinking through the problem backward.")),Object(l.a)("p",null,"To delete the item at the ",Object(l.a)("inlineCode",{parentName:"p"},"k")," location, we actually want land at the ",Object(l.a)("inlineCode",{parentName:"p"},"k + 1")," spot.\nThen we point the ",Object(l.a)("inlineCode",{parentName:"p"},"next")," value of the pointer at ",Object(l.a)("inlineCode",{parentName:"p"},"k + 1")," to the node after the item at the ",Object(l.a)("inlineCode",{parentName:"p"},"k")," spot which deletes it."),Object(l.a)(z.a,{src:"/images/mirror-delete-example.png",mdxType:"Image"}),Object(l.a)("p",null,"In the above example, we want to delete ",Object(l.a)("inlineCode",{parentName:"p"},"k = 2"),".\nWe need to figure out the best way to get to the ",Object(l.a)("inlineCode",{parentName:"p"},"k = 3")," spot.\nOnce there, we point its ",Object(l.a)("inlineCode",{parentName:"p"},"next")," value to the node at ",Object(l.a)("inlineCode",{parentName:"p"},"k = 1"),"."))}P.isMDXComponent=!0;var U={};function H(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},U,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"If we knew the linked list size, we could subtract our ",Object(l.a)("inlineCode",{parentName:"p"},"k")," to know the distance from the beginning which would turn this into a standard scenario to delete a node."),Object(l.a)("p",null,"Our next thought would be to find the length of the linked list by iterating through it once at ",Object(l.a)(X.a.n,null)," time.\nHowever, this would break the constraint of only going through the linked list in one pass."),Object(l.a)("p",null,"Let's rethink it. We want to know where the kth node from the tail is.\nSo if the tail is found, we immediately know where this node is relative to it.\nThe issue is that once we find the tail, we can't iterate backward."),Object(l.a)("p",null,"The prompt says we can only do it in one pass, but it doesn't say anything about using more than one pointer during our pass over the linked list.\nThere are only two landmarks we need track, the tail node and the node that corresponds to ",Object(l.a)("inlineCode",{parentName:"p"},"k")," when we're at the tail."))}H.isMDXComponent=!0;var V=t("qyGN"),G={};function Y(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},G,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"By using the ",Object(l.a)(R.a,{content:Object(l.a)(V.a,{mdxType:"RunnerTechnique"}),mdxType:"ConceptModal"},"runner technique"),", we can introduce a pointer that iterates ahead.\nWe create a ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," pointer that we want to reach the tail first, and a ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," pointer to track the ",Object(l.a)("inlineCode",{parentName:"p"},"k")," position."),Object(l.a)("p",null,"How far ahead should the ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," pointer be?\nTo delete a node, we want to be at one spot before it in the linked list.\nThis means that the ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," pointer should be 1 node behind the ",Object(l.a)("inlineCode",{parentName:"p"},"k")," node at ",Object(l.a)("inlineCode",{parentName:"p"},"k + 1")," when the ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," pointer reaches the tail.\nAt this location, ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," can delete the ",Object(l.a)("inlineCode",{parentName:"p"},"k")," item."),Object(l.a)("p",null,"Our solution algorithm will start with the ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," pointer at the head node.\nWe then iterate ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," forward an additional ",Object(l.a)("inlineCode",{parentName:"p"},"k + 1")," items (",Object(l.a)("inlineCode",{parentName:"p"},"0 to k")," times for zero-based indexing)."),Object(l.a)("p",null,"Once in position, we start the ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," pointer at the head.\n",Object(l.a)("inlineCode",{parentName:"p"},"lead")," will be ",Object(l.a)("inlineCode",{parentName:"p"},"k + 1")," nodes ahead of our ",Object(l.a)("inlineCode",{parentName:"p"},"follow"),"."),Object(l.a)("p",null,"Then iterate the ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," and ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," forward one spot until the value of ",Object(l.a)("inlineCode",{parentName:"p"},"lead.next")," is ",Object(l.a)(N.a,{mdxType:"Null"}),".\n",Object(l.a)("inlineCode",{parentName:"p"},"lead")," will be at the tail which is ",Object(l.a)("inlineCode",{parentName:"p"},"k = 0")," and ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," will be at ",Object(l.a)("inlineCode",{parentName:"p"},"k + 1"),".\nNow you can delete the ",Object(l.a)("inlineCode",{parentName:"p"},"k")," node which comes directly after ",Object(l.a)("inlineCode",{parentName:"p"},"follow"),".\nFinally, return the head."),Object(l.a)(z.a,{src:"/images/mirror-delete-runner.gif",mdxType:"Image"}))}Y.isMDXComponent=!0;var K={};function Q(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},K,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"The final task with this problem is to be thoughtful about edge cases and handle both normal and extreme scenarios."),Object(l.a)("p",null,"The ",Object(l.a)("inlineCode",{parentName:"p"},"k")," in this problem is a zero-based index.\nImagine we had a linked list with 4 items, ",Object(l.a)("inlineCode",{parentName:"p"},"42 -> 15 -> 7 -> 26"),".\n",Object(l.a)("inlineCode",{parentName:"p"},"k = 0")," corresponds to the tail with a value of ",Object(l.a)("inlineCode",{parentName:"p"},"26"),", and ",Object(l.a)("inlineCode",{parentName:"p"},"k = 3")," corresponds to the item at ",Object(l.a)("inlineCode",{parentName:"p"},"linkedList.length - 1")," which is our head with a value of ",Object(l.a)("inlineCode",{parentName:"p"},"42"),"."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Case 1: k == 0")),Object(l.a)("p",null,"We need to delete the tail node.\nThis means our ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," pointer needs to end one node behind our ",Object(l.a)("inlineCode",{parentName:"p"},"lead"),".\nSo when ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," reaches ",Object(l.a)("inlineCode",{parentName:"p"},"k = 0"),", our ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," will be at ",Object(l.a)("inlineCode",{parentName:"p"},"k = 1"),"."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Case 2: k > 0 && k < linkedList.length - 1")),Object(l.a)("p",null,"We want to delete a node inside the list that is not our head or tail."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Case 3: k == linkedList.length - 1")),Object(l.a)("p",null,"This corresponds to the head of the linked list since ",Object(l.a)("inlineCode",{parentName:"p"},"k")," is a zero-based index starting from the tail.\nSince there is no spot in front of the head, it can't be deleted as we normally would,\nand this is an edge case we need to account for."),Object(l.a)("p",null,"When we iterate our ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," runner forward, if it ends exactly on the ",Object(l.a)(N.a,{mdxType:"Null"})," terminator,\nwe know that we wanted to delete our head node since we are one spot outside the list."),Object(l.a)("p",null,"To delete the current head, we just return a new head which will be ",Object(l.a)("inlineCode",{parentName:"p"},"head.next"),"."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Case 4: k >= linkedList.length")),Object(l.a)("p",null,Object(l.a)("inlineCode",{parentName:"p"},"k")," is outside the bounds of our linked list, and we just return the head without removing a node."),Object(l.a)("p",null,Object(l.a)("strong",{parentName:"p"},"Off-By-One")),Object(l.a)("p",null,"The final consideration is handling indexes and considering off-by-one cases.\nFor this to work, we need to get ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," and ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," positioned correctly.\nKeep in mind the zero-based indexing."),Object(l.a)("p",null,"Give this a shot and check the solution when you're ready."))}Q.isMDXComponent=!0;var Z=[P,H,Y,Q],$=t("lcwc"),ee=t("PH+U"),ae=t("S2YG"),te={};function ne(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},te,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},"Used the ",Object(l.a)("strong",{parentName:"li"},"runner technique")," to solve this in ",Object(l.a)(X.a.n,null)," time in one pass.\nIn this instance, the runner started k + 1 nodes ahead and iterated at the same speed as our follower."),Object(l.a)("li",{parentName:"ul"},"Saw that we ",Object(l.a)("strong",{parentName:"li"},"delete a node")," in a linked list by simply skipping it and setting the preceding pointer's ",Object(l.a)("inlineCode",{parentName:"li"},"next")," reference to the node after the one we want to delete."),Object(l.a)("li",{parentName:"ul"},"We thought through edge cases and off-by-one errors")))}ne.isMDXComponent=!0;var ce=ne,oe={};function se(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},oe,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(l.a)("span",{parentName:"code",className:"token function-variable function"},"mirrorDelete")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"head",Object(l.a)("span",{parentName:"span",className:"token punctuation"},",")," k"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Create 2 pointers (follow and lead) that start at the head"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," follow ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," lead ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"/*\n    Since we want to delete the k node,\n    we set our follow pointer to be one spot beyond the deleted node.\n\n    So instead of iterating `0 to i < k` as with most problems,\n    we iterate `0 to i < k + 1` to account for that extra spot.\n  */"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"0"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"<")," k ",Object(l.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(l.a)("span",{parentName:"code",className:"token operator"},"++"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// If we hit a null, k is larger than our linked list,"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// so we return the head without deleting an item."),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"lead ",Object(l.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(l.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    lead ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," lead",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"/*\n    Our lead pointer will end exactly at the terminating null\n    when the head node should be removed (k == linkedList.length - 1).\n\n    Since we iterate to k + 1, our lead pointer is 1 item past\n    the end of the linked list, which is the terminating null value.\n  */"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"lead ",Object(l.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(l.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Increment until lead reaches the tail."),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Once here, we know the node we want to delete is at k, and our follow is at k + 1."),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"lead",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(l.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    follow ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," follow",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    lead ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," lead",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Delete the kth node (skip past it in our linked list)"),"\n  follow",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," follow",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// The head will be the same, but the list will not contain the node we deleted"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}se.isMDXComponent=!0;var pe=Object(d.a)({},i.a.Javascript,c.createElement(se,null)),re=Object(u.a)(pe),me={};function le(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},me,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("p",null,"The optimal way to solve is question is to use the ",Object(l.a)(R.a,{content:Object(l.a)(V.a,{mdxType:"RunnerTechnique"}),mdxType:"ConceptModal"},"runner technique"),"."),Object(l.a)("p",null,"Since we want to delete the kth node from the end of the linked list, we can use 2 pointers to track our position.\nTo remove the kth node, we actually want our pointer to stop our ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," pointer one node before the one we want to delete.\nThen we ",Object(l.a)(R.a,{content:Object(l.a)(_.a,{mdxType:"DeleteNode"}),mdxType:"ConceptModal"},"delete the node")," by pointing its ",Object(l.a)("inlineCode",{parentName:"p"},"next")," to the node after the kth one."),Object(l.a)("p",null,"To get the ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," and ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," pointer positioned correctly,\nwe start by iterating the ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," node from 0 to k nodes into the linked list.\nWith zero-based indexing, this will actually be ",Object(l.a)("inlineCode",{parentName:"p"},"k + 1")," total steps."),Object(l.a)("p",null,"Once the runner is in its starting spot, iterate both the ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," and ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," pointers forward simultaneously by one node until ",Object(l.a)("inlineCode",{parentName:"p"},"lead.next")," is ",Object(l.a)(N.a,{mdxType:"Null"}),".\nNow our ",Object(l.a)("inlineCode",{parentName:"p"},"lead")," is at ",Object(l.a)("inlineCode",{parentName:"p"},"k = 0"),", our ",Object(l.a)("inlineCode",{parentName:"p"},"follow")," is at ",Object(l.a)("inlineCode",{parentName:"p"},"k + 1"),", and the node we want to delete is ",Object(l.a)("inlineCode",{parentName:"p"},"k"),".\nWe can remove the node and then return the head of our list."),Object(l.a)("p",null,"The solution should also account for all the possible scenarios and edge cases since the only constraint the prompt puts on our ",Object(l.a)("inlineCode",{parentName:"p"},"k")," value is that ",Object(l.a)("inlineCode",{parentName:"p"},"k >= 0"),".\nThese cases include:"),Object(l.a)("ol",null,Object(l.a)("li",{parentName:"ol"},Object(l.a)("inlineCode",{parentName:"li"},"k == 0")," where we delete the tail"),Object(l.a)("li",{parentName:"ol"},Object(l.a)("inlineCode",{parentName:"li"},"k > 0 && k < linkedList.length - 1")," where we delete a node inside the list"),Object(l.a)("li",{parentName:"ol"},Object(l.a)("inlineCode",{parentName:"li"},"k == linkedList.length - 1")," where we delete the head"),Object(l.a)("li",{parentName:"ol"},Object(l.a)("inlineCode",{parentName:"li"},"k >= linkedList.length")," where the item isn't in the list")),Object(l.a)("p",null,"It's easy to get an off-by-one error, so make sure you understand the indexes we're using in the solution and the cases we're guarding against."),Object(l.a)("p",null,"Accounting for all of this, our solution takes the following form:"),Object(l.a)(re,{mdxType:"SolutionCode"}),Object(l.a)($.a,{mdxType:"ComplexitySubtitle"}),Object(l.a)("p",null,Object(l.a)(X.a.n,null)," time and ",Object(l.a)(X.a.constant,null)," space."),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},"Time: We iterate through ",Object(l.a)("inlineCode",{parentName:"li"},"n")," linked list nodes"),Object(l.a)("li",{parentName:"ul"},"Space: We only create 2 pointers")),Object(l.a)(ee.a,{mdxType:"VariationsSubtitle"}),Object(l.a)("ul",null,Object(l.a)("li",{parentName:"ul"},"Delete a node from a linked list (from the front)"),Object(l.a)("li",{parentName:"ul"},"Find the length of a linked list"),Object(l.a)("li",{parentName:"ul"},"Find where two linked lists intersect")),Object(l.a)(ae.a,{mdxType:"LearningOutcomesSubtitle"}),Object(l.a)(ce,{mdxType:"LearningOutcomes"}))}le.isMDXComponent=!0;var Ne=le,ie={};function de(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},ie,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(l.a)("span",{parentName:"code",className:"token function-variable function"},"mirrorDelete")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"head",Object(l.a)("span",{parentName:"span",className:"token punctuation"},",")," k"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token comment"},"// Your solution here"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}de.isMDXComponent=!0;var ue=Object(d.a)({},i.a.Javascript,c.createElement(de,null)),be=function(e){return ue[e]},je={};function Oe(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(l.a)("wrapper",Object(n.a)({},je,t,{components:a,mdxType:"MDXLayout"}),Object(l.a)("pre",{className:"language-javascript"},Object(l.a)("code",{parentName:"pre",className:"language-javascript"},Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," tests ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{")," values",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"11"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"13"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"19"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"23"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," k",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"13"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"19"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"23"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"'normal case'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{")," values",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," k",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"10")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"'k > linked list length'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{")," values",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," k",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"4")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"'k === linked list length'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{")," values",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," k",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"'k corresponds to head'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{")," values",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"7"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," k",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"0")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"3"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"5"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(l.a)("span",{parentName:"code",className:"token string"},"'k corresponds to tail'"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(l.a)("span",{parentName:"code",className:"token class-name"},"Node")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},"data"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," data",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(l.a)("span",{parentName:"code",className:"token function-variable function"},"buildLinkedList")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token parameter"},"array")," ",Object(l.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," head ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(l.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"array",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token number"},"0"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," node ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"1"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"<")," array",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(l.a)("span",{parentName:"code",className:"token operator"},"++"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    node",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(l.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"array",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    node ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," node",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(l.a)("span",{parentName:"code",className:"token function-variable function"},"listToArray")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token parameter"},"head")," ",Object(l.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," results ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," node ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"node ",Object(l.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(l.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    results",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"data"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    node ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," node",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," results",Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(l.a)("span",{parentName:"code",className:"token function-variable function"},"validate")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token parameter"},Object(l.a)("span",{parentName:"span",className:"token punctuation"},"{")," input",Object(l.a)("span",{parentName:"span",className:"token punctuation"},",")," expected",Object(l.a)("span",{parentName:"span",className:"token punctuation"},",")," description ",Object(l.a)("span",{parentName:"span",className:"token punctuation"},"}")),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," head ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"buildLinkedList"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"input",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"values"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," userAnswer ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"mirrorDelete"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"head",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," input",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"k"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"const")," answerAsArray ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token function"},"listToArray"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"userAnswer",Object(l.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," passed ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token boolean"},"true"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"answerAsArray",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"length")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"!==")," expected",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    passed ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token boolean"},"false"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(l.a)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token number"},"0"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(l.a)("span",{parentName:"code",className:"token operator"},"<")," answerAsArray",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(l.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(l.a)("span",{parentName:"code",className:"token operator"},"++"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"("),"answerAsArray",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(l.a)("span",{parentName:"code",className:"token operator"},"!==")," expected",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        passed ",Object(l.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(l.a)("span",{parentName:"code",className:"token boolean"},"false"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(l.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"{")," passed",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," description",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," expected",Object(l.a)("span",{parentName:"code",className:"token punctuation"},",")," userAnswer",Object(l.a)("span",{parentName:"code",className:"token punctuation"},":")," answerAsArray ",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(l.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(l.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}Oe.isMDXComponent=!0;var ke=Object(d.a)({},i.a.Javascript,c.createElement(Oe,null)),he=function(e){return ke[e]},we={segments:[{name:"Introduction",startTimeSeconds:0,endTimeSeconds:9},{name:"Question Prompt",startTimeSeconds:9,endTimeSeconds:63},{name:"Constraints",startTimeSeconds:63,endTimeSeconds:105},{name:"Solution Breakdown",startTimeSeconds:105,endTimeSeconds:497},{name:"Solution Summary and Big O",startTimeSeconds:497,endTimeSeconds:557},{name:"Code Walkthrough",startTimeSeconds:557,endTimeSeconds:761}]},fe=function(e){var a=e.hasLessonAccess;return c.createElement(p.a,Object(n.a)({},e,{Introduction:M,QuestionStatement:C,Solution:a?Ne:r.a,LearningOutcomes:a?ce:null,validationItems:J,explanationItems:a?Z:[],getUserAnswer:be,getTests:a?he:r.b,getSolutionCode:a?re:r.b,video:we}))},ye=!0;a.default=Object(s.a)((function(e){return c.useEffect((function(){e.lesson&&"ACTIVE"===e.lesson.status||(window.location.href="/course")}),[e]),e.lesson&&"ACTIVE"===e.lesson.status?c.createElement(o.a,Object(n.a)({},e,{Component:fe})):null}),{ssr:!1})},jDXR:function(e,a,t){"use strict";var n=t("q1tI"),c=function(e){var a=e.children;return n.createElement("h2",null,a)};a.a=c},jkan:function(e,a,t){"use strict";var n=t("q1tI"),c=t("vOnD"),o=t("uqmq"),s=t("5nwr"),p=Object(c.e)(o.b).withConfig({componentId:"sc-1u1nk7e-0"})(["display:flex;justify-content:center;align-items:center;flex-direction:column;"]),r=c.e.img.withConfig({componentId:"sc-1u1nk7e-1"})(["border-radius:6px;max-width:",";","{max-width:100% !important;}"],(function(e){var a=e.maxWidth;return a?"".concat(a," !important"):"100%"}),Object(s.b)()),m=c.e.div.withConfig({componentId:"sc-1u1nk7e-2"})(["margin-top:4px;font-size:12px;color:",";text-align:center;width:100%;a,a:hover,a:visited{color:",";text-decoration:underline;}"],(function(e){return e.theme.color.textSecondary}),(function(e){return e.theme.color.textSecondary})),l=function(){return n.createElement("span",null,"Credit:"," ",n.createElement("a",{href:"https://visualgo.net/",target:"_blank",rel:"noopener noreferrer"},"VisuAlgo"))},N=function(e){var a=e.src,t=e.credit,c=e.isVisuAlgo,o=e.maxWidth;return n.createElement(p,null,n.createElement(r,{maxWidth:o,src:a}),!!t&&n.createElement(m,null,t),!!c&&n.createElement(m,null,n.createElement(l,null)))};a.a=N},qyGN:function(e,a,t){"use strict";t.d(a,"a",(function(){return j}));var n=t("wx14"),c=t("Ff2n"),o=t("q1tI"),s=t("7ljp"),p=t("jDXR"),r=(t("iD9/"),t("rePB")),m=t("Utoj"),l=t("Jpar"),N={};function i(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},N,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)("pre",{className:"language-javascript"},Object(s.a)("code",{parentName:"pre",className:"language-javascript"},Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.a)("span",{parentName:"code",className:"token function-variable function"},"runner")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token parameter"},"head")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// We initialize our fast and slow to the head"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"let")," fast ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"let")," slow ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// We iterate through until fast reaches the end"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"fast ",Object(s.a)("span",{parentName:"code",className:"token operator"},"!=")," ",Object(s.a)("span",{parentName:"code",className:"token keyword null nil"},"null")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"&&")," fast",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(s.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// We skip to every second node with the fast runner"),"\n    fast ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," fast",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    slow ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," slow",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// ... do something with this information"),"\n",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}i.isMDXComponent=!0;var d=Object(r.a)({},m.a.Javascript,o.createElement(i,null)),u=Object(l.a)(d),b={};function j(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)(p.a,{mdxType:"SubsectionHeader"},"The Runner Technique"),Object(s.a)("p",null,"The runner technique is very commonly used in linked list problems.\nWe use 2 pointers simultaneously to iterate through the linked list instead of just 1.\nThe second pointer either starts before the first pointer, or both pointer start at the same time,\nand the second pointer jumps multiple nodes instead of touching each one.\nIn either case, the second pointer will reach the end of the linked list faster which provides us additional details to solve a problem."),Object(s.a)("p",null,"Let's look at an example of a runner that skips two nodes, which means it should reach the end twice as fast as our first pointer:"),Object(s.a)(u,{mdxType:"Runner"}),Object(s.a)("p",null,"Possible use cases:"),Object(s.a)("ul",null,Object(s.a)("li",{parentName:"ul"},"Finding the length of a linked list"),Object(s.a)("li",{parentName:"ul"},"Determining the midpoint"),Object(s.a)("li",{parentName:"ul"},"Find an intersection of linked lists"),Object(s.a)("li",{parentName:"ul"},"Find or remove the k",Object(s.a)("sup",null,"th")," element from the end"),Object(s.a)("li",{parentName:"ul"},"Finding cycles in a linked list"),Object(s.a)("li",{parentName:"ul"},"Finding sub-lists"),Object(s.a)("li",{parentName:"ul"},"We don't have access to the ",Object(s.a)("inlineCode",{parentName:"li"},"tail")," but need the last node")))}j.isMDXComponent=!0},uqmq:function(e,a,t){"use strict";t.d(a,"b",(function(){return s})),t.d(a,"c",(function(){return p})),t.d(a,"a",(function(){return r}));var n=t("vOnD"),c=t("gWsq"),o=t("SOUA"),s=Object(n.e)(c.h).withConfig({componentId:"sc-16wjbcj-0"})(["margin-top:","px;"],o.a),p=Object(n.e)(s).withConfig({componentId:"sc-16wjbcj-1"})(["display:flex;justify-content:center;align-items:center;"]),r=n.e.div.withConfig({componentId:"sc-16wjbcj-2"})(["margin-top:","px;"],o.a)},wN5W:function(e,a,t){"use strict";t.d(a,"a",(function(){return h}));var n=t("wx14"),c=t("Ff2n"),o=t("q1tI"),s=t("7ljp"),p=t("jDXR"),r=(t("iD9/"),t("jkan")),m=t("+FKO"),l=t("JanF"),N=t("rePB"),i=t("Utoj"),d=t("Jpar"),u={};function b(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},u,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)("pre",{className:"language-javascript"},Object(s.a)("code",{parentName:"pre",className:"language-javascript"},Object(s.a)("span",{parentName:"code",className:"token comment"},"// The input is the index number, and the output will be the head node."),"\n",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.a)("span",{parentName:"code",className:"token function-variable function"},"deleteNode")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token parameter"},"head",Object(s.a)("span",{parentName:"span",className:"token punctuation"},",")," index"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// If we want to delete the current head node,"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// we just return the node after the current head."),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"index ",Object(s.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(s.a)("span",{parentName:"code",className:"token number"},"0"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"return")," head",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"let")," precedingNode ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// Find the node that precedes the index of the node that we want to delete"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token number"},"0"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(s.a)("span",{parentName:"code",className:"token operator"},"<")," index ",Object(s.a)("span",{parentName:"code",className:"token operator"},"-")," ",Object(s.a)("span",{parentName:"code",className:"token number"},"1"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(s.a)("span",{parentName:"code",className:"token operator"},"++"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    precedingNode ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," precedingNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// Skip past our node to be removed"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// Equivalent to precedingNode.next = precedingNode.next.next"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," nodeToBeRemoved ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," precedingNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  precedingNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," nodeToBeRemoved",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// There are now no nodes in the linked list that are pointing to nodeToBeRemoved."),"\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// The node that was before it is now pointing to the one after it."),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"return")," head",Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(s.a)("span",{parentName:"code",className:"token keyword"},"let")," head ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token number"},"42"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\nhead",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token number"},"9000"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\nhead",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token number"},"10"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\nhead",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token number"},"20"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.a)("span",{parentName:"code",className:"token comment"},"// 42 -> 9000 -> 10 -> 20"),"\n\nhead ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token function"},"deleteNode"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"head",Object(s.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.a)("span",{parentName:"code",className:"token number"},"2"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.a)("span",{parentName:"code",className:"token comment"},"// 42 -> 9000 -> 20"),"\n\nhead ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token function"},"deleteNode"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"head",Object(s.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(s.a)("span",{parentName:"code",className:"token number"},"0"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.a)("span",{parentName:"code",className:"token comment"},"// 9000 -> 20"),"\n")))}b.isMDXComponent=!0;var j=Object(N.a)({},i.a.Javascript,o.createElement(b,null)),O=Object(d.a)(j),k={};function h(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},k,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)(p.a,{mdxType:"SubsectionHeader"},"Delete a Node"),Object(s.a)("p",null,"To delete a node, first we find the node that precedes it in the linked list.\nThen we change this preceding node's ",Object(s.a)("inlineCode",{parentName:"p"},"next")," ",Object(s.a)(m.a,{content:Object(s.a)(l.a,{mdxType:"PointersConcept"}),mdxType:"ConceptModal"},"pointer"),"\nto reference the node after the one we want to delete (",Object(s.a)("inlineCode",{parentName:"p"},"precedingNode.next = precedingNode.next.next"),").\nSince none of the items in the linked list now no longer reference the node we wanted to delete, it is effectively removed from our linked list, and the garbage collector will recognize this and clear it from memory."),Object(s.a)(r.a,{src:"/images/delete-singly-linked-list.gif",isVisuAlgo:!0,mdxType:"Image"}),Object(s.a)(O,{mdxType:"DeleteNodeCode"}))}h.isMDXComponent=!0}},[["5Tm1",0,1,4,6,5,9,12,11,13,14,15,18,17,21,2,3,7,8,10,16,19,22,23,24,25]]]);