_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[60],{"+FKO":function(e,a,t){"use strict";var n=t("ODXe"),c=t("q1tI"),s=t("ahz1"),o=t("vOnD"),p=t("IqxL"),r=t("gWsq"),m=t("MLAZ"),N=Object(o.e)(r.p).withConfig({componentId:"sc-77trup-0"})(["color:inherit;font-weight:inherit;background-image:linear-gradient( transparent 0%,transparent calc(50% - ","px),"," calc(50% - ","px),"," 100% );background-size:100% 200%;transition:background-position 125ms ease-in-out 0s,padding 125ms ease-in-out 0s;background-position:0px 0px;padding:0;padding:2px 0px 3px;&:hover,&:focus{background-position:0px 100%;background-image:linear-gradient( transparent 0%,transparent calc(50% - ","px),"," calc(50% - ","px),"," 100% );color:",";outline:none;}"],4,(function(e){var a=e.theme;return Object(m.a)(a.color.highlight,.6)}),4,(function(e){var a=e.theme;return Object(m.a)(a.color.highlight,.6)}),4,(function(e){return e.theme.color.highlight}),4,(function(e){return e.theme.color.highlight}),p.b.Black2),l=function(e){var a=e.children,t=e.content,o=c.useState(!1),p=Object(n.a)(o,2),r=p[0],m=p[1],l=c.useCallback((function(){return m((function(e){return!e}))}),[]);return c.createElement(c.Fragment,null,c.createElement(N,{onClick:l,"aria-haspopup":!0,"aria-expanded":r},a),c.createElement(s.a,{titleText:"Concept reference",isOpen:r,onClose:l,content:t}))};a.a=l},"7Fnj":function(e,a,t){"use strict";var n=t("rePB"),c=t("JT+q"),s=t("Utoj"),o=Object(n.a)({},s.a.Javascript,"null"),p=Object(c.a)(o);a.a=p},"7mah":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/closest-common-ancestor-in-binary-tree",function(){return t("JtZk")}])},JtZk:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return fe}));var n=t("wx14"),c=t("q1tI"),s=t("NoRJ"),o=t("Qovc"),p=t("gh+C"),r=t("kB7q"),m=t("Ff2n"),N=t("7ljp"),l=(t("YFqc"),t("Utoj")),u=(t("uk0T"),t("rePB")),d=t("Jpar"),i={};function b(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},i,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},"       ",Object(N.a)("span",{parentName:"code",className:"token number"},"9"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\\n     ",Object(N.a)("span",{parentName:"code",className:"token number"},"5"),"   ",Object(N.a)("span",{parentName:"code",className:"token number"},"4"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\   \\\n   ",Object(N.a)("span",{parentName:"code",className:"token number"},"1"),"   ",Object(N.a)("span",{parentName:"code",className:"token number"},"7"),"   ",Object(N.a)("span",{parentName:"code",className:"token number"},"3"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\       \\\n ",Object(N.a)("span",{parentName:"code",className:"token number"},"42"),"  ",Object(N.a)("span",{parentName:"code",className:"token number"},"10"),"      ",Object(N.a)("span",{parentName:"code",className:"token number"},"2"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token function"},"findClosestAncestor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"10"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"7"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// 5"),"\n")))}b.isMDXComponent=!0;var j=Object(u.a)({},l.a.Javascript,c.createElement(b,null)),O=Object(d.a)(j),k={};function h(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},k,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)(O,{mdxType:"InputOutput"}))}h.isMDXComponent=!0;var w=t("JT+q"),y=Object(u.a)({},l.a.Javascript,"findClosestAncestor"),f=Object(w.a)(y),g={};function v(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},g,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," data",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}v.isMDXComponent=!0;var T=Object(u.a)({},l.a.Javascript,c.createElement(v,null)),x=Object(d.a)(T),C={};function S(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},C,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,Object(N.a)("strong",{parentName:"p"},"Given two values in a binary tree, write a function ",Object(N.a)(f,{mdxType:"SolutionSignature"})," that finds the closest ancestor node relative to these target nodes.")),Object(N.a)("p",null,"You will be given a ",Object(N.a)("inlineCode",{parentName:"p"},"root")," as the input along with the values of two nodes that exist in the tree.\nThe tree contains only unique integers, and the child values will always be different."),Object(N.a)("p",null,"It's important to note that this is a binary tree and not a BST where the value of the node could indicate its position as an ancestor or where to search for the children."),Object(N.a)(h,{mdxType:"SampleInputOutput"}),Object(N.a)("p",null,"The tree nodes will use the following implementation:"),Object(N.a)(x,{mdxType:"BinaryNode"}))}S.isMDXComponent=!0;var B=S,X={};function D(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},X,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)(B,{mdxType:"QuestionStatement"}))}D.isMDXComponent=!0;var M=D,I={};function L(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},I,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"This can be solved iteratively or recursively.\nLet's go ahead and assume you don't need to worry about stack overflows if you're interested in solving it recursively.\nThat's the solution I'll be showing."))}L.isMDXComponent=!0;var A={};function E(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},A,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"A node can be the common ancestor with itself and a child node."))}E.isMDXComponent=!0;var J={};function _(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},J,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"At worst, the root is the common ancestor for all nodes."))}_.isMDXComponent=!0;var q=t("Ydbm"),R={};function V(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},R,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"This can be solved in ",Object(N.a)(q.a.n,null)," time and space."))}V.isMDXComponent=!0;var F=[L,E,_,V],W=t("jkan"),P=t("+FKO"),U=t("gA/7"),Y={};function z(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},Y,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"Our function will be given a root node and the values of two other nodes in the tree,\nand we need to determine the closest ancestor that they have in common and return that node."),Object(N.a)("p",null,"This isn't much information to start with, so we have to map out everything ourselves.\nFirst, let's visualize what it means for a node to be the closest common ancestor."),Object(N.a)(W.a,{src:"/images/common-ancestor-examples.png",mdxType:"Image"}),Object(N.a)("p",null,"Let's think a little deeper about what it means to be an ancestor."),Object(N.a)("ul",null,Object(N.a)("li",{parentName:"ul"},"Nodes can have many ancestors, but we care about the ancestor closest to the children"),Object(N.a)("li",{parentName:"ul"},"The closest ancestor will be the node where its ",Object(N.a)("inlineCode",{parentName:"li"},"left")," path and its ",Object(N.a)("inlineCode",{parentName:"li"},"right")," each eventually lead to one of the children"),Object(N.a)("li",{parentName:"ul"},"The root is guaranteed to be a common ancestor of all nodes"),Object(N.a)("li",{parentName:"ul"},"A node can be an ancestor to itself and the other child")),Object(N.a)("p",null,"Given our limited starting information, we can't do anything until we find our target child nodes.\nTo find nodes, we need to ",Object(N.a)(P.a,{content:Object(N.a)(U.a,{mdxType:"Traversal"}),mdxType:"ConceptModal"},"traverse our tree"),".\nOnce found, we need to figure out how to rewind our traversal the lowest node where its paths split to reach the target nodes (or recombine when walking backward)."))}z.isMDXComponent=!0;var G=t("7Fnj"),Q={};function Z(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},Q,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"Let's visualize what we just discussed."),Object(N.a)(W.a,{src:"/images/common-ancestor-traverse.gif",mdxType:"Image"}),Object(N.a)("p",null,"So we want a way to walk down all the nodes first.\nThen if we hit a ",Object(N.a)(G.a,{mdxType:"Null"})," we return, or if we find one of the child targets, we return.\nThese are the base cases."),Object(N.a)("p",null,"If we do find a target child, we need a way to propagate this information.\nThen at each parent node, we need to wait until both its ",Object(N.a)("inlineCode",{parentName:"p"},"left")," and ",Object(N.a)("inlineCode",{parentName:"p"},"right")," return and determine if a child exists in either path.\nThe first node that indicates a child was found for both its ",Object(N.a)("inlineCode",{parentName:"p"},"left")," and ",Object(N.a)("inlineCode",{parentName:"p"},"right")," will be the lowest common ancestor, and then we just return this node."),Object(N.a)("p",null,"This is a perfect case for a recursive post-order traversal.\nA post-order traversal visits the paths' leaves first before using a current node.\nEach node waits in the call stack until the recursive calls finish for both paths, and then it handles the result.\nOur recursive traversal walks forward until it hits a base case and then returns the results, and then it has the effect of walking backward up the path as the recursion unwinds which is exactly what we want."),Object(N.a)("p",null,"At this point, for any given node, we have all the information we need to determine if this item is the closest common ancestor based on the results returned from traversing its paths.\nIf it is, we then return this node upward to the original function call as the solution."))}Z.isMDXComponent=!0;var K={};function H(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},K,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,Object(N.a)("strong",{parentName:"p"},"All recursive problems need a base case"),".\nIn a typical tree traversal, we walk down the path until we hit a ",Object(N.a)(G.a,{mdxType:"Null"}),".\nFor this problem, if we hit a ",Object(N.a)(G.a,{mdxType:"Null"}),", that is a base case that indicates we ",Object(N.a)("em",{parentName:"p"},"failed")," to find a child.\nIf we hit a target child node, this is another base case which indicates a ",Object(N.a)("em",{parentName:"p"},"success"),"."),Object(N.a)("p",null,"So this question has two base cases:"),Object(N.a)("ol",null,Object(N.a)("li",{parentName:"ol"},"Returning ",Object(N.a)(G.a,{mdxType:"Null"})," means we did not find a target node on a path."),Object(N.a)("li",{parentName:"ol"},"If we find a target child, we return this node which indicates a successful discovery.")),Object(N.a)("p",null,"If a target child is found, each recursive call above it will continue to return this child node as the result.\nOnce we reach the node where the recursive call from both the ",Object(N.a)("inlineCode",{parentName:"p"},"left")," and ",Object(N.a)("inlineCode",{parentName:"p"},"right")," path are not ",Object(N.a)(G.a,{mdxType:"Null"})," (a child node returned from each),\nwe know we have found the closest common ancestor.\nWe now return this node, and it will recursively move its way up since it isn't ",Object(N.a)(G.a,{mdxType:"Null"})," and will be the solution in the end once the entire call stack unwinds."))}H.isMDXComponent=!0;var $=[z,Z,H],ee=t("lcwc"),ae=(t("PH+U"),t("S2YG")),te={};function ne(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},te,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("ul",null,Object(N.a)("li",{parentName:"ul"},"Consider the difference between in-order, pre-order, and post-order traversal"),Object(N.a)("li",{parentName:"ul"},"Understand how to determine the relative position of nodes as siblings and descendants"),Object(N.a)("li",{parentName:"ul"},"Traverse a tree recursively"),Object(N.a)("li",{parentName:"ul"},"Consider 2 recursive base cases")))}ne.isMDXComponent=!0;var ce=ne,se={};function oe(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},se,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"findClosestAncestor")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," firstChildValue",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," secondChildValue"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Base case 1: We recursed to the end of a path"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Base case 2: We found one of the target child nodes"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"===")," firstChildValue ",Object(N.a)("span",{parentName:"code",className:"token operator"},"||")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"===")," secondChildValue",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"/*\n    Continue searching left and right.\n    This ensures we check all the nodes below this one recursively before we handle the current value.\n    This is a post-order traversal.\n  */"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," leftSearchResult ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"findClosestAncestor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," firstChildValue",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," secondChildValue",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," rightSearchResult ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"findClosestAncestor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," firstChildValue",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," secondChildValue",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"/*\n    We found the common ancestor node.\n    Return it, and it will propagate up and be the solution.\n  */"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"leftSearchResult ",Object(N.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"&&")," rightSearchResult ",Object(N.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"/*\n    Return whichever node isn't null.\n    If they both are null, it doesn't matter which we return.\n  */"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," leftSearchResult ",Object(N.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"?")," leftSearchResult ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," rightSearchResult",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}oe.isMDXComponent=!0;var pe=Object(u.a)({},l.a.Javascript,c.createElement(oe,null)),re=Object(d.a)(pe),me={};function Ne(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},me,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"In this question, we are doing a recursive post-order traversal.\nWe traverse the ",Object(N.a)("inlineCode",{parentName:"p"},"left")," and ",Object(N.a)("inlineCode",{parentName:"p"},"right")," paths before we handle the result at any given node, so we know that we will have accounted for all the nodes below the current one."),Object(N.a)("p",null,"When we reach one of the target input values, we return this node.\nOnce all the recursive calls return to any given node,\nif both the return values are not ",Object(N.a)(G.a,{mdxType:"Null"})," (they contain a node), we know that we have reached the common ancestor and return this node.\nThis node will propagate up until all the recursive calls unwind."),Object(N.a)("p",null,"In this problem, we have two base cases:"),Object(N.a)("ol",null,Object(N.a)("li",{parentName:"ol"},"Reaching a ",Object(N.a)(G.a,{mdxType:"Null"})," value (target not found on this path)"),Object(N.a)("li",{parentName:"ol"},"We reach one of the input targets (return this node)")),Object(N.a)("p",null,"Since we return values that are not ",Object(N.a)(G.a,{mdxType:"Null"}),", this will send valid values up and eventually produce the solution."),Object(N.a)(re,{mdxType:"SolutionCode"}),Object(N.a)(ee.a,{mdxType:"ComplexitySubtitle"}),Object(N.a)("p",null,Object(N.a)(q.a.n,null)," time and ",Object(N.a)(q.a.n,null)," space."),Object(N.a)("p",null,"In the worst case, we visit all ",Object(N.a)("inlineCode",{parentName:"p"},"n")," nodes which requires ",Object(N.a)(q.a.n,null)," time and have all ",Object(N.a)("inlineCode",{parentName:"p"},"n")," items in the call stack."),Object(N.a)(ae.a,{mdxType:"LearningOutcomesSubtitle"}),Object(N.a)(ce,{mdxType:"LearningOutcomes"}))}Ne.isMDXComponent=!0;var le=Ne,ue={};function de(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},ue,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"findClosestAncestor")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," firstChildValue",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," secondChildValue"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Your solution here"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}de.isMDXComponent=!0;var ie=Object(u.a)({},l.a.Javascript,c.createElement(de,null)),be=function(e){return ie[e]},je={};function Oe(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},je,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," data",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," tests ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"["),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"20"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"13"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"8"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"17"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"40"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"70"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"["),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"8"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"40"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"13"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'basic case'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"7"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"55"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"65"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"75"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"85"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"["),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"7"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"85"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'unbalanced and root case'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"20"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"17"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"12"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"18"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"100"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"25"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"24"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"27"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"70"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"80"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"["),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"17"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"100"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"17"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'ancestor is also a child'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"validate")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},Object(N.a)("span",{parentName:"span",className:"token punctuation"},"{")," input",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," expected",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," description ",Object(N.a)("span",{parentName:"span",className:"token punctuation"},"}")),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," userAnswer ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"findClosestAncestor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token spread operator"},"..."),"input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," passed ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," userAnswer",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"===")," expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," passed",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," userAnswer",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," userAnswer",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}Oe.isMDXComponent=!0;var ke=Object(u.a)({},l.a.Javascript,c.createElement(Oe,null)),he=function(e){return ke[e]},we={segments:[{name:"Introduction",startTimeSeconds:0,endTimeSeconds:11},{name:"Question Prompt",startTimeSeconds:11,endTimeSeconds:43},{name:"Constraints",startTimeSeconds:43,endTimeSeconds:92},{name:"Solution Breakdown",startTimeSeconds:92,endTimeSeconds:618},{name:"Solution Summary and Big O",startTimeSeconds:618,endTimeSeconds:669},{name:"Code Walkthrough",startTimeSeconds:669,endTimeSeconds:897}]},ye=function(e){var a=e.hasLessonAccess;return c.createElement(p.a,Object(n.a)({},e,{Introduction:M,QuestionStatement:B,Solution:a?le:r.a,LearningOutcomes:a?ce:null,validationItems:F,explanationItems:a?$:[],getUserAnswer:be,getTests:a?he:r.b,getSolutionCode:a?re:r.b,video:we}))},fe=!0;a.default=Object(o.a)((function(e){return c.useEffect((function(){e.lesson&&"ACTIVE"===e.lesson.status||(window.location.href="/course")}),[e]),e.lesson&&"ACTIVE"===e.lesson.status?c.createElement(s.a,Object(n.a)({},e,{Component:ye})):null}),{ssr:!1})}},[["7mah",0,1,4,6,5,9,12,11,13,14,15,18,17,21,2,3,7,8,10,16,19,22,23,24,34]]]);