_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[91],{"7Fnj":function(e,a,t){"use strict";var n=t("rePB"),c=t("JT+q"),o=t("Utoj"),s=Object(n.a)({},o.a.Javascript,"null"),p=Object(c.a)(s);a.a=p},BLuz:function(e,a,t){"use strict";t.d(a,"a",(function(){return n}));var n=t("vOnD").e.div.withConfig({componentId:"sc-1fcuqre-0"})(["svg{width:100%;height:100%;}circle{stroke:currentColor;fill:",";}"],(function(e){return e.theme.color.backgroundSecondary}))},G9kh:function(e,a,t){"use strict";t.d(a,"a",(function(){return m}));var n=t("wx14"),c=t("Ff2n"),o=(t("q1tI"),t("7ljp")),s=t("7dQm"),p=t("BLuz"),r={};function m(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},r,t,{components:a,mdxType:"MDXLayout"}),Object(o.a)("h3",null,"Directed vs. Undirected"),Object(o.a)("p",null,"A directed graph means an edge specifies the direction that you must follow to traverse from one node from another.\nIn the graph below, you can move from node 0 to node 1, but you can't directly go from node 1 to node 0."),Object(o.a)(p.a,{mdxType:"CustomSvg"},Object(o.a)("div",{style:{maxWidth:"400px",margin:"0 auto"}},Object(o.a)(s.a,{fill:"none",mdxType:"SvgWrapper"},Object(o.a)("svg",{width:"268",height:"154",viewBox:"0 0 268 154",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Object(o.a)("circle",{cx:"20",cy:"55",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"175",cy:"83",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"113",cy:"43",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"113",cy:"134",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"248",cy:"83",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"220",cy:"20",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("path",{d:"M222.521 21.2539H223.649V22.8467H222.521V25H220.546V22.8467H216.465L216.376 21.6025L220.525 15.0469H222.521V21.2539ZM218.345 21.2539H220.546V17.7402L220.416 17.9658L218.345 21.2539Z",fill:"currentColor"}),Object(o.a)("path",{d:"M23.376 55.8848C23.376 57.2611 23.0911 58.3138 22.5215 59.043C21.9518 59.7721 21.1178 60.1367 20.0195 60.1367C18.9349 60.1367 18.1055 59.779 17.5312 59.0635C16.957 58.348 16.6631 57.3226 16.6494 55.9873V54.1553C16.6494 52.7653 16.9365 51.7103 17.5107 50.9902C18.0895 50.2702 18.9212 49.9102 20.0059 49.9102C21.0905 49.9102 21.9199 50.2679 22.4941 50.9834C23.0684 51.6943 23.3623 52.7174 23.376 54.0527V55.8848ZM21.4004 53.875C21.4004 53.0501 21.2865 52.4508 21.0586 52.0771C20.8353 51.6989 20.4844 51.5098 20.0059 51.5098C19.541 51.5098 19.1969 51.6898 18.9736 52.0498C18.7549 52.4053 18.6387 52.9635 18.625 53.7246V56.1445C18.625 56.9557 18.7344 57.5596 18.9531 57.9561C19.1764 58.348 19.5319 58.5439 20.0195 58.5439C20.5026 58.5439 20.8512 58.3548 21.0654 57.9766C21.2796 57.5983 21.3913 57.0195 21.4004 56.2402V53.875Z",fill:"currentColor"}),Object(o.a)("path",{d:"M173.687 82.1484H174.739C175.241 82.1484 175.612 82.0231 175.854 81.7725C176.095 81.5218 176.216 81.1891 176.216 80.7744C176.216 80.3734 176.095 80.0612 175.854 79.8379C175.617 79.6146 175.288 79.5029 174.869 79.5029C174.491 79.5029 174.174 79.6077 173.919 79.8174C173.664 80.0225 173.536 80.2913 173.536 80.624H171.561C171.561 80.1045 171.7 79.6396 171.978 79.2295C172.26 78.8148 172.652 78.4912 173.153 78.2588C173.659 78.0264 174.215 77.9102 174.821 77.9102C175.874 77.9102 176.699 78.1631 177.296 78.6689C177.893 79.1702 178.191 79.863 178.191 80.7471C178.191 81.2028 178.052 81.6221 177.774 82.0049C177.496 82.3877 177.132 82.6816 176.681 82.8867C177.241 83.0872 177.658 83.388 177.932 83.7891C178.21 84.1901 178.349 84.6641 178.349 85.2109C178.349 86.0951 178.025 86.8037 177.378 87.3369C176.735 87.8701 175.883 88.1367 174.821 88.1367C173.828 88.1367 173.014 87.8747 172.381 87.3506C171.752 86.8265 171.438 86.1338 171.438 85.2725H173.413C173.413 85.6462 173.552 85.9515 173.83 86.1885C174.113 86.4255 174.459 86.5439 174.869 86.5439C175.339 86.5439 175.705 86.4209 175.97 86.1748C176.239 85.9242 176.373 85.5938 176.373 85.1836C176.373 84.1901 175.826 83.6934 174.732 83.6934H173.687V82.1484Z",fill:"currentColor"}),Object(o.a)("path",{d:"M116.499 139H109.677V137.646L112.896 134.215C113.339 133.732 113.664 133.31 113.874 132.95C114.088 132.59 114.195 132.248 114.195 131.925C114.195 131.483 114.084 131.136 113.86 130.886C113.637 130.631 113.318 130.503 112.903 130.503C112.457 130.503 112.104 130.658 111.844 130.968C111.589 131.273 111.461 131.676 111.461 132.178H109.479C109.479 131.572 109.622 131.018 109.909 130.517C110.201 130.015 110.611 129.623 111.14 129.341C111.668 129.054 112.268 128.91 112.938 128.91C113.963 128.91 114.758 129.156 115.323 129.648C115.893 130.141 116.178 130.836 116.178 131.733C116.178 132.226 116.05 132.727 115.795 133.237C115.54 133.748 115.102 134.342 114.482 135.021L112.22 137.407H116.499V139Z",fill:"currentColor"}),Object(o.a)("path",{d:"M114.476 48H112.5V40.3848L110.142 41.1162V39.5098L114.264 38.0332H114.476V48Z",fill:"currentColor"}),Object(o.a)("path",{d:"M244.971 83.1055L245.545 78.0469H251.123V79.6943H247.165L246.919 81.834C247.388 81.5833 247.887 81.458 248.416 81.458C249.364 81.458 250.107 81.752 250.645 82.3398C251.182 82.9277 251.451 83.7503 251.451 84.8076C251.451 85.4502 251.314 86.0267 251.041 86.5371C250.772 87.043 250.385 87.4372 249.879 87.7197C249.373 87.9977 248.776 88.1367 248.088 88.1367C247.486 88.1367 246.928 88.016 246.413 87.7744C245.898 87.5283 245.49 87.1842 245.189 86.7422C244.893 86.3001 244.736 85.7965 244.718 85.2314H246.673C246.714 85.6462 246.857 85.9697 247.104 86.2021C247.354 86.43 247.68 86.5439 248.081 86.5439C248.528 86.5439 248.872 86.3844 249.113 86.0654C249.355 85.7419 249.476 85.2861 249.476 84.6982C249.476 84.1331 249.337 83.7002 249.059 83.3994C248.781 83.0986 248.386 82.9482 247.876 82.9482C247.407 82.9482 247.026 83.0713 246.734 83.3174L246.543 83.4951L244.971 83.1055Z",fill:"currentColor"}),Object(o.a)("path",{d:"M93.0461 118.498C93.3211 118.472 93.5233 118.229 93.4979 117.954L93.083 113.473C93.0575 113.198 92.814 112.996 92.539 113.021C92.264 113.047 92.0618 113.29 92.0872 113.565L92.456 117.548L88.4731 117.917C88.1981 117.942 87.9958 118.186 88.0213 118.461C88.0468 118.736 88.2903 118.938 88.5653 118.913L93.0461 118.498ZM33.6805 69.3846L92.6805 118.385L93.3195 117.615L34.3195 68.6154L33.6805 69.3846Z",fill:"currentColor"}),Object(o.a)("path",{d:"M87.4079 47.2892C87.5676 47.064 87.5145 46.7519 87.2892 46.5921L83.6184 43.9892C83.3932 43.8295 83.0811 43.8826 82.9213 44.1079C82.7616 44.3331 82.8147 44.6452 83.04 44.8049L86.3029 47.1187L83.9892 50.3816C83.8295 50.6068 83.8826 50.9189 84.1079 51.0787C84.3331 51.2384 84.6452 51.1853 84.8049 50.96L87.4079 47.2892ZM40.0839 55.4929L87.0839 47.4929L86.9161 46.5071L39.9161 54.5071L40.0839 55.4929Z",fill:"currentColor"}),Object(o.a)("path",{d:"M113.354 68.6464C113.158 68.4512 112.842 68.4512 112.646 68.6464L109.464 71.8284C109.269 72.0237 109.269 72.3403 109.464 72.5355C109.66 72.7308 109.976 72.7308 110.172 72.5355L113 69.7071L115.828 72.5355C116.024 72.7308 116.34 72.7308 116.536 72.5355C116.731 72.3403 116.731 72.0237 116.536 71.8284L113.354 68.6464ZM113.5 114V69H112.5V114H113.5Z",fill:"currentColor"}),Object(o.a)("path",{d:"M196.415 23.2786C196.569 23.0492 196.508 22.7386 196.279 22.5848L192.542 20.0777C192.312 19.9239 192.002 19.9851 191.848 20.2144C191.694 20.4437 191.755 20.7543 191.985 20.9082L195.306 23.1367L193.078 26.4584C192.924 26.6877 192.985 26.9983 193.214 27.1521C193.444 27.306 193.754 27.2448 193.908 27.0155L196.415 23.2786ZM130.097 36.4906L196.097 23.4906L195.903 22.5094L129.903 35.5094L130.097 36.4906Z",fill:"currentColor"}),Object(o.a)("path",{d:"M239.842 61.4743C240.104 61.5617 240.387 61.4201 240.474 61.1581L241.897 56.889C241.985 56.6271 241.843 56.3439 241.581 56.2566C241.319 56.1693 241.036 56.3108 240.949 56.5728L239.684 60.3675L235.889 59.1026C235.627 59.0153 235.344 59.1569 235.257 59.4189C235.169 59.6808 235.311 59.964 235.573 60.0513L239.842 61.4743ZM227.553 37.2236L239.553 61.2236L240.447 60.7764L228.447 36.7764L227.553 37.2236Z",fill:"currentColor"}),Object(o.a)("path",{d:"M199.646 82.6464C199.451 82.8417 199.451 83.1583 199.646 83.3536L202.828 86.5355C203.024 86.7308 203.34 86.7308 203.536 86.5355C203.731 86.3403 203.731 86.0237 203.536 85.8284L200.707 83L203.536 80.1716C203.731 79.9763 203.731 79.6597 203.536 79.4645C203.34 79.2692 203.024 79.2692 202.828 79.4645L199.646 82.6464ZM228 82.5H200V83.5H228V82.5Z",fill:"currentColor"}),Object(o.a)("path",{d:"M133.503 121.943C133.472 122.217 133.668 122.465 133.943 122.497L138.413 123.013C138.687 123.044 138.935 122.847 138.967 122.573C138.999 122.299 138.802 122.051 138.528 122.019L134.554 121.561L135.013 117.587C135.044 117.313 134.847 117.065 134.573 117.033C134.299 117.001 134.051 117.198 134.019 117.472L133.503 121.943ZM162.689 98.6083L133.689 121.608L134.311 122.392L163.311 99.3917L162.689 98.6083Z",fill:"currentColor"}),Object(o.a)("path",{d:"M154.158 71.4743C154.42 71.387 154.562 71.1039 154.474 70.8419L153.051 66.5728C152.964 66.3108 152.681 66.1693 152.419 66.2566C152.157 66.3439 152.015 66.6271 152.103 66.889L153.368 70.6838L149.573 71.9487C149.311 72.036 149.169 72.3192 149.257 72.5811C149.344 72.8431 149.627 72.9847 149.889 72.8974L154.158 71.4743ZM125.776 57.4472L153.776 71.4472L154.224 70.5528L126.224 56.5528L125.776 57.4472Z",fill:"currentColor"}))))),Object(o.a)("p",null,"An undirected graph means you can move in either direction between nodes as long as the edge exists.\nIn the graph below, you can directly and freely  move between node 0 and node 1 in either direction."),Object(o.a)(p.a,{mdxType:"CustomSvg"},Object(o.a)("div",{style:{maxWidth:"400px",margin:"0 auto"}},Object(o.a)(s.a,{fill:"none",mdxType:"SvgWrapper"},Object(o.a)("svg",{width:"254",height:"162",viewBox:"0 0 254 162",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Object(o.a)("circle",{cx:"20",cy:"35",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"164",cy:"130",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"118",cy:"63",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"67",cy:"142",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"234",cy:"83",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"194",cy:"20",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("path",{d:"M196.521 21.2539H197.649V22.8467H196.521V25H194.546V22.8467H190.465L190.376 21.6025L194.525 15.0469H196.521V21.2539ZM192.345 21.2539H194.546V17.7402L194.416 17.9658L192.345 21.2539Z",fill:"currentColor"}),Object(o.a)("path",{d:"M23.376 35.8848C23.376 37.2611 23.0911 38.3138 22.5215 39.043C21.9518 39.7721 21.1178 40.1367 20.0195 40.1367C18.9349 40.1367 18.1055 39.779 17.5312 39.0635C16.957 38.348 16.6631 37.3226 16.6494 35.9873V34.1553C16.6494 32.7653 16.9365 31.7103 17.5107 30.9902C18.0895 30.2702 18.9212 29.9102 20.0059 29.9102C21.0905 29.9102 21.9199 30.2679 22.4941 30.9834C23.0684 31.6943 23.3623 32.7174 23.376 34.0527V35.8848ZM21.4004 33.875C21.4004 33.0501 21.2865 32.4508 21.0586 32.0771C20.8353 31.6989 20.4844 31.5098 20.0059 31.5098C19.541 31.5098 19.1969 31.6898 18.9736 32.0498C18.7549 32.4053 18.6387 32.9635 18.625 33.7246V36.1445C18.625 36.9557 18.7344 37.5596 18.9531 37.9561C19.1764 38.348 19.5319 38.5439 20.0195 38.5439C20.5026 38.5439 20.8512 38.3548 21.0654 37.9766C21.2796 37.5983 21.3913 37.0195 21.4004 36.2402V33.875Z",fill:"currentColor"}),Object(o.a)("path",{d:"M162.687 129.148H163.739C164.241 129.148 164.612 129.023 164.854 128.772C165.095 128.522 165.216 128.189 165.216 127.774C165.216 127.373 165.095 127.061 164.854 126.838C164.617 126.615 164.288 126.503 163.869 126.503C163.491 126.503 163.174 126.608 162.919 126.817C162.664 127.022 162.536 127.291 162.536 127.624H160.561C160.561 127.104 160.7 126.64 160.978 126.229C161.26 125.815 161.652 125.491 162.153 125.259C162.659 125.026 163.215 124.91 163.821 124.91C164.874 124.91 165.699 125.163 166.296 125.669C166.893 126.17 167.191 126.863 167.191 127.747C167.191 128.203 167.052 128.622 166.774 129.005C166.496 129.388 166.132 129.682 165.681 129.887C166.241 130.087 166.658 130.388 166.932 130.789C167.21 131.19 167.349 131.664 167.349 132.211C167.349 133.095 167.025 133.804 166.378 134.337C165.735 134.87 164.883 135.137 163.821 135.137C162.828 135.137 162.014 134.875 161.381 134.351C160.752 133.826 160.438 133.134 160.438 132.272H162.413C162.413 132.646 162.552 132.951 162.83 133.188C163.113 133.425 163.459 133.544 163.869 133.544C164.339 133.544 164.705 133.421 164.97 133.175C165.239 132.924 165.373 132.594 165.373 132.184C165.373 131.19 164.826 130.693 163.732 130.693H162.687V129.148Z",fill:"currentColor"}),Object(o.a)("path",{d:"M70.499 147H63.6768V145.646L66.8965 142.215C67.3385 141.732 67.6644 141.31 67.874 140.95C68.0882 140.59 68.1953 140.248 68.1953 139.925C68.1953 139.483 68.0837 139.136 67.8604 138.886C67.637 138.631 67.318 138.503 66.9033 138.503C66.4567 138.503 66.1035 138.658 65.8438 138.968C65.5885 139.273 65.4609 139.676 65.4609 140.178H63.4785C63.4785 139.572 63.6221 139.018 63.9092 138.517C64.2008 138.015 64.611 137.623 65.1396 137.341C65.6683 137.054 66.2676 136.91 66.9375 136.91C67.9629 136.91 68.7581 137.156 69.3232 137.648C69.8929 138.141 70.1777 138.836 70.1777 139.733C70.1777 140.226 70.0501 140.727 69.7949 141.237C69.5397 141.748 69.1022 142.342 68.4824 143.021L66.2197 145.407H70.499V147Z",fill:"currentColor"}),Object(o.a)("path",{d:"M119.476 68H117.5V60.3848L115.142 61.1162V59.5098L119.264 58.0332H119.476V68Z",fill:"currentColor"}),Object(o.a)("path",{d:"M230.971 83.1055L231.545 78.0469H237.123V79.6943H233.165L232.919 81.834C233.388 81.5833 233.887 81.458 234.416 81.458C235.364 81.458 236.107 81.752 236.645 82.3398C237.182 82.9277 237.451 83.7503 237.451 84.8076C237.451 85.4502 237.314 86.0267 237.041 86.5371C236.772 87.043 236.385 87.4372 235.879 87.7197C235.373 87.9977 234.776 88.1367 234.088 88.1367C233.486 88.1367 232.928 88.016 232.413 87.7744C231.898 87.5283 231.49 87.1842 231.189 86.7422C230.893 86.3001 230.736 85.7965 230.718 85.2314H232.673C232.714 85.6462 232.857 85.9697 233.104 86.2021C233.354 86.43 233.68 86.5439 234.081 86.5439C234.528 86.5439 234.872 86.3844 235.113 86.0654C235.355 85.7419 235.476 85.2861 235.476 84.6982C235.476 84.1331 235.337 83.7002 235.059 83.3994C234.781 83.0986 234.386 82.9482 233.876 82.9482C233.407 82.9482 233.026 83.0713 232.734 83.3174L232.543 83.4951L230.971 83.1055Z",fill:"currentColor"}),Object(o.a)("line",{x1:"25.4579",y1:"52.7993",x2:"57.4579",y2:"125.799",stroke:"currentColor"}),Object(o.a)("line",{x1:"38.1509",y1:"42.5233",x2:"98.1509",y2:"61.5233",stroke:"currentColor"}),Object(o.a)("line",{x1:"76.5937",y1:"125.709",x2:"109.594",y2:"79.7085",stroke:"currentColor"}),Object(o.a)("line",{x1:"37.982",y1:"24.5003",x2:"173.986",y2:"19.6081",stroke:"currentColor"}),Object(o.a)("line",{x1:"203.366",y1:"35.6593",x2:"230.366",y2:"64.6593",stroke:"currentColor"}),Object(o.a)("line",{x1:"221.272",y1:"96.4192",x2:"181.272",y2:"122.419",stroke:"currentColor"}),Object(o.a)("line",{x1:"152.575",y1:"114.264",x2:"129.575",y2:"77.264",stroke:"currentColor"}))))))}m.isMDXComponent=!0},OaI9:function(e,a,t){"use strict";t.d(a,"a",(function(){return m}));var n=t("wx14"),c=t("Ff2n"),o=(t("q1tI"),t("7ljp")),s=t("7dQm"),p=t("BLuz"),r={};function m(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},r,t,{components:a,mdxType:"MDXLayout"}),Object(o.a)("h3",null,"Weighted vs. Unweighted"),Object(o.a)("p",null,"A weighted graph means there is a value assigned to each edge.\nFor the solution, you may want to maximize or minimize the total weight of following a path."),Object(o.a)("p",null,"For example, selecting your GPS route works as a weighted graph where an edge's weight would indicate the time between the locations (nodes).\nNot all routes are equal, and you want the path that requires the shortest time to travel between the destinations you want to visit.\nGoogle Maps would give you the path that minimizes the time (weight) to visit all the locations, which may or may not be the actual shortest path in distance because of other factors such as traffic."),Object(o.a)(p.a,{mdxType:"CustomSvg"},Object(o.a)("div",{style:{maxWidth:"400px",margin:"0 auto"}},Object(o.a)(s.a,{fill:"none",mdxType:"SvgWrapper"},Object(o.a)("svg",{width:"269",height:"170",viewBox:"0 0 269 170",fill:"none",xmlns:"http://www.w3.org/2000/svg"},Object(o.a)("circle",{cx:"35",cy:"35",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"209",cy:"150",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"133",cy:"63",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"20",cy:"142",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"249",cy:"83",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("circle",{cx:"209",cy:"20",r:"19",stroke:"currentColor","stroke-width":"2"}),Object(o.a)("path",{d:"M211.521 21.2539H212.649V22.8467H211.521V25H209.546V22.8467H205.465L205.376 21.6025L209.525 15.0469H211.521V21.2539ZM207.345 21.2539H209.546V17.7402L209.416 17.9658L207.345 21.2539Z",fill:"currentColor"}),Object(o.a)("path",{d:"M38.376 35.8848C38.376 37.2611 38.0911 38.3138 37.5215 39.043C36.9518 39.7721 36.1178 40.1367 35.0195 40.1367C33.9349 40.1367 33.1055 39.779 32.5312 39.0635C31.957 38.348 31.6631 37.3226 31.6494 35.9873V34.1553C31.6494 32.7653 31.9365 31.7103 32.5107 30.9902C33.0895 30.2702 33.9212 29.9102 35.0059 29.9102C36.0905 29.9102 36.9199 30.2679 37.4941 30.9834C38.0684 31.6943 38.3623 32.7174 38.376 34.0527V35.8848ZM36.4004 33.875C36.4004 33.0501 36.2865 32.4508 36.0586 32.0771C35.8353 31.6989 35.4844 31.5098 35.0059 31.5098C34.541 31.5098 34.1969 31.6898 33.9736 32.0498C33.7549 32.4053 33.6387 32.9635 33.625 33.7246V36.1445C33.625 36.9557 33.7344 37.5596 33.9531 37.9561C34.1764 38.348 34.5319 38.5439 35.0195 38.5439C35.5026 38.5439 35.8512 38.3548 36.0654 37.9766C36.2796 37.5983 36.3913 37.0195 36.4004 36.2402V33.875Z",fill:"currentColor"}),Object(o.a)("path",{d:"M207.687 149.148H208.739C209.241 149.148 209.612 149.023 209.854 148.772C210.095 148.522 210.216 148.189 210.216 147.774C210.216 147.373 210.095 147.061 209.854 146.838C209.617 146.615 209.288 146.503 208.869 146.503C208.491 146.503 208.174 146.608 207.919 146.817C207.664 147.022 207.536 147.291 207.536 147.624H205.561C205.561 147.104 205.7 146.64 205.978 146.229C206.26 145.815 206.652 145.491 207.153 145.259C207.659 145.026 208.215 144.91 208.821 144.91C209.874 144.91 210.699 145.163 211.296 145.669C211.893 146.17 212.191 146.863 212.191 147.747C212.191 148.203 212.052 148.622 211.774 149.005C211.496 149.388 211.132 149.682 210.681 149.887C211.241 150.087 211.658 150.388 211.932 150.789C212.21 151.19 212.349 151.664 212.349 152.211C212.349 153.095 212.025 153.804 211.378 154.337C210.735 154.87 209.883 155.137 208.821 155.137C207.828 155.137 207.014 154.875 206.381 154.351C205.752 153.826 205.438 153.134 205.438 152.272H207.413C207.413 152.646 207.552 152.951 207.83 153.188C208.113 153.425 208.459 153.544 208.869 153.544C209.339 153.544 209.705 153.421 209.97 153.175C210.239 152.924 210.373 152.594 210.373 152.184C210.373 151.19 209.826 150.693 208.732 150.693H207.687V149.148Z",fill:"currentColor"}),Object(o.a)("path",{d:"M23.499 147H16.6768V145.646L19.8965 142.215C20.3385 141.732 20.6644 141.31 20.874 140.95C21.0882 140.59 21.1953 140.248 21.1953 139.925C21.1953 139.483 21.0837 139.136 20.8604 138.886C20.637 138.631 20.318 138.503 19.9033 138.503C19.4567 138.503 19.1035 138.658 18.8438 138.968C18.5885 139.273 18.4609 139.676 18.4609 140.178H16.4785C16.4785 139.572 16.6221 139.018 16.9092 138.517C17.2008 138.015 17.611 137.623 18.1396 137.341C18.6683 137.054 19.2676 136.91 19.9375 136.91C20.9629 136.91 21.7581 137.156 22.3232 137.648C22.8929 138.141 23.1777 138.836 23.1777 139.733C23.1777 140.226 23.0501 140.727 22.7949 141.237C22.5397 141.748 22.1022 142.342 21.4824 143.021L19.2197 145.407H23.499V147Z",fill:"currentColor"}),Object(o.a)("path",{d:"M134.476 68H132.5V60.3848L130.142 61.1162V59.5098L134.264 58.0332H134.476V68Z",fill:"currentColor"}),Object(o.a)("path",{d:"M245.971 83.1055L246.545 78.0469H252.123V79.6943H248.165L247.919 81.834C248.388 81.5833 248.887 81.458 249.416 81.458C250.364 81.458 251.107 81.752 251.645 82.3398C252.182 82.9277 252.451 83.7503 252.451 84.8076C252.451 85.4502 252.314 86.0267 252.041 86.5371C251.772 87.043 251.385 87.4372 250.879 87.7197C250.373 87.9977 249.776 88.1367 249.088 88.1367C248.486 88.1367 247.928 88.016 247.413 87.7744C246.898 87.5283 246.49 87.1842 246.189 86.7422C245.893 86.3001 245.736 85.7965 245.718 85.2314H247.673C247.714 85.6462 247.857 85.9697 248.104 86.2021C248.354 86.43 248.68 86.5439 249.081 86.5439C249.528 86.5439 249.872 86.3844 250.113 86.0654C250.355 85.7419 250.476 85.2861 250.476 84.6982C250.476 84.1331 250.337 83.7002 250.059 83.3994C249.781 83.0986 249.386 82.9482 248.876 82.9482C248.407 82.9482 248.026 83.0713 247.734 83.3174L247.543 83.4951L245.971 83.1055Z",fill:"currentColor"}),Object(o.a)("line",{x1:"36.4886",y1:"54.1062",x2:"21.4886",y2:"123.106",stroke:"currentColor"}),Object(o.a)("line",{x1:"40.0396",y1:"142.502",x2:"191.04",y2:"154.502",stroke:"currentColor"}),Object(o.a)("line",{x1:"36.735",y1:"134.576",x2:"124.735",y2:"79.576",stroke:"currentColor"}),Object(o.a)("line",{x1:"52.9456",y1:"34.503",x2:"188.949",y2:"19.6107",stroke:"currentColor"}),Object(o.a)("line",{x1:"218.366",y1:"35.6593",x2:"245.366",y2:"64.6593",stroke:"currentColor"}),Object(o.a)("line",{x1:"254.421",y1:"101.27",x2:"227.421",y2:"143.27",stroke:"currentColor"}),Object(o.a)("line",{x1:"196.628",y1:"135.334",x2:"144.628",y2:"77.3338",stroke:"currentColor"}),Object(o.a)("path",{d:"M70.5215 97.2539H71.6494V98.8467H70.5215V101H68.5459V98.8467H64.4648L64.376 97.6025L68.5254 91.0469H70.5215V97.2539ZM66.3447 97.2539H68.5459V93.7402L68.416 93.9658L66.3447 97.2539ZM79.5381 101H72.7158V99.6465L75.9355 96.2148C76.3776 95.7318 76.7035 95.3102 76.9131 94.9502C77.1273 94.5902 77.2344 94.2484 77.2344 93.9248C77.2344 93.4827 77.1227 93.1364 76.8994 92.8857C76.6761 92.6305 76.3571 92.5029 75.9424 92.5029C75.4958 92.5029 75.1426 92.6579 74.8828 92.9678C74.6276 93.2731 74.5 93.6764 74.5 94.1777H72.5176C72.5176 93.5716 72.6611 93.0179 72.9482 92.5166C73.2399 92.0153 73.6501 91.6234 74.1787 91.3408C74.7074 91.0537 75.3066 90.9102 75.9766 90.9102C77.002 90.9102 77.7972 91.1562 78.3623 91.6484C78.932 92.1406 79.2168 92.8356 79.2168 93.7334C79.2168 94.2256 79.0892 94.7269 78.834 95.2373C78.5788 95.7477 78.1413 96.3424 77.5215 97.0215L75.2588 99.4072H79.5381V101Z",fill:"currentColor"}),Object(o.a)("path",{d:"M124.499 143H117.677V141.646L120.896 138.215C121.339 137.732 121.664 137.31 121.874 136.95C122.088 136.59 122.195 136.248 122.195 135.925C122.195 135.483 122.084 135.136 121.86 134.886C121.637 134.631 121.318 134.503 120.903 134.503C120.457 134.503 120.104 134.658 119.844 134.968C119.589 135.273 119.461 135.676 119.461 136.178H117.479C117.479 135.572 117.622 135.018 117.909 134.517C118.201 134.015 118.611 133.623 119.14 133.341C119.668 133.054 120.268 132.91 120.938 132.91C121.963 132.91 122.758 133.156 123.323 133.648C123.893 134.141 124.178 134.836 124.178 135.733C124.178 136.226 124.05 136.727 123.795 137.237C123.54 137.748 123.102 138.342 122.482 139.021L120.22 141.407H124.499V143ZM126.01 138.105L126.584 133.047H132.162V134.694H128.204L127.958 136.834C128.427 136.583 128.926 136.458 129.455 136.458C130.403 136.458 131.146 136.752 131.684 137.34C132.221 137.928 132.49 138.75 132.49 139.808C132.49 140.45 132.354 141.027 132.08 141.537C131.811 142.043 131.424 142.437 130.918 142.72C130.412 142.998 129.815 143.137 129.127 143.137C128.525 143.137 127.967 143.016 127.452 142.774C126.937 142.528 126.529 142.184 126.229 141.742C125.932 141.3 125.775 140.797 125.757 140.231H127.712C127.753 140.646 127.896 140.97 128.143 141.202C128.393 141.43 128.719 141.544 129.12 141.544C129.567 141.544 129.911 141.384 130.152 141.065C130.394 140.742 130.515 140.286 130.515 139.698C130.515 139.133 130.376 138.7 130.098 138.399C129.82 138.099 129.425 137.948 128.915 137.948C128.446 137.948 128.065 138.071 127.773 138.317L127.582 138.495L126.01 138.105Z",fill:"currentColor"}),Object(o.a)("path",{d:"M249.687 129.148H250.739C251.241 129.148 251.612 129.023 251.854 128.772C252.095 128.522 252.216 128.189 252.216 127.774C252.216 127.373 252.095 127.061 251.854 126.838C251.617 126.615 251.288 126.503 250.869 126.503C250.491 126.503 250.174 126.608 249.919 126.817C249.664 127.022 249.536 127.291 249.536 127.624H247.561C247.561 127.104 247.7 126.64 247.978 126.229C248.26 125.815 248.652 125.491 249.153 125.259C249.659 125.026 250.215 124.91 250.821 124.91C251.874 124.91 252.699 125.163 253.296 125.669C253.893 126.17 254.191 126.863 254.191 127.747C254.191 128.203 254.052 128.622 253.774 129.005C253.496 129.388 253.132 129.682 252.681 129.887C253.241 130.087 253.658 130.388 253.932 130.789C254.21 131.19 254.349 131.664 254.349 132.211C254.349 133.095 254.025 133.804 253.378 134.337C252.735 134.87 251.883 135.137 250.821 135.137C249.828 135.137 249.014 134.875 248.381 134.351C247.752 133.826 247.438 133.134 247.438 132.272H249.413C249.413 132.646 249.552 132.951 249.83 133.188C250.113 133.425 250.459 133.544 250.869 133.544C251.339 133.544 251.705 133.421 251.97 133.175C252.239 132.924 252.373 132.594 252.373 132.184C252.373 131.19 251.826 130.693 250.732 130.693H249.687V129.148ZM260.337 131.021C259.822 131.527 259.22 131.78 258.532 131.78C257.653 131.78 256.949 131.479 256.42 130.878C255.891 130.272 255.627 129.456 255.627 128.431C255.627 127.779 255.768 127.182 256.051 126.64C256.338 126.093 256.737 125.669 257.247 125.368C257.757 125.063 258.332 124.91 258.97 124.91C259.626 124.91 260.209 125.074 260.72 125.402C261.23 125.73 261.627 126.202 261.909 126.817C262.192 127.433 262.335 128.137 262.34 128.93V129.661C262.34 131.32 261.927 132.623 261.103 133.571C260.278 134.519 259.109 135.025 257.596 135.089L257.11 135.096V133.448L257.548 133.441C259.266 133.364 260.196 132.557 260.337 131.021ZM259.018 130.27C259.337 130.27 259.61 130.188 259.838 130.023C260.07 129.859 260.246 129.661 260.364 129.429V128.615C260.364 127.945 260.237 127.426 259.981 127.057C259.726 126.688 259.384 126.503 258.956 126.503C258.56 126.503 258.234 126.685 257.979 127.05C257.723 127.41 257.596 127.863 257.596 128.41C257.596 128.952 257.719 129.399 257.965 129.75C258.215 130.096 258.566 130.27 259.018 130.27Z",fill:"currentColor"}),Object(o.a)("path",{d:"M242.164 40.6924C242.164 41.1755 242.043 41.6038 241.802 41.9775C241.56 42.3512 241.228 42.6497 240.804 42.873C241.287 43.1055 241.67 43.4268 241.952 43.8369C242.235 44.2425 242.376 44.721 242.376 45.2725C242.376 46.1566 242.075 46.8561 241.474 47.3711C240.872 47.8815 240.054 48.1367 239.02 48.1367C237.985 48.1367 237.165 47.8792 236.559 47.3643C235.952 46.8493 235.649 46.152 235.649 45.2725C235.649 44.721 235.791 44.2402 236.073 43.8301C236.356 43.4199 236.736 43.1009 237.215 42.873C236.791 42.6497 236.458 42.3512 236.217 41.9775C235.98 41.6038 235.861 41.1755 235.861 40.6924C235.861 39.8447 236.144 39.1702 236.709 38.6689C237.274 38.1631 238.042 37.9102 239.013 37.9102C239.979 37.9102 240.744 38.1608 241.31 38.6621C241.879 39.1589 242.164 39.8356 242.164 40.6924ZM240.394 45.1289C240.394 44.696 240.268 44.3496 240.018 44.0898C239.767 43.8301 239.43 43.7002 239.006 43.7002C238.587 43.7002 238.252 43.8301 238.001 44.0898C237.75 44.3451 237.625 44.6914 237.625 45.1289C237.625 45.5527 237.748 45.8945 237.994 46.1543C238.24 46.4141 238.582 46.5439 239.02 46.5439C239.448 46.5439 239.783 46.4186 240.024 46.168C240.271 45.9173 240.394 45.571 240.394 45.1289ZM240.188 40.7881C240.188 40.4007 240.086 40.0908 239.881 39.8584C239.676 39.6214 239.386 39.5029 239.013 39.5029C238.644 39.5029 238.356 39.6169 238.151 39.8447C237.946 40.0726 237.844 40.387 237.844 40.7881C237.844 41.1846 237.946 41.5036 238.151 41.7451C238.356 41.9867 238.646 42.1074 239.02 42.1074C239.393 42.1074 239.68 41.9867 239.881 41.7451C240.086 41.5036 240.188 41.1846 240.188 40.7881ZM249.561 44.2539H250.688V45.8467H249.561V48H247.585V45.8467H243.504L243.415 44.6025L247.564 38.0469H249.561V44.2539ZM245.384 44.2539H247.585V40.7402L247.455 40.9658L245.384 44.2539Z",fill:"currentColor"}),Object(o.a)("path",{d:"M178.476 104H176.5V96.3848L174.142 97.1162V95.5098L178.264 94.0332H178.476V104ZM188.203 96.6924C188.203 97.1755 188.082 97.6038 187.841 97.9775C187.599 98.3512 187.267 98.6497 186.843 98.873C187.326 99.1055 187.709 99.4268 187.991 99.8369C188.274 100.243 188.415 100.721 188.415 101.272C188.415 102.157 188.114 102.856 187.513 103.371C186.911 103.882 186.093 104.137 185.059 104.137C184.024 104.137 183.204 103.879 182.598 103.364C181.992 102.849 181.688 102.152 181.688 101.272C181.688 100.721 181.83 100.24 182.112 99.8301C182.395 99.4199 182.775 99.1009 183.254 98.873C182.83 98.6497 182.497 98.3512 182.256 97.9775C182.019 97.6038 181.9 97.1755 181.9 96.6924C181.9 95.8447 182.183 95.1702 182.748 94.6689C183.313 94.1631 184.081 93.9102 185.052 93.9102C186.018 93.9102 186.784 94.1608 187.349 94.6621C187.918 95.1589 188.203 95.8356 188.203 96.6924ZM186.433 101.129C186.433 100.696 186.307 100.35 186.057 100.09C185.806 99.8301 185.469 99.7002 185.045 99.7002C184.626 99.7002 184.291 99.8301 184.04 100.09C183.789 100.345 183.664 100.691 183.664 101.129C183.664 101.553 183.787 101.895 184.033 102.154C184.279 102.414 184.621 102.544 185.059 102.544C185.487 102.544 185.822 102.419 186.063 102.168C186.31 101.917 186.433 101.571 186.433 101.129ZM186.228 96.7881C186.228 96.4007 186.125 96.0908 185.92 95.8584C185.715 95.6214 185.425 95.5029 185.052 95.5029C184.683 95.5029 184.396 95.6169 184.19 95.8447C183.985 96.0726 183.883 96.387 183.883 96.7881C183.883 97.1846 183.985 97.5036 184.19 97.7451C184.396 97.9867 184.685 98.1074 185.059 98.1074C185.432 98.1074 185.719 97.9867 185.92 97.7451C186.125 97.5036 186.228 97.1846 186.228 96.7881Z",fill:"currentColor"}),Object(o.a)("path",{d:"M13.4443 81.1543L9.5957 90H7.51074L11.3662 81.6465H6.41699V80.0469H13.4443V81.1543ZM15.0098 85.1055L15.584 80.0469H21.1621V81.6943H17.2041L16.958 83.834C17.4274 83.5833 17.9264 83.458 18.4551 83.458C19.403 83.458 20.1458 83.752 20.6836 84.3398C21.2214 84.9277 21.4902 85.7503 21.4902 86.8076C21.4902 87.4502 21.3535 88.0267 21.0801 88.5371C20.8112 89.043 20.4238 89.4372 19.918 89.7197C19.4121 89.9977 18.8151 90.1367 18.127 90.1367C17.5254 90.1367 16.9671 90.016 16.4521 89.7744C15.9372 89.5283 15.5293 89.1842 15.2285 88.7422C14.9323 88.3001 14.7751 87.7965 14.7568 87.2314H16.7119C16.7529 87.6462 16.8965 87.9697 17.1426 88.2021C17.3932 88.43 17.7191 88.5439 18.1201 88.5439C18.5667 88.5439 18.9108 88.3844 19.1523 88.0654C19.3939 87.7419 19.5146 87.2861 19.5146 86.6982C19.5146 86.1331 19.3757 85.7002 19.0977 85.3994C18.8197 85.0986 18.4255 84.9482 17.915 84.9482C17.4456 84.9482 17.0651 85.0713 16.7734 85.3174L16.582 85.4951L15.0098 85.1055Z",fill:"currentColor"}),Object(o.a)("path",{d:"M120.499 17H113.677V15.6465L116.896 12.2148C117.339 11.7318 117.664 11.3102 117.874 10.9502C118.088 10.5902 118.195 10.2484 118.195 9.9248C118.195 9.48275 118.084 9.13639 117.86 8.88574C117.637 8.63053 117.318 8.50293 116.903 8.50293C116.457 8.50293 116.104 8.65788 115.844 8.96777C115.589 9.27311 115.461 9.67643 115.461 10.1777H113.479C113.479 9.57161 113.622 9.0179 113.909 8.5166C114.201 8.0153 114.611 7.62337 115.14 7.34082C115.668 7.05371 116.268 6.91016 116.938 6.91016C117.963 6.91016 118.758 7.15625 119.323 7.64844C119.893 8.14062 120.178 8.83561 120.178 9.7334C120.178 10.2256 120.05 10.7269 119.795 11.2373C119.54 11.7477 119.102 12.3424 118.482 13.0215L116.22 15.4072H120.499V17ZM123.726 11.1484H124.778C125.28 11.1484 125.651 11.0231 125.893 10.7725C126.134 10.5218 126.255 10.1891 126.255 9.77441C126.255 9.37337 126.134 9.0612 125.893 8.83789C125.656 8.61458 125.327 8.50293 124.908 8.50293C124.53 8.50293 124.213 8.60775 123.958 8.81738C123.703 9.02246 123.575 9.29134 123.575 9.62402H121.6C121.6 9.10449 121.739 8.63965 122.017 8.22949C122.299 7.81478 122.691 7.49121 123.192 7.25879C123.698 7.02637 124.254 6.91016 124.86 6.91016C125.913 6.91016 126.738 7.16309 127.335 7.66895C127.932 8.17025 128.23 8.86296 128.23 9.74707C128.23 10.2028 128.091 10.6221 127.813 11.0049C127.535 11.3877 127.171 11.6816 126.72 11.8867C127.28 12.0872 127.697 12.388 127.971 12.7891C128.249 13.1901 128.388 13.6641 128.388 14.2109C128.388 15.0951 128.064 15.8037 127.417 16.3369C126.774 16.8701 125.922 17.1367 124.86 17.1367C123.867 17.1367 123.053 16.8747 122.42 16.3506C121.791 15.8265 121.477 15.1338 121.477 14.2725H123.452C123.452 14.6462 123.591 14.9515 123.869 15.1885C124.152 15.4255 124.498 15.5439 124.908 15.5439C125.378 15.5439 125.744 15.4209 126.009 15.1748C126.278 14.9242 126.412 14.5938 126.412 14.1836C126.412 13.1901 125.865 12.6934 124.771 12.6934H123.726V11.1484Z",fill:"currentColor"}))))),Object(o.a)("p",null,"An unweighted graph is what we've already been discussing where every edge is valued the same."))}m.isMDXComponent=!0},QbTu:function(e,a,t){"use strict";t.d(a,"a",(function(){return v}));var n=t("wx14"),c=t("Ff2n"),o=t("q1tI"),s=t("7ljp"),p=t("93Pr"),r=(t("Ydbm"),t("jDXR"),t("7Fnj"),t("jkan")),m=t("j5JZ"),i=t("UPXG"),l=t("rePB"),u=t("Utoj"),N=t("Jpar"),d={};function b(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},d,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)("pre",{className:"language-javascript"},Object(s.a)("code",{parentName:"pre",className:"language-javascript"},Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.a)("span",{parentName:"code",className:"token function-variable function"},"iterativeDepthFirstSearch")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token parameter"},"startingNode"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// Init our stack and set of visited nodes"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," dfsStack ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"["),"startingNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," visitedNodes ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.a)("span",{parentName:"code",className:"token class-name"},"Set"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"add"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"startingNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"dfsStack",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"length")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(s.a)("span",{parentName:"code",className:"token number"},"0"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," node ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," dfsStack",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"pop"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.a)("span",{parentName:"code",className:"token function"},"visit"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    node",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"edges"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"forEach"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token parameter"},"childNode")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token operator"},"!"),"visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"has"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"childNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        dfsStack",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"childNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n        visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"add"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"childNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}b.isMDXComponent=!0;var j=Object(l.a)({},u.a.Javascript,o.createElement(b,null)),O=Object(N.a)(j),k={};function h(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},k,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)("pre",{className:"language-javascript"},Object(s.a)("code",{parentName:"pre",className:"language-javascript"},Object(s.a)("span",{parentName:"code",className:"token comment"},"// Create a helper function to add visitedNodes to the signature"),"\n",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.a)("span",{parentName:"code",className:"token function-variable function"},"dfs")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token parameter"},"currentNode",Object(s.a)("span",{parentName:"span",className:"token punctuation"},",")," visitedNodes"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// Use node value for the question"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token function"},"visit"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"add"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  currentNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"edges"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"forEach"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token parameter"},"childNode")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token operator"},"!"),"visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"has"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"childNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(s.a)("span",{parentName:"code",className:"token function"},"dfs"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"childNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},",")," visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.a)("span",{parentName:"code",className:"token function-variable function"},"recursiveDepthFirstSearch")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token parameter"},"startingNode")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// Init our stack and set of visited nodes"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," visitedNodes ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.a)("span",{parentName:"code",className:"token class-name"},"Set"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token function"},"dfs"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"startingNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},",")," visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}h.isMDXComponent=!0;var C=Object(l.a)({},u.a.Javascript,o.createElement(h,null)),g=Object(N.a)(C),f=[{title:"Less memory used",description:"We often assume paths tend to contain less nodes than the width, so DFS is typically better with memory than BFS. DFS is better if the graph is wider than it is deep."},{title:"Determine if a path exists",description:"It is efficient in finding if a path between a source and target exists."}],w=[{title:"Deep graphs are slow",description:"DFS can get slow if the graph is deep because it follows paths fully before moving to the next. BFS outperforms DFS when graphs are deeper than they are wide."}],y={};function v(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},y,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)(p.b,{mdxType:"Section"},Object(s.a)("div",{style:{marginBottom:"64px"}},Object(s.a)(r.a,{src:"/images/dfs.gif",maxWidth:"480px",isVisuAlgo:!0,mdxType:"Image"})),Object(s.a)(m.a,{pros:f,cons:w,mdxType:"ProsCons"}),Object(s.a)("p",null,"Depth-first search (DFS) follows paths to their end before moving on to the next path.\nIt goes deep before it goes wide."),Object(s.a)("p",null,"To implement DFS, we use a ",Object(s.a)("strong",{parentName:"p"},"stack data structure"),".\nWith recursive DFS, our stack is just the function call stack, but if we do it iteratively, we create an actual stack data structure in our code.\nA stack is used because we continue to add items to it until we reach the end of a path.\nThen we pop them off until we return to the beginning of the path and perform the operation again on the next path."),Object(s.a)("p",null,"DFS is often assumed to require less memory than BFS because the width of a path tends to have more nodes than its height.\nDFS only stores a path whereas BFS must store all of a node's neighbors.\nBecause of this assumption on less memory, DFS is typically the preferred choice."),Object(s.a)("p",null,"To implement DFS, we will use a graph node that stores ",Object(s.a)("inlineCode",{parentName:"p"},"data")," and its ",Object(s.a)("inlineCode",{parentName:"p"},"edges"),".\nThe ",Object(s.a)("inlineCode",{parentName:"p"},"edges")," variable is just an array of pointers to its sibling nodes.\nWe will also assume our graph is undirected."),Object(s.a)("p",null,"Nodes will take the following form:"),Object(s.a)(i.a,{mdxType:"GraphNode"}),Object(s.a)("p",null,"Because there can be cycles in graphs or multiple nodes that share an edge, we need to track if we have visited a given item.\nIf we don't track this, we could get stuck in an infinite loop and traverse our graph indefinitely."),Object(s.a)("p",null,"You can interact with this code in a ",Object(s.a)("a",{href:"https://repl.it/@TreyHuffine/Implement-DFS-JavaScript",target:"_blank",rel:"noopener noreferrer"},"REPL"),", and the iterative DFS solution is given below:"),Object(s.a)(O,{mdxType:"IterativeDFS"}),Object(s.a)("p",null,"In the iterative solution, we maintain our stack and track if we have visited a node.\nBy using a stack, we are always traversing from the most recently added item (LIFO) which keeps us moving towards the end of any given path."),Object(s.a)("p",null,"The recursive DFS solution is below.\nIn this case, the stack used to store nodes is actually the call stack."),Object(s.a)(g,{mdxType:"RecursiveDFS"})))}v.isMDXComponent=!0},V90a:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/pilot-a-rocket",function(){return t("nKST")}])},fBWu:function(e,a,t){"use strict";t.d(a,"a",(function(){return g}));var n=t("wx14"),c=t("Ff2n"),o=t("q1tI"),s=t("7ljp"),p=t("93Pr"),r=(t("Ydbm"),t("jDXR"),t("7Fnj"),t("jkan")),m=t("j5JZ"),i=t("UPXG"),l=t("rePB"),u=t("Utoj"),N=t("Jpar"),d={};function b(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},d,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)("pre",{className:"language-javascript"},Object(s.a)("code",{parentName:"pre",className:"language-javascript"},Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(s.a)("span",{parentName:"code",className:"token function-variable function"},"breadthFirstSearch")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token parameter"},"startingNode"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," bfsQueue ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"["),"startingNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," visitedNodes ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(s.a)("span",{parentName:"code",className:"token class-name"},"Set"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"add"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"startingNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"while"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"bfsQueue",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"length")," ",Object(s.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(s.a)("span",{parentName:"code",className:"token number"},"0"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"const")," node ",Object(s.a)("span",{parentName:"code",className:"token operator"},"=")," bfsQueue",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"pop"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(s.a)("span",{parentName:"code",className:"token comment"},"// Use node value for the question"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token function"},"visit"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    node",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token property-access"},"edges"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"forEach"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token parameter"},"childNode")," ",Object(s.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(s.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(s.a)("span",{parentName:"code",className:"token operator"},"!"),"visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"has"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"childNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        bfsQueue",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"unshift"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"childNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n        visitedNodes",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(s.a)("span",{parentName:"code",className:"token method function property-access"},"add"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},"("),"childNode",Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(s.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(s.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}b.isMDXComponent=!0;var j=Object(l.a)({},u.a.Javascript,o.createElement(b,null)),O=Object(N.a)(j),k=[{title:"Find the shortest path",description:"It considers all the nodes closest first"}],h=[{title:"More memory",description:"BFS typically requires more memory (commonly assumed)"}],C={};function g(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(s.a)("wrapper",Object(n.a)({},C,t,{components:a,mdxType:"MDXLayout"}),Object(s.a)(p.b,{mdxType:"Section"},Object(s.a)("div",{style:{marginBottom:"64px"}},Object(s.a)(r.a,{src:"/images/bfs.gif",maxWidth:"480px",isVisuAlgo:!0,mdxType:"Image"})),Object(s.a)(m.a,{pros:k,cons:h,mdxType:"ProsCons"}),Object(s.a)("p",null,"Breadth-first search (BFS) traverses by checking the nodes closest to a parent before moving on.\nBFS is used when we want to find the ",Object(s.a)("strong",{parentName:"p"},"shortest path")," or ",Object(s.a)("strong",{parentName:"p"},"closest neighbors"),"."),Object(s.a)("p",null,"BFS is implemented using a queue data structure.\nBecause we access the items in FIFO order, we visit all the edges of a given node first and then progress onward."),Object(s.a)("p",null,"BFS can be seen commonly in the real-world.\nFor example, on Facebook we are recommended friends.\nWhat they do is create a graph of all the users and recommend the people closest to your friends since you are also more likely to be friends with them.\nThe same thought process happens when Netflix recommends shows or Amazon recommends products - the closer the match is to you based on similar people, the more likely it's a fit."),Object(s.a)("p",null,"To implement BFS, we will use a graph node that stores ",Object(s.a)("inlineCode",{parentName:"p"},"data")," and its ",Object(s.a)("inlineCode",{parentName:"p"},"edges"),".\nThe ",Object(s.a)("inlineCode",{parentName:"p"},"edges")," variable is just an array of pointers to its sibling nodes.\nWe will also assume our graph is undirected."),Object(s.a)("p",null,"Nodes will take the following form:"),Object(s.a)(i.a,{mdxType:"GraphNode"}),Object(s.a)("p",null,"We perform BFS iteratively by using a queue data structure. The full code can be found in this ",Object(s.a)("a",{href:"https://repl.it/@TreyHuffine/Implement-BFS-JavaScript#index.js",target:"_blank",rel:"noopener noreferrer"},"REPL"),"."),Object(s.a)(O,{mdxType:"BFS"})))}g.isMDXComponent=!0},j5JZ:function(e,a,t){"use strict";var n=t("q1tI"),c=t.n(n),o=t("gWsq"),s=t("vOnD"),p=t("5nwr"),r=s.e.div.withConfig({componentId:"sc-19k5b01-0"})(["display:flex;","{flex-direction:column;}"],Object(p.b)()),m=s.e.div.withConfig({componentId:"sc-19k5b01-1"})(["width:100%;&:first-of-type{padding-right:24px;border-right:2px solid ",";","{width:100%;padding:0;border:none;margin-bottom:16px;}}&:last-of-type{padding-left:24px;","{width:100%;padding:0;border:none;margin-top:16px;}}","{width:100%;padding:0;border:none;}"],(function(e){return e.theme.color.border}),Object(p.b)(),Object(p.b)(),Object(p.b)()),i=s.e.div.withConfig({componentId:"sc-19k5b01-2"})(["font-size:28px;margin-bottom:6px;font-weight:600;"]),l=s.e.ul.withConfig({componentId:"sc-19k5b01-3"})(["list-style:none;padding:0 !important;"]),u=s.e.li.withConfig({componentId:"sc-19k5b01-4"})(["margin:0 !important;padding:0 !important;margin-bottom:12px !important;"]),N=s.e.div.withConfig({componentId:"sc-19k5b01-5"})(["font-size:18px;font-weight:400;"]),d=s.e.div.withConfig({componentId:"sc-19k5b01-6"})(["color:",";font-weight:300;line-height:1.4;font-size:14px;"],(function(e){return e.theme.color.textSecondary})),b=function(e){var a=e.item;return c.a.createElement(u,null,c.a.createElement(N,null,a.title),!!a.description&&c.a.createElement(d,null,a.description))},j=function(e){var a=e.pros,t=e.cons;return c.a.createElement(o.h,null,c.a.createElement(r,null,c.a.createElement(m,null,c.a.createElement(i,null,"Pros \ud83d\udd25"),c.a.createElement(l,null,a.map((function(e){return c.a.createElement(b,{item:e,key:e.title})})))),c.a.createElement(m,null,c.a.createElement(i,null,"Cons \ud83e\udd15"),c.a.createElement(l,null,t.map((function(e){return c.a.createElement(b,{item:e,key:e.title})}))))))};a.a=j},nKST:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return He}));var n=t("wx14"),c=t("q1tI"),o=t("NoRJ"),s=t("Qovc"),p=t("gh+C"),r=t("kB7q"),m=t("Ff2n"),i=t("7ljp"),l=t("7Fnj"),u=t("rePB"),N=t("Utoj"),d=t("Jpar"),b={};function j(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," satellites ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat5'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat5'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token function"},"pilotRocket"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"satellites",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token comment"},"// ['base', 'sat0', 'sat4', 'sat5', 'ship']"),"\n")))}j.isMDXComponent=!0;var O=Object(u.a)({},N.a.Javascript,c.createElement(j,null)),k=Object(d.a)(O),h={};function C(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},h,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)(k,{mdxType:"InputOutput"}))}C.isMDXComponent=!0;var g=t("JT+q"),f=Object(u.a)({},N.a.Javascript,"pilotRocket"),w=Object(g.a)(f),y={};function v(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},y,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"Given a graph data structure representing satellites, find the shortest path through the satellites to reach the target.\nYou can always assume there will only be one shortest path."),Object(i.a)("p",null,"The starting node will always be ",Object(i.a)("inlineCode",{parentName:"p"},"base")," and the ending node will be ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),".\nIf the ship can't be reached, return ",Object(i.a)(l.a,{mdxType:"Null"}),"."),Object(i.a)("p",null,Object(i.a)("strong",{parentName:"p"},"Write a function ",Object(i.a)(w,{mdxType:"SolutionSignature"})," that takes a ",Object(i.a)("inlineCode",{parentName:"strong"},"satellites")," input graph and returns an array of satellite IDs in the order that reaches the ship in the shortest path.")),Object(i.a)(C,{mdxType:"SampleInputOutput"}))}v.isMDXComponent=!0;var x=v,L={};function M(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},L,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"You work for RocketX, a company that is going to send the first humans to colonize Mars.\nIt is your job to write the algorithm that will connect the base on Earth to the space ship through a series of satellites to send instructions to pilot the rocket.\nIt's important to connect to it quickly, so we need to find the shortest path from the base to the ship."),Object(i.a)(x,{mdxType:"QuestionStatement"}))}M.isMDXComponent=!0;var T=M,S={};function V(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},S,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"There are two ways to traverse graphs, but only one of the methods guarantees you'll use the shortest path."))}V.isMDXComponent=!0;var H={};function D(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},H,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"Make sure your search algorithm doesn't get caught in a graph cycle."))}D.isMDXComponent=!0;var F={};function z(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},F,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"Make sure your solution doesn't print in reverse order."))}z.isMDXComponent=!0;var I={};function Z(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},I,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"Make sure you handle the case when there is no path to the final node."))}Z.isMDXComponent=!0;var X=t("Ydbm"),E={};function W(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},E,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"This can be solved in ",Object(i.a)(X.a.n,{letter:"V + E"})," time where V is the number of vertices and E is the number of edges."))}W.isMDXComponent=!0;var B=[V,D,z,Z,W],q=t("7dQm"),P=t("+FKO"),A=t("oZh9"),J=t("OaI9"),Q=t("G9kh"),_=function(e){return Object(i.a)("svg",e,Object(i.a)("path",{d:"M173 88c0 5.116-2.901 9.842-7.782 13.328C160.339 104.813 153.548 107 146 107s-14.339-2.187-19.218-5.672C121.901 97.842 119 93.116 119 88s2.901-9.842 7.782-13.328C131.661 71.187 138.452 69 146 69s14.339 2.187 19.218 5.672C170.099 78.158 173 82.884 173 88z",stroke:"currentColor",strokeWidth:"2"}),Object(i.a)("path",{d:"M136.765 90.956c0-.242-.121-.43-.363-.567-.237-.142-.619-.267-1.148-.376-1.759-.37-2.639-1.117-2.639-2.243 0-.656.271-1.203.814-1.64.547-.442 1.26-.663 2.139-.663.939 0 1.689.22 2.249.663.565.442.848 1.016.848 1.723h-1.976a.945.945 0 0 0-.273-.698c-.182-.187-.467-.28-.854-.28-.333 0-.591.075-.773.226a.713.713 0 0 0-.273.574c0 .219.102.396.307.533.21.132.561.248 1.053.349a8.31 8.31 0 0 1 1.244.328c1.044.383 1.566 1.046 1.566 1.989 0 .675-.29 1.221-.869 1.64-.578.415-1.326.623-2.242.623-.62 0-1.171-.11-1.654-.328-.479-.224-.855-.527-1.128-.91a2.13 2.13 0 0 1-.41-1.25h1.873c.018.35.148.62.39.806.241.187.565.28.97.28.378 0 .663-.07.855-.212a.676.676 0 0 0 .294-.567zM144.25 93a2.198 2.198 0 0 1-.198-.663c-.479.533-1.101.8-1.866.8-.725 0-1.327-.21-1.805-.63a2.027 2.027 0 0 1-.711-1.585c0-.784.289-1.385.868-1.805.583-.42 1.424-.631 2.523-.636h.909v-.423c0-.342-.089-.616-.267-.82-.173-.206-.449-.308-.827-.308-.333 0-.595.08-.786.239-.187.16-.28.378-.28.656h-1.976c0-.428.132-.825.396-1.19.265-.364.638-.649 1.122-.854a4.046 4.046 0 0 1 1.627-.314c.911 0 1.633.23 2.167.69.537.456.806 1.099.806 1.928v3.206c.005.702.103 1.233.294 1.593V93h-1.996zm-1.634-1.374c.292 0 .561-.064.807-.191.246-.133.428-.308.547-.527v-1.271h-.739c-.988 0-1.515.341-1.579 1.025l-.006.116a.79.79 0 0 0 .259.609c.173.16.41.239.711.239zm7.219-7.84v1.817h1.265v1.45h-1.265v3.691c0 .274.052.47.157.588.105.119.306.178.602.178.218 0 .412-.016.581-.048v1.497a4.069 4.069 0 0 1-1.196.178c-1.386 0-2.092-.7-2.12-2.099v-3.985h-1.08v-1.45h1.08v-1.818h1.976zm8.982 5.099c0 1.376-.284 2.429-.854 3.158-.57.73-1.404 1.094-2.502 1.094-1.085 0-1.914-.358-2.488-1.073-.575-.716-.869-1.741-.882-3.077v-1.832c0-1.39.287-2.445.861-3.165.579-.72 1.411-1.08 2.495-1.08 1.085 0 1.914.358 2.489 1.073.574.711.868 1.734.881 3.07v1.832zm-1.975-2.01c0-.825-.114-1.424-.342-1.798-.223-.378-.574-.567-1.053-.567-.465 0-.809.18-1.032.54-.219.355-.335.913-.349 1.675v2.42c0 .81.11 1.415.329 1.811.223.392.578.588 1.066.588.483 0 .832-.19 1.046-.567.214-.379.326-.958.335-1.737v-2.365z",fill:"currentColor"}),Object(i.a)("path",{d:"M201 180c0 5.116-2.901 9.842-7.782 13.328C188.339 196.813 181.548 199 174 199s-14.339-2.187-19.218-5.672C149.901 189.842 147 185.116 147 180s2.901-9.842 7.782-13.328C159.661 163.187 166.452 161 174 161s14.339 2.187 19.218 5.672C198.099 170.158 201 174.884 201 180z",stroke:"currentColor",strokeWidth:"2"}),Object(i.a)("path",{d:"M164.765 182.956c0-.241-.121-.431-.363-.567-.237-.142-.619-.267-1.148-.376-1.759-.369-2.639-1.117-2.639-2.242 0-.657.271-1.204.814-1.641.547-.442 1.26-.663 2.139-.663.939 0 1.689.221 2.249.663.565.442.848 1.016.848 1.723h-1.976a.947.947 0 0 0-.273-.698c-.182-.187-.467-.28-.854-.28-.333 0-.591.075-.773.226a.71.71 0 0 0-.273.574c0 .219.102.396.307.533.21.132.561.248 1.053.349a8.24 8.24 0 0 1 1.244.328c1.044.383 1.566 1.046 1.566 1.989 0 .675-.29 1.221-.869 1.641-.578.414-1.326.622-2.242.622-.62 0-1.171-.11-1.654-.328-.479-.224-.855-.527-1.128-.91a2.129 2.129 0 0 1-.41-1.251h1.873c.018.351.148.62.39.807.241.187.565.28.97.28.378 0 .663-.07.855-.212a.675.675 0 0 0 .294-.567zM172.25 185a2.202 2.202 0 0 1-.198-.663c-.479.533-1.101.8-1.866.8-.725 0-1.327-.21-1.805-.629a2.027 2.027 0 0 1-.711-1.586c0-.784.289-1.386.868-1.805.583-.419 1.424-.631 2.523-.636h.909v-.423c0-.342-.089-.616-.267-.821-.173-.205-.449-.307-.827-.307-.333 0-.595.079-.786.239-.187.159-.28.378-.28.656h-1.976c0-.428.132-.825.396-1.189.265-.365.638-.65 1.122-.855a4.056 4.056 0 0 1 1.627-.314c.911 0 1.633.23 2.167.69.537.456.806 1.099.806 1.928v3.206c.005.702.103 1.233.294 1.593V185h-1.996zm-1.634-1.374c.292 0 .561-.064.807-.191.246-.133.428-.308.547-.527v-1.271h-.739c-.988 0-1.515.342-1.579 1.025l-.006.116c0 .246.086.449.259.609.173.159.41.239.711.239zm7.219-7.841v1.819h1.265v1.449h-1.265v3.691c0 .274.052.47.157.588.105.119.306.178.602.178.218 0 .412-.016.581-.048v1.497a4.085 4.085 0 0 1-1.196.178c-1.386 0-2.092-.7-2.12-2.099v-3.985h-1.08v-1.449h1.08v-1.819h1.976zm7.082 9.215h-1.976v-7.615l-2.358.731v-1.606l4.122-1.477h.212V185z",fill:"currentColor"}),Object(i.a)("path",{d:"M365 166c0 5.116-2.901 9.842-7.782 13.328C352.339 182.813 345.548 185 338 185s-14.339-2.187-19.218-5.672C313.901 175.842 311 171.116 311 166s2.901-9.842 7.782-13.328C323.661 149.187 330.452 147 338 147s14.339 2.187 19.218 5.672C362.099 156.158 365 160.884 365 166z",stroke:"currentColor",strokeWidth:"2"}),Object(i.a)("path",{d:"M328.765 168.956c0-.241-.121-.431-.363-.567-.237-.142-.619-.267-1.148-.376-1.759-.369-2.639-1.117-2.639-2.242 0-.657.271-1.204.814-1.641.547-.442 1.26-.663 2.139-.663.939 0 1.689.221 2.249.663.565.442.848 1.016.848 1.723h-1.976a.947.947 0 0 0-.273-.698c-.182-.187-.467-.28-.854-.28-.333 0-.591.075-.773.226a.71.71 0 0 0-.273.574c0 .219.102.396.307.533.21.132.561.248 1.053.349a8.24 8.24 0 0 1 1.244.328c1.044.383 1.566 1.046 1.566 1.989 0 .675-.29 1.221-.869 1.641-.578.414-1.326.622-2.242.622-.62 0-1.171-.11-1.654-.328-.479-.224-.855-.527-1.128-.91a2.129 2.129 0 0 1-.41-1.251h1.873c.018.351.148.62.39.807.241.187.565.28.97.28.378 0 .663-.07.855-.212a.675.675 0 0 0 .294-.567zM336.25 171a2.202 2.202 0 0 1-.198-.663c-.479.533-1.101.8-1.866.8-.725 0-1.327-.21-1.805-.629a2.027 2.027 0 0 1-.711-1.586c0-.784.289-1.386.868-1.805.583-.419 1.424-.631 2.523-.636h.909v-.423c0-.342-.089-.616-.267-.821-.173-.205-.449-.307-.827-.307-.333 0-.595.079-.786.239-.187.159-.28.378-.28.656h-1.976c0-.428.132-.825.396-1.189.265-.365.638-.65 1.122-.855a4.056 4.056 0 0 1 1.627-.314c.911 0 1.633.23 2.167.69.537.456.806 1.099.806 1.928v3.206c.005.702.103 1.233.294 1.593V171h-1.996zm-1.634-1.374c.292 0 .561-.064.807-.191.246-.133.428-.308.547-.527v-1.271h-.739c-.988 0-1.515.342-1.579 1.025l-.006.116c0 .246.086.449.259.609.173.159.41.239.711.239zm7.219-7.841v1.819h1.265v1.449h-1.265v3.691c0 .274.052.47.157.588.105.119.306.178.602.178.218 0 .412-.016.581-.048v1.497a4.085 4.085 0 0 1-1.196.178c-1.386 0-2.092-.7-2.12-2.099v-3.985h-1.08v-1.449h1.08v-1.819h1.976zM350.94 171h-6.822v-1.354l3.22-3.431c.442-.483.768-.905.977-1.265.215-.36.322-.702.322-1.025 0-.442-.112-.789-.335-1.039-.224-.255-.543-.383-.957-.383-.447 0-.8.155-1.06.465-.255.305-.383.708-.383 1.21h-1.982c0-.606.143-1.16.431-1.661a3.044 3.044 0 0 1 1.23-1.176c.529-.287 1.128-.431 1.798-.431 1.025 0 1.821.246 2.386.738.569.493.854 1.188.854 2.085 0 .493-.127.994-.383 1.504-.255.511-.692 1.105-1.312 1.784l-2.263 2.386h4.279V171z",fill:"currentColor"}),Object(i.a)("path",{d:"M273 20c0 5.116-2.901 9.842-7.782 13.328C260.339 36.813 253.548 39 246 39s-14.339-2.187-19.218-5.672C221.901 29.842 219 25.116 219 20s2.901-9.842 7.782-13.328C231.661 3.187 238.452 1 246 1s14.339 2.187 19.218 5.672C270.099 10.158 273 14.884 273 20z",stroke:"currentColor",strokeWidth:"2"}),Object(i.a)("path",{d:"M236.765 22.956c0-.241-.121-.43-.363-.567-.237-.142-.619-.267-1.148-.376-1.759-.37-2.639-1.117-2.639-2.243 0-.656.271-1.203.814-1.64.547-.442 1.26-.663 2.139-.663.939 0 1.689.22 2.249.663.565.442.848 1.016.848 1.723h-1.976a.945.945 0 0 0-.273-.698c-.182-.187-.467-.28-.854-.28-.333 0-.591.075-.773.226a.713.713 0 0 0-.273.574c0 .219.102.396.307.533.21.132.561.248 1.053.349a8.31 8.31 0 0 1 1.244.328c1.044.383 1.566 1.046 1.566 1.989 0 .675-.29 1.221-.869 1.64-.578.415-1.326.623-2.242.623-.62 0-1.171-.11-1.654-.328-.479-.224-.855-.527-1.128-.91a2.13 2.13 0 0 1-.41-1.25h1.873c.018.35.148.62.39.806.241.187.565.28.97.28.378 0 .663-.07.855-.212a.676.676 0 0 0 .294-.567zM244.25 25a2.198 2.198 0 0 1-.198-.663c-.479.533-1.101.8-1.866.8-.725 0-1.327-.21-1.805-.63a2.027 2.027 0 0 1-.711-1.585c0-.784.289-1.386.868-1.805.583-.42 1.424-.631 2.523-.636h.909v-.423c0-.342-.089-.616-.267-.82-.173-.206-.449-.308-.827-.308-.333 0-.595.08-.786.239-.187.16-.28.378-.28.656h-1.976c0-.428.132-.825.396-1.19.265-.364.638-.649 1.122-.854a4.046 4.046 0 0 1 1.627-.314c.911 0 1.633.23 2.167.69.537.456.806 1.099.806 1.928v3.206c.005.702.103 1.233.294 1.593V25h-1.996zm-1.634-1.374c.292 0 .561-.064.807-.191.246-.133.428-.308.547-.527v-1.271h-.739c-.988 0-1.515.341-1.579 1.025l-.006.116a.79.79 0 0 0 .259.609c.173.16.41.239.711.239zm7.219-7.84v1.818h1.265v1.449h-1.265v3.691c0 .274.052.47.157.588.105.119.306.178.602.178.218 0 .412-.016.581-.048v1.497a4.069 4.069 0 0 1-1.196.178c-1.386 0-2.092-.7-2.12-2.099v-3.985h-1.08v-1.45h1.08v-1.818h1.976zm8.128 5.468h1.128v1.593h-1.128V25h-1.976v-2.153h-4.081l-.089-1.245 4.15-6.555h1.996v6.207zm-4.177 0h2.201V17.74l-.13.226-2.071 3.288z",fill:"currentColor"}),Object(i.a)("path",{d:"M259 111c0 5.116-2.901 9.842-7.782 13.328C246.339 127.813 239.548 130 232 130s-14.339-2.187-19.218-5.672C207.901 120.842 205 116.116 205 111s2.901-9.842 7.782-13.328C217.661 94.187 224.452 92 232 92s14.339 2.187 19.218 5.672C256.099 101.158 259 105.884 259 111z",stroke:"currentColor",strokeWidth:"2"}),Object(i.a)("path",{d:"M222.765 113.956c0-.241-.121-.431-.363-.567-.237-.142-.619-.267-1.148-.376-1.759-.369-2.639-1.117-2.639-2.242 0-.657.271-1.204.814-1.641.547-.442 1.26-.663 2.139-.663.939 0 1.689.221 2.249.663.565.442.848 1.016.848 1.723h-1.976a.947.947 0 0 0-.273-.698c-.182-.187-.467-.28-.854-.28-.333 0-.591.075-.773.226a.71.71 0 0 0-.273.574c0 .219.102.396.307.533.21.132.561.248 1.053.349a8.24 8.24 0 0 1 1.244.328c1.044.383 1.566 1.046 1.566 1.989 0 .675-.29 1.221-.869 1.641-.578.414-1.326.622-2.242.622-.62 0-1.171-.11-1.654-.328-.479-.224-.855-.527-1.128-.91a2.129 2.129 0 0 1-.41-1.251h1.873c.018.351.148.62.39.807.241.187.565.28.97.28.378 0 .663-.07.855-.212a.675.675 0 0 0 .294-.567zM230.25 116a2.202 2.202 0 0 1-.198-.663c-.479.533-1.101.8-1.866.8-.725 0-1.327-.21-1.805-.629a2.027 2.027 0 0 1-.711-1.586c0-.784.289-1.386.868-1.805.583-.419 1.424-.631 2.523-.636h.909v-.423c0-.342-.089-.616-.267-.821-.173-.205-.449-.307-.827-.307-.333 0-.595.079-.786.239-.187.159-.28.378-.28.656h-1.976c0-.428.132-.825.396-1.189.265-.365.638-.65 1.122-.855a4.056 4.056 0 0 1 1.627-.314c.911 0 1.633.23 2.167.69.537.456.806 1.099.806 1.928v3.206c.005.702.103 1.233.294 1.593V116h-1.996zm-1.634-1.374c.292 0 .561-.064.807-.191.246-.133.428-.308.547-.527v-1.271h-.739c-.988 0-1.515.342-1.579 1.025l-.006.116c0 .246.086.449.259.609.173.159.41.239.711.239zm7.219-7.841v1.819h1.265v1.449h-1.265v3.691c0 .274.052.47.157.588.105.119.306.178.602.178.218 0 .412-.016.581-.048v1.497a4.085 4.085 0 0 1-1.196.178c-1.386 0-2.092-.7-2.12-2.099v-3.985h-1.08v-1.449h1.08v-1.819h1.976zm4.293 3.363h1.053c.501 0 .872-.125 1.114-.376.241-.25.362-.583.362-.998 0-.401-.121-.713-.362-.936-.237-.223-.565-.335-.984-.335-.379 0-.695.105-.951.314a.985.985 0 0 0-.382.807h-1.976c0-.52.139-.984.417-1.395a2.813 2.813 0 0 1 1.176-.97 3.94 3.94 0 0 1 1.668-.349c1.052 0 1.877.253 2.474.759.597.501.896 1.194.896 2.078 0 .456-.139.875-.417 1.258a2.71 2.71 0 0 1-1.094.882c.561.2.978.501 1.251.902.278.401.417.875.417 1.422 0 .884-.324 1.593-.971 2.126-.642.533-1.494.8-2.556.8-.994 0-1.807-.262-2.441-.786-.629-.525-.943-1.217-.943-2.079h1.975c0 .374.139.679.417.916.283.237.629.356 1.04.356.469 0 .836-.123 1.1-.369.269-.251.403-.581.403-.991 0-.994-.546-1.491-1.64-1.491h-1.046v-1.545zM441.765 113.956c0-.241-.121-.431-.363-.567-.237-.142-.619-.267-1.148-.376-1.759-.369-2.639-1.117-2.639-2.242 0-.657.271-1.204.814-1.641.547-.442 1.26-.663 2.139-.663.939 0 1.689.221 2.249.663.565.442.848 1.016.848 1.723h-1.976a.947.947 0 0 0-.273-.698c-.182-.187-.467-.28-.854-.28-.333 0-.591.075-.773.226a.71.71 0 0 0-.273.574c0 .219.102.396.307.533.21.132.561.248 1.053.349a8.24 8.24 0 0 1 1.244.328c1.044.383 1.566 1.046 1.566 1.989 0 .675-.29 1.221-.869 1.641-.578.414-1.326.622-2.242.622-.62 0-1.171-.11-1.654-.328-.479-.224-.855-.527-1.128-.91a2.129 2.129 0 0 1-.41-1.251h1.873c.018.351.148.62.39.807.241.187.565.28.97.28.378 0 .663-.07.855-.212a.675.675 0 0 0 .294-.567zm5.127-4.546c.524-.629 1.182-.943 1.975-.943 1.604 0 2.418.932 2.441 2.796V116h-1.976v-4.683c0-.423-.091-.736-.273-.936-.183-.205-.486-.308-.91-.308-.578 0-.998.224-1.257.67V116h-1.976v-10.5h1.976v3.91zm7.991 6.59H452.9v-7.396h1.983V116zm-2.099-9.311c0-.296.098-.54.294-.731.201-.191.472-.287.814-.287.337 0 .606.096.806.287a.964.964 0 0 1 .301.731.967.967 0 0 1-.308.739c-.2.191-.467.287-.799.287-.333 0-.602-.096-.807-.287a.976.976 0 0 1-.301-.739zm10.391 5.681c0 1.139-.26 2.053-.779 2.741-.515.684-1.213 1.026-2.092 1.026-.748 0-1.352-.26-1.812-.78v3.487h-1.975v-10.24h1.832l.068.724c.479-.574 1.103-.861 1.873-.861.911 0 1.62.337 2.126 1.012.506.674.759 1.604.759 2.789v.102zm-1.976-.143c0-.689-.123-1.22-.369-1.593-.241-.374-.595-.561-1.059-.561-.62 0-1.046.237-1.279.711v3.028c.242.488.672.732 1.292.732.944 0 1.415-.773 1.415-2.317z",fill:"currentColor"}),Object(i.a)("path",{d:"M478 111c0 5.116-2.901 9.842-7.782 13.328C465.339 127.813 458.548 130 451 130s-14.339-2.187-19.218-5.672C426.901 120.842 424 116.116 424 111s2.901-9.842 7.782-13.328C436.661 94.187 443.452 92 451 92s14.339 2.187 19.218 5.672C475.099 101.158 478 105.884 478 111zM55 112.31c0 4.91-2.885 9.463-7.769 12.832-4.88 3.365-11.676 5.479-19.231 5.479-7.555 0-14.351-2.114-19.231-5.479C3.885 121.773 1 117.22 1 112.31c0-4.909 2.885-9.463 7.769-12.83C13.649 96.113 20.445 94 28 94c7.555 0 14.351 2.114 19.231 5.48C52.115 102.846 55 107.4 55 112.31z",stroke:"currentColor",strokeWidth:"2"}),Object(i.a)("path",{d:"M20.424 114.37c0 1.185-.253 2.11-.759 2.776-.506.66-1.212.991-2.12.991-.801 0-1.442-.308-1.92-.923l-.089.786H13.76v-10.5h1.975v3.767c.456-.534 1.055-.8 1.798-.8.903 0 1.609.332 2.12.998.514.661.772 1.593.772 2.796v.109zm-1.976-.143c0-.748-.118-1.292-.355-1.634-.237-.347-.59-.52-1.06-.52-.629 0-1.062.258-1.299.773v2.919c.242.519.68.779 1.313.779.638 0 1.057-.315 1.258-.943.095-.301.143-.759.143-1.374zM25.934 118a2.197 2.197 0 0 1-.199-.663c-.478.533-1.1.8-1.866.8-.724 0-1.326-.21-1.805-.629a2.027 2.027 0 0 1-.71-1.586c0-.784.289-1.386.868-1.805.583-.419 1.424-.631 2.522-.636h.91v-.423c0-.342-.09-.616-.267-.821-.174-.205-.45-.307-.827-.307-.333 0-.595.079-.787.239-.186.159-.28.378-.28.656h-1.975c0-.428.132-.825.396-1.189.264-.365.638-.65 1.121-.855a4.057 4.057 0 0 1 1.627-.314c.912 0 1.634.23 2.167.69.538.456.807 1.099.807 1.928v3.206c.004.702.102 1.233.294 1.593V118h-1.996zm-1.634-1.374c.291 0 .56-.064.806-.191.246-.133.429-.308.547-.527v-1.271h-.738c-.989 0-1.515.342-1.58 1.025l-.006.116c0 .246.087.449.26.609.173.159.41.239.71.239zm8.86-.67c0-.241-.122-.431-.363-.567-.237-.142-.62-.267-1.149-.376-1.759-.369-2.638-1.117-2.638-2.242 0-.657.27-1.204.813-1.641.547-.442 1.26-.663 2.14-.663.939 0 1.688.221 2.249.663.565.442.848 1.016.848 1.723h-1.976a.947.947 0 0 0-.274-.698c-.182-.187-.467-.28-.854-.28-.333 0-.59.075-.772.226a.71.71 0 0 0-.274.574c0 .219.103.396.308.533.21.132.56.248 1.052.349.493.095.907.205 1.245.328 1.043.383 1.565 1.046 1.565 1.989 0 .675-.29 1.221-.868 1.641-.579.414-1.326.622-2.242.622-.62 0-1.171-.11-1.655-.328-.478-.224-.854-.527-1.128-.91a2.126 2.126 0 0 1-.41-1.251h1.873c.019.351.149.62.39.807.242.187.565.28.97.28.379 0 .664-.07.855-.212a.675.675 0 0 0 .294-.567zm6.603 2.181c-1.085 0-1.97-.333-2.653-.998-.679-.666-1.018-1.552-1.018-2.66v-.191c0-.743.143-1.406.43-1.989a3.145 3.145 0 0 1 1.217-1.354c.529-.319 1.13-.478 1.805-.478 1.012 0 1.807.319 2.386.957.583.638.875 1.542.875 2.714v.806h-4.71c.063.483.255.871.574 1.162.324.292.731.438 1.224.438.76 0 1.355-.276 1.784-.827l.97 1.087a2.993 2.993 0 0 1-1.203.984 3.971 3.971 0 0 1-1.681.349zm-.226-6.071c-.392 0-.71.133-.957.397-.241.264-.396.642-.465 1.135h2.748v-.158c-.009-.437-.127-.774-.355-1.011-.228-.242-.552-.363-.97-.363z",fill:"currentColor"}),Object(i.a)("path",{stroke:"currentColor",d:"M55.813 112.536l62-25"}),Object(i.a)("path",{d:"M406 39c0 5.116-2.901 9.842-7.782 13.328C393.339 55.813 386.548 58 379 58s-14.339-2.187-19.218-5.672C354.901 48.842 352 44.116 352 39s2.901-9.842 7.782-13.328C364.661 22.187 371.452 20 379 20s14.339 2.187 19.218 5.672C403.099 29.158 406 33.884 406 39z",stroke:"currentColor",strokeWidth:"2"}),Object(i.a)("path",{d:"M369.765 41.956c0-.242-.121-.43-.363-.567-.237-.142-.619-.267-1.148-.376-1.759-.37-2.639-1.117-2.639-2.242 0-.657.271-1.204.814-1.641.547-.442 1.26-.663 2.139-.663.939 0 1.689.22 2.249.663.565.442.848 1.016.848 1.722h-1.976a.945.945 0 0 0-.273-.697c-.182-.187-.467-.28-.854-.28-.333 0-.591.075-.773.226a.713.713 0 0 0-.273.574c0 .219.102.396.307.533.21.132.561.248 1.053.349a8.31 8.31 0 0 1 1.244.328c1.044.383 1.566 1.046 1.566 1.989 0 .674-.29 1.221-.869 1.64-.578.415-1.326.623-2.242.623-.62 0-1.171-.11-1.654-.328-.479-.224-.855-.527-1.128-.91a2.13 2.13 0 0 1-.41-1.25h1.873c.018.35.148.62.39.806.241.187.565.28.97.28.378 0 .663-.07.855-.212a.676.676 0 0 0 .294-.567zM377.25 44a2.198 2.198 0 0 1-.198-.663c-.479.533-1.101.8-1.866.8-.725 0-1.327-.21-1.805-.63a2.027 2.027 0 0 1-.711-1.585c0-.784.289-1.386.868-1.805.583-.42 1.424-.631 2.523-.636h.909v-.423c0-.342-.089-.616-.267-.82-.173-.206-.449-.308-.827-.308-.333 0-.595.08-.786.239-.187.16-.28.378-.28.656h-1.976c0-.428.132-.825.396-1.19.265-.364.638-.649 1.122-.854a4.046 4.046 0 0 1 1.627-.314c.911 0 1.633.23 2.167.69.537.456.806 1.099.806 1.928v3.206c.005.702.103 1.233.294 1.593V44h-1.996zm-1.634-1.374c.292 0 .561-.064.807-.191.246-.133.428-.308.547-.527v-1.271h-.739c-.988 0-1.515.341-1.579 1.025l-.006.116a.79.79 0 0 0 .259.609c.173.16.41.239.711.239zm7.219-7.84v1.817h1.265v1.45h-1.265v3.691c0 .274.052.47.157.588.105.118.306.178.602.178.218 0 .412-.016.581-.048v1.497a4.069 4.069 0 0 1-1.196.178c-1.386 0-2.092-.7-2.12-2.099v-3.985h-1.08v-1.45h1.08v-1.818h1.976zm2.577 4.32l.574-5.06h5.578v1.648h-3.958l-.246 2.14c.47-.25.969-.376 1.497-.376.948 0 1.691.294 2.229.882.538.588.807 1.41.807 2.468 0 .642-.137 1.219-.411 1.73-.268.505-.656.9-1.162 1.182-.506.278-1.103.417-1.791.417-.601 0-1.16-.121-1.675-.363a3.027 3.027 0 0 1-1.223-1.032 2.82 2.82 0 0 1-.472-1.51h1.955c.041.414.185.738.431.97.251.228.576.342.977.342.447 0 .791-.16 1.033-.479.241-.323.362-.779.362-1.367 0-.565-.139-.998-.417-1.299-.278-.3-.672-.45-1.183-.45-.469 0-.85.122-1.141.368l-.192.178-1.572-.39z",fill:"currentColor"}),Object(i.a)("path",{stroke:"currentColor",d:"M150.468 107.823l20 53M171.158 92.526l36 12M145.715 69.589l73.102-50.765M201.936 179.504l108-14M337.573 146.26l-70-115M318.774 153.446l-63-32M236.502 91.952l5-52M274.076 18.506l81.046 12.468M394.277 53.584l57 38"}))};_.defaultProps={width:"479",height:"200",viewBox:"0 0 479 200",fill:"none",xmlns:"http://www.w3.org/2000/svg"};var R={};function U(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},R,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,'The first question you may be asking is, "how is this a graph problem since the input is a hash table?"\nThis is a representation of a graph using an ',Object(i.a)(P.a,{content:Object(i.a)(A.a,{mdxType:"AdjacencyList"}),mdxType:"ConceptModal"},"adjacency list"),".\nA given satellite ID is a key in the hash table, and the satellites it is connected to are given in the array of IDs for the key's value."),Object(i.a)("p",null,"Visualizing the graph from the prompt, we get:"),Object(i.a)(q.a,{fill:"none",stroke:"hackyfix",mdxType:"SvgWrapper"},Object(i.a)(_,{mdxType:"ExampleGraph"})),Object(i.a)("p",null,"Are there any other assumptions we can make about our graph?\nAlthough it doesn't state it, we can likely assume that since edges represent a channel of communication, that it will work in both directions.\nThis would mean our graph is ",Object(i.a)(P.a,{content:Object(i.a)(Q.a,{mdxType:"DirectedVsUndirected"}),mdxType:"ConceptModal"},"undirected"),". There isn't a reference to paths taking any more or less effort to communicate, so we can also assume our graph is ",Object(i.a)(P.a,{content:Object(i.a)(J.a,{mdxType:"WeightedVsUnweighted"}),mdxType:"ConceptModal"},"unweighted"),"."))}U.isMDXComponent=!0;var G=t("jkan"),Y=t("QbTu"),K=t("fBWu"),$={};function ee(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},$,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"Now that we understand the data structure we're working with,\nlet's figure out how we iterate through it.\nWe want to find the shortest path starting at the ",Object(i.a)("inlineCode",{parentName:"p"},"base")," node and ending at the ",Object(i.a)("inlineCode",{parentName:"p"},"ship")," node."),Object(i.a)("p",null,"There are two ways to traverse through a graph: using ",Object(i.a)(P.a,{content:Object(i.a)(Y.a,{mdxType:"DFS"}),mdxType:"ConceptModal"},"depth-first search (DFS)")," or ",Object(i.a)(P.a,{content:Object(i.a)(K.a,{mdxType:"BFS"}),mdxType:"ConceptModal"},"breadth-first search (BFS)"),".\nDFS goes deep first and follows a path fully before moving on to the next path.\nBFS checks its closest neighbors first and then moves outward.\nThis means that ",Object(i.a)("strong",{parentName:"p"},"BFS will find the shortest path to a node"),"."),Object(i.a)("p",null,"If we look at the gif below, we can imagine 0 is the base and 9 is the ship.\nWith BFS, we check nodes 1, 2, and 3 as its neighbors.\nThen we check those nodes' neighbors and we go from 3 to 9.\nThis gets us to the ship in just two moves and shows it is the shortest path."),Object(i.a)(G.a,{src:"/images/bfsrocket.gif",maxWidth:"500px",isVisuAlgo:!0,mdxType:"Image"}),Object(i.a)("p",null,"The key concepts to remember with breadth-first search:"),Object(i.a)("ol",null,Object(i.a)("li",{parentName:"ol"},"It is implemented using a queue"),Object(i.a)("li",{parentName:"ol"},"When you visit a node, you add its neighbors to the back of the queue"),Object(i.a)("li",{parentName:"ol"},"You iterate ",Object(i.a)("inlineCode",{parentName:"li"},"while")," there are still nodes remaining in the queue"),Object(i.a)("li",{parentName:"ol"},"Once you visit a node, you need to mark that you have seen it so you don't visit it again")))}ee.isMDXComponent=!0;var ae={};function te(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},ae,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," previousNodeInPath ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Ignore sat2's connection"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Ignore sat2's and sat3's connection"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat5'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat5'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}te.isMDXComponent=!0;var ne=Object(u.a)({},N.a.Javascript,c.createElement(te,null)),ce=Object(d.a)(ne),oe={};function se(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},oe,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"We understand that we'll be using a graph data structure and that we'll find the shortest path from ",Object(i.a)("inlineCode",{parentName:"p"},"base")," to ",Object(i.a)("inlineCode",{parentName:"p"},"ship")," using BFS."),Object(i.a)("p",null,"When we're performing BFS, we'll find the shortest path to ",Object(i.a)("strong",{parentName:"p"},Object(i.a)("em",{parentName:"strong"},"any node"))," from the starting ",Object(i.a)("inlineCode",{parentName:"p"},"base")," node.\nIf multiple paths go through the same node along the route to ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),", we know that the only visit that matters is the first time we reach a node because it passed through the fewest number of nodes and must be the shortest path for any given location.\nBy the definition of BFS, any subsequent visit to a node must have gone through a longer path of nodes, and we can ignore it."),Object(i.a)("p",null,"For example, look at our example data.\nSatellite 4 connects to satellite 5 which connects to the ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),".\nThere are three nodes that have an edge with satellite 4, but we only care about the path through satellite 0 because it will reach this point first which indicates the shortest path to satellite 4."),Object(i.a)("p",null,"From this logic, we can see that for ",Object(i.a)("em",{parentName:"p"},"every node")," in our graph, we should track the node before it that led us to this point for the first time.\nThis was the prior node that allowed us to reach any current node using the shortest path."),Object(i.a)("p",null,"Looking at our overall shortest path to get to ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),":"),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},"The shortest path to ",Object(i.a)("inlineCode",{parentName:"li"},"sat0")," is from ",Object(i.a)("inlineCode",{parentName:"li"},"base")),Object(i.a)("li",{parentName:"ul"},"The shortest path to ",Object(i.a)("inlineCode",{parentName:"li"},"sat4")," is from ",Object(i.a)("inlineCode",{parentName:"li"},"sat0")),Object(i.a)("li",{parentName:"ul"},"The shortest path to ",Object(i.a)("inlineCode",{parentName:"li"},"sat5")," is from ",Object(i.a)("inlineCode",{parentName:"li"},"sat4")),Object(i.a)("li",{parentName:"ul"},"The shortest path to ",Object(i.a)("inlineCode",{parentName:"li"},"ship")," is from ",Object(i.a)("inlineCode",{parentName:"li"},"sat5"))),Object(i.a)("p",null,"Any other combination to reach any of those nodes must have gone through more items and would be a longer path."),Object(i.a)("p",null,"If we can track the shortest path to reach every node from the ",Object(i.a)("inlineCode",{parentName:"p"},"base"),",\nwe can find the shortest path through the entire graph once we reach the ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),"."),Object(i.a)("p",null,"So for each node, we want to track the node that came one item before it.\nWe can do this using an additional hash table where the key is a node,\nand the value for the key is the prior node in the path that got us to this current node for the first time."),Object(i.a)("p",null,"Once we reach the ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),", we will know the node that we went through to get to this final spot.\nThen we can follow that backward to see the node that led us to one spot before that using the hash table that tracks the previous nodes in the path.\nWe continue to follow each previous node before the current one and eventually unwind to our ",Object(i.a)("inlineCode",{parentName:"p"},"base"),".\nFollowing the node that got us to each point will produce the shortest route."),Object(i.a)("p",null,"What if we visit a node multiple times?\nWe simply ignore the subsequent visits because their path to reach that node took longer."),Object(i.a)("p",null,"Using the sample input, the hash table with the shortest node paths would be the following:"),Object(i.a)(ce,{mdxType:"TrackingTable"}))}se.isMDXComponent=!0;var pe={};function re(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},pe,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"Let's think through some final considerations."),Object(i.a)("p",null,"When we reach the last node, we work our way ",Object(i.a)("strong",{parentName:"p"},"backward")," to reconstruct the path that got us there.\nWe arrive at the final node and then trace the route in reverse from the ",Object(i.a)("inlineCode",{parentName:"p"},"ship")," to the ",Object(i.a)("inlineCode",{parentName:"p"},"base")," by gathering the nodes we stored in the shortest path hash table."),Object(i.a)("p",null,"We build the solution by walking through the path from the end-to-start by beginning at the ",Object(i.a)("inlineCode",{parentName:"p"},"ship")," and returning to the ",Object(i.a)("inlineCode",{parentName:"p"},"base"),".\nSo once we build this path, we need to reverse it so that it is in the correct order with the first item as the ",Object(i.a)("inlineCode",{parentName:"p"},"base")," and last item as the ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),"."),Object(i.a)("p",null,"An essential part of graph traversal is tracking nodes we've seen.\nGraphs can have cycles (loops), and if we're not careful, we can get caught in one and execute infinitely."),Object(i.a)("p",null,"In this question, we're already tracking the preceding node at any point to determine the shortest path to the current node.\nThis is a perfect way to also track the cycles because it indicates we've already visited an item.\nHaving a value in the hash table must mean we have already reached a node and should not visit it again."),Object(i.a)("p",null,"Finally, we aren't guaranteed to reach the end.\nThe prompt indicates we should return ",Object(i.a)(l.a,{mdxType:"Null"})," if there isn't a valid path.\nIf we iterate through all the nodes and never find the ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),", we just return ",Object(i.a)(l.a,{mdxType:"Null"}),".\nIf we do find the ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),", we can immediately reconstruct the path and return that as the solution."))}re.isMDXComponent=!0;var me=[U,ee,se,re],ie=t("lcwc"),le=(t("PH+U"),t("S2YG")),ue={};function Ne(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},ue,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},"We implemented BFS from scratch to find the shortest path to a desired node"),Object(i.a)("li",{parentName:"ul"},"We used a hash table to track the shortest path"),Object(i.a)("li",{parentName:"ul"},"The hash table allowed us to track nodes we visited to prevent getting caught in a cycle"),Object(i.a)("li",{parentName:"ul"},"We represented a graph as an adjacency list")))}Ne.isMDXComponent=!0;var de=Ne,be={};function je(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},be,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token constant"},"START_NODE")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token constant"},"END_NODE")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"pilotRocket"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"satellites"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Queue to handle BFS"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," bfsNodeQueue ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Queue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  bfsNodeQueue",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"enqueue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token constant"},"START_NODE"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Use a hash table to track the node that came"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// prior to the current in our BFS to track the path"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," previousNodeInPath ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  previousNodeInPath",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token constant"},"START_NODE"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Perform our BFS"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"bfsNodeQueue",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"size"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"0"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," bfsNodeQueue",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"dequeue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// We've successfully reached the end, and now we should build the path to get here"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(i.a)("span",{parentName:"code",className:"token constant"},"END_NODE"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"getShortestPathToShip"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"previousNodeInPath",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," connectedNode ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"of")," satellites",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"node",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Check if we have visited this node yet"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"previousNodeInPath",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"connectedNode",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(i.a)("span",{parentName:"code",className:"token keyword nil"},"undefined"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n\n        ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Add the node to the queue for our BFS"),"\n        bfsNodeQueue",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"enqueue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"connectedNode",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n        ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Set the current node as the one that came before each of its siblings"),"\n        previousNodeInPath",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"connectedNode",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," node",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// We iterated through all the nodes, and no paths lead to the ship"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"function")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"getShortestPathToShip"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"previousNodeInPath"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," pathToShip ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// We start at the final node and work our way backward to the start"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token constant"},"END_NODE"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    pathToShip",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Doing a look up on the hash table for each node"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// will yield the previous node in the path"),"\n    node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," previousNodeInPath",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"node",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Since we worked our way backward,"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// we must reverse the path to be in the correct order base -> ship"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," pathToShip",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"reverse"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Queue")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"queue")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Assume this actually operates in O(1) time as an optimized queue should"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"enqueue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"item"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"queue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"unshift"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"item",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"dequeue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"queue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"pop"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"size"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"queue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}je.isMDXComponent=!0;var Oe=Object(u.a)({},N.a.Javascript,c.createElement(je,null)),ke=Object(d.a)(Oe),he={};function Ce(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},he,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"This question gives a graph represented by an adjacency list.\nWe are told to find the shortest path from the first node ",Object(i.a)("inlineCode",{parentName:"p"},"base")," to the final node ",Object(i.a)("inlineCode",{parentName:"p"},"ship"),".\nWe know that breadth-first search yields the shortest path between any two nodes, so we use this method to traverse."),Object(i.a)("p",null,"There is an additional challenge though \u2014 we want to actually return the entire shortest path as the solution.\nTo do this, we use a hash table to store the first node that leads us to any item in the graph.\nWe also use this hash table to indicate that a node has been visited so we don't get caught in a cycle."),Object(i.a)("p",null,"The hash table stores the nodes that enabled us to reach each point following the shortest path.\nOnce we reach the final node, we iterate backward using the hash table until we return the beginning which reconstructs the shortest path through the graph.\nSince we iterate backward, we reverse the array and return it as the solution."),Object(i.a)(ke,{mdxType:"SolutionCode"}),Object(i.a)(ie.a,{mdxType:"ComplexitySubtitle"}),Object(i.a)("p",null,Object(i.a)(X.a.n,{letter:"V + E"})," time and ",Object(i.a)(X.a.n,{letter:"V"})," space where V is the number of vertices and E is the number of edges."),Object(i.a)("p",null,"In a worst case scenario, we visit each node (vertex) once.\nWe also visit each nodes' neighbors, so we account for the additional operations on the edges as well."),Object(i.a)("p",null,"The space complexity is ",Object(i.a)(X.a.n,{letter:"V"})," because in the worst case you will add every item to your queue."),Object(i.a)("p",null,Object(i.a)(X.a.n,{letter:"V + E"})," for BFS and DFS is something you can memorize and are typically fine saying outright. If you are asked to say why, it's because you visit each node and its neighbors."),Object(i.a)(le.a,{mdxType:"LearningOutcomesSubtitle"}),Object(i.a)(de,{mdxType:"LearningOutcomes"}))}Ce.isMDXComponent=!0;var ge=Ce,fe={};function we(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},fe,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token function-variable function"},"pilotRocket")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"satellites"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Your solution here"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token comment"},"// HELPER"),"\n",Object(i.a)("span",{parentName:"code",className:"token comment"},"// You can use this Queue class if needed"),"\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Queue")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"queue")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Assume this actually operates in O(1) time"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// as an optimized queue should"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"enqueue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"item"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"queue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"unshift"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"item",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"dequeue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"queue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"pop"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"size"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"queue"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}we.isMDXComponent=!0;var ye=Object(u.a)({},N.a.Javascript,c.createElement(we,null)),ve=function(e){return ye[e]},xe={};function Le(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},xe,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," tests ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'empty'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'simple path'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat5'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat5'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat5'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'path with cycle'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'base'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat0'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat1'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat3'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat4'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'sat2'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n      ",Object(i.a)("span",{parentName:"code",className:"token string"},"'sat5'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token string"},"'ship'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'no valid path'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token function-variable function"},"validate")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},Object(i.a)("span",{parentName:"span",className:"token punctuation"},"{")," input",Object(i.a)("span",{parentName:"span",className:"token punctuation"},",")," expected",Object(i.a)("span",{parentName:"span",className:"token punctuation"},",")," description ",Object(i.a)("span",{parentName:"span",className:"token punctuation"},"}")),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," userAnswer ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"pilotRocket"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"input",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," passed ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token known-class-name class-name"},"JSON"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"stringify"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"userAnswer",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(i.a)("span",{parentName:"code",className:"token known-class-name class-name"},"JSON"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"stringify"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{")," passed",Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," description",Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," userAnswer ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}Le.isMDXComponent=!0;var Me=Object(u.a)({},N.a.Javascript,c.createElement(Le,null)),Te=function(e){return Me[e]},Se={segments:[{name:"Introduction",startTimeSeconds:0,endTimeSeconds:9},{name:"Question Prompt",startTimeSeconds:9,endTimeSeconds:47},{name:"Solution Breakdown",startTimeSeconds:47,endTimeSeconds:716},{name:"Solution Summary and Big O",startTimeSeconds:716,endTimeSeconds:794},{name:"Code Walkthrough",startTimeSeconds:794,endTimeSeconds:1152}]},Ve=function(e){var a=e.hasLessonAccess;return c.createElement(p.a,Object(n.a)({},e,{Introduction:T,QuestionStatement:x,Solution:a?ge:r.a,LearningOutcomes:a?de:null,validationItems:B,explanationItems:a?me:[],getUserAnswer:ve,getTests:a?Te:r.b,getSolutionCode:a?ke:r.b,video:Se}))},He=!0;a.default=Object(s.a)((function(e){return c.useEffect((function(){e.lesson&&"ACTIVE"===e.lesson.status||(window.location.href="/course")}),[e]),e.lesson&&"ACTIVE"===e.lesson.status?c.createElement(o.a,Object(n.a)({},e,{Component:Ve})):null}),{ssr:!1})}},[["V90a",0,1,4,6,5,9,12,11,13,14,15,18,17,21,2,3,7,8,10,16,19,22,23,24,30]]]);