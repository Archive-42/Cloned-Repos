_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[61],{"+FKO":function(e,a,t){"use strict";var n=t("ODXe"),c=t("q1tI"),o=t("ahz1"),s=t("vOnD"),p=t("IqxL"),r=t("gWsq"),m=t("MLAZ"),i=Object(s.e)(r.p).withConfig({componentId:"sc-77trup-0"})(["color:inherit;font-weight:inherit;background-image:linear-gradient( transparent 0%,transparent calc(50% - ","px),"," calc(50% - ","px),"," 100% );background-size:100% 200%;transition:background-position 125ms ease-in-out 0s,padding 125ms ease-in-out 0s;background-position:0px 0px;padding:0;padding:2px 0px 3px;&:hover,&:focus{background-position:0px 100%;background-image:linear-gradient( transparent 0%,transparent calc(50% - ","px),"," calc(50% - ","px),"," 100% );color:",";outline:none;}"],4,(function(e){var a=e.theme;return Object(m.a)(a.color.highlight,.6)}),4,(function(e){var a=e.theme;return Object(m.a)(a.color.highlight,.6)}),4,(function(e){return e.theme.color.highlight}),4,(function(e){return e.theme.color.highlight}),p.b.Black2),l=function(e){var a=e.children,t=e.content,s=c.useState(!1),p=Object(n.a)(s,2),r=p[0],m=p[1],l=c.useCallback((function(){return m((function(e){return!e}))}),[]);return c.createElement(c.Fragment,null,c.createElement(i,{onClick:l,"aria-haspopup":!0,"aria-expanded":r},a),c.createElement(o.a,{titleText:"Concept reference",isOpen:r,onClose:l,content:t}))};a.a=l},"/7Ff":function(e,a,t){"use strict";t("q1tI"),t("gWsq");var n=t("vOnD"),c=t("SOUA");n.e.div.withConfig({componentId:"sc-1wx4o7x-0"})(["margin-top:","px;"],c.a),n.e.div.withConfig({componentId:"sc-1wx4o7x-1"})(["color:",";font-weight:300;text-transform:uppercase;font-size:14px;"],(function(e){return e.theme.color.textSecondary}))},"7Fnj":function(e,a,t){"use strict";var n=t("rePB"),c=t("JT+q"),o=t("Utoj"),s=Object(n.a)({},o.a.Javascript,"null"),p=Object(c.a)(s);a.a=p},UXfW:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/combine-blockchains",function(){return t("e94q")}])},d4K7:function(e,a,t){"use strict";t.d(a,"a",(function(){return w}));var n=t("wx14"),c=t("Ff2n"),o=t("q1tI"),s=t.n(o),p=t("7ljp"),r=t("jDXR"),m=t("gWsq"),i=t("o0o1"),l=t.n(i),d=t("ODXe"),u=t("HaE+"),N=t("vOnD"),b=N.e.div.withConfig({componentId:"pdm049-0"})(["font-size:14px;margin-top:4px;"]),j=Object(N.e)(m.l).withConfig({componentId:"pdm049-1"})(["padding:4px 12px;font-weight:400 !important;"]);N.e.div.withConfig({componentId:"pdm049-2"})(["margin-top:8px;"]);function O(){return(O=Object(u.a)(l.a.mark((function e(a){var t,n,c,o;return l.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=(new TextEncoder).encode(a),e.next=3,crypto.subtle.digest("SHA-256",t);case 3:return n=e.sent,c=Array.from(new Uint8Array(n)),o=c.map((function(e){return e.toString(16).padStart(2,"0")})).join(""),e.abrupt("return",o);case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}var k=function(){var e=s.a.useState("Change this input string to create a new hash"),a=Object(d.a)(e,2),t=a[0],n=a[1],c=s.a.useState(""),o=Object(d.a)(c,2),p=o[0],r=o[1];return s.a.useEffect((function(){(function(e){return O.apply(this,arguments)})(t).then((function(e){return r(e)}))}),[t]),s.a.createElement(m.h,null,s.a.createElement("div",null,s.a.createElement(j,{value:t,onChange:function(e){return n(e.target.value)},placeholder:"Enter a value..."})),s.a.createElement(b,null,"Output SHA-256 hash: ",s.a.createElement("code",null,p)))},h={};function w(e){var a=e.components,t=Object(c.a)(e,["components"]);return Object(p.a)("wrapper",Object(n.a)({},h,t,{components:a,mdxType:"MDXLayout"}),Object(p.a)(r.a,{mdxType:"SubsectionHeader"},"Hashing, Hash Functions, and Hash Collisions"),Object(p.a)("p",null,'Hash functions are a core component of hash tables, but we actually see them all over software development.\nFor example, if you are using GitHub, you may have heard the phrase "commit hash" or noticed that there is a unique string that identifies a commit.\nWhat is actually happening is a hash function takes the content of a commit and creates an output hash that uniquely identifies it.'),Object(p.a)("p",null,"Hash functions take an input of any size and produce a fixed-size output (often an integer represented as a hexadecimal string)."),Object(p.a)("p",null,Object(p.a)("strong",{parentName:"p"},"Generate a SHA-256 hash for any input:")),Object(p.a)(k,{mdxType:"ShaExample"}),Object(p.a)("p",null,"There are many ways to implement a hash function, but fundamentally they follow the same format.\nPopular hashing algorithms include MD5, SHA-1, and SHA-256."),Object(p.a)("p",null,"A hash function can also be as simple as taking the UTF-8 code for all the letters in a string and summing them together, which we'll see in a moment."),Object(p.a)("p",null,"The input size of a hash function is infinite because we could come up with any string combination to feed it.\nAll hash functions can handle the infinite input, but the output is a fixed/maximum size.\nSince infinite input values must map to a fixed-size output, we know that entirely different inputs MUST be able to produce identical hashes.\nThis is what's known as a hash collision."),Object(p.a)("p",null,"For example, a SHA-256 hash is always 256 bits.\nThis corresponds to 64 hexadecimal characters which is an integer ranging from 0 to 2",Object(p.a)("sup",null,"256"),".\nSince the output size is constrained and a fixed length, we know that there are different strings that must produce the same result.\nThis output size is large so a collision is very rare, but the tighter the range of numbers, the higher the likelihood of a collision."),Object(p.a)("p",null,"To visualize a hash collision, let's look at a simple hash function that sums the UTF-8 code of the input string characters."),Object(p.a)(m.h,{mdxType:"Container"},Object(p.a)("pre",{className:"language-javascript"},Object(p.a)("code",{parentName:"pre",className:"language-javascript"},"s    k    i    l    l    e    d\n",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"\n",Object(p.a)("span",{parentName:"code",className:"token number"},"115"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"107"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"105"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"108"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"108"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"101"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"100"),"  ",Object(p.a)("span",{parentName:"code",className:"token operator"},"="),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"744"),"\n\n",Object(p.a)("span",{parentName:"code",className:"token number"},"99"),"   ",Object(p.a)("span",{parentName:"code",className:"token number"},"111"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"118"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"101"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"114"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"101"),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"100"),"  ",Object(p.a)("span",{parentName:"code",className:"token operator"},"="),"  ",Object(p.a)("span",{parentName:"code",className:"token number"},"744"),"\n",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"    ",Object(p.a)("span",{parentName:"code",className:"token operator"},"|"),"\nc    o    v    e    r    e    d\n"))),Object(p.a)("p",null,"Totally different words produced the same hash.\nIf we used ",Object(p.a)("inlineCode",{parentName:"p"},"skilled")," and ",Object(p.a)("inlineCode",{parentName:"p"},"covered")," as keys for a hash table with that hash function, it would cause a collision, and they would be in the same bucket."),Object(p.a)("p",null,"Common characteristics of hash functions include:"),Object(p.a)("ul",null,Object(p.a)("li",{parentName:"ul"},Object(p.a)("strong",{parentName:"li"},"Hash functions are one-way.")," You can't determine the input based on the output."),Object(p.a)("li",{parentName:"ul"},Object(p.a)("strong",{parentName:"li"},"Fixed output size.")," Hash functions will have a lower and upper bound for values it can produce."),Object(p.a)("li",{parentName:"ul"},Object(p.a)("strong",{parentName:"li"},"Produce the same output for a given input."),'\nThe output of a hash function must be predictable.\nIf you pass the string "skilled.dev" to the SHA-256 algorithm, it will always output ',Object(p.a)("inlineCode",{parentName:"li"},"4e6ef22a47c9abbf6f80680f5f814705bf8f793c73eae07e534212f1eb96a4d3"),"."),Object(p.a)("li",{parentName:"ul"},Object(p.a)("strong",{parentName:"li"},"All output values are equally likely."),"\nSince the hash function output is limited in size, the distribution of the output must be uniform.\nThis means for a good function, similar words or strings should land in vastly different buckets."),Object(p.a)("li",{parentName:"ul"},Object(p.a)("strong",{parentName:"li"},"Work with any input type or scenario."),"\nWe typically think of passing a hash function either strings or numbers,\nbut it will work with any input, such as an .exe file.\nAt the end of the day, it's all 1's and 0's, and the hash function should know how to handle it.")))}w.isMDXComponent=!0},e94q:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return Ae}));var n=t("wx14"),c=t("q1tI"),o=t("NoRJ"),s=t("Qovc"),p=t("gh+C"),r=t("kB7q"),m=t("Ff2n"),i=t("7ljp"),l=t("7Fnj"),d=(t("/7Ff"),t("Utoj")),u=t("rePB"),N=t("Jpar"),b={};function j(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},b,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Node")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"timestamp"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," timestamp",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Input"),"\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," skilledChainHead ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token number"},"42"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\nskilledChainHead",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token number"},"159"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token comment"},"// many more additions to each..."),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," devCoinHead ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token number"},"123"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\ndevCoinHead",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token number"},"482"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token comment"},"// many more additions to each..."),"\n\n",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Output: combineBlockchains(skilledChainHead, devCoinHead)"),"\n",Object(i.a)("span",{parentName:"code",className:"token number"},"42")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"123")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"159")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"482")," ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// ... and so on"),"\n")))}j.isMDXComponent=!0;var O=Object(u.a)({},d.a.Javascript,c.createElement(j,null)),k=Object(N.a)(O),h={};function w(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},h,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)(k,{mdxType:"InputOutput"}))}w.isMDXComponent=!0;var f=t("JT+q"),y=Object(u.a)({},d.a.Javascript,"combineBlockchains"),g=Object(f.a)(y),v={};function x(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},v,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"You became a developer because you want to change the world, and you think you found a way to do it."),Object(i.a)("p",null,"You discovered two blockchains (SkilledChain and DevCoin) that by being combined, would create a new unified blockchain that will transform every industry.\nIt would enable the infrastructure for a decentralized internet and its cryptocurrency would remove the need for banks and financial institutions."),Object(i.a)("p",null,"To validate your hypothesis, you need to create a combined blockchain ordered by when the blocks were created.\nThe nodes for each blockchain have a ",Object(i.a)("inlineCode",{parentName:"p"},"timestamp")," property which is the ",Object(i.a)("a",{href:"https://en.wikipedia.org/wiki/Unix_time",target:"_blank",rel:"noopener noreferrer"},"unix timestamp")," of when the node was added.\nIf there are duplicate timestamps, then either node can come first."),Object(i.a)("p",null,Object(i.a)("strong",{parentName:"p"},"Given the head nodes of two blockchains (represented as linked lists) sorted by a ",Object(i.a)("inlineCode",{parentName:"strong"},"timestamp")," property, write a function ",Object(i.a)(g,{mdxType:"InlineCode"})," that returns the head node of a merged linked list that is sorted by ",Object(i.a)("inlineCode",{parentName:"strong"},"timestamp")," in ascending order.")),Object(i.a)(w,{mdxType:"SampleInputOutput"}))}x.isMDXComponent=!0;var T=x,C=t("+FKO"),H=t("d4K7"),S={};function D(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},S,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)(T,{mdxType:"QuestionStatement"}),Object(i.a)("blockquote",null,Object(i.a)("p",{parentName:"blockquote"},"A blockchain is a great example of a real-life use case for a linked list.\nMost blockchains behave as a doubly linked list where each node points to the node in front of it and behind it.\nThey also store a ",Object(i.a)(C.a,{content:Object(i.a)(H.a,{mdxType:"HashFunctions"}),mdxType:"ConceptModal"},"hash")," of the blocks they point to which ensures the data can exist publicly without fear of it being modified."),Object(i.a)("div",null,Object(i.a)("br",null)),Object(i.a)("p",{parentName:"blockquote"},"Since blockchains are distributed, being able to simply and quickly append a new node to the tail and only needing to update a pointer is a huge benefit."),Object(i.a)("div",null,Object(i.a)("br",null)),Object(i.a)("p",{parentName:"blockquote"},"We see other data structures much more frequently in our day-to-day jobs,\nso it's good to have an appreciation for how linked lists can also be used practically with a tangible, real-world application.")))}D.isMDXComponent=!0;var M=D,X={};function I(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},X,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"Since we know each blockchain has multiple transactions (and therefore nodes), we don't need to worry about empty linked lists.\nWe also know that the ",Object(i.a)("inlineCode",{parentName:"p"},"timestamp")," will be an integer ",Object(i.a)("inlineCode",{parentName:"p"},">= 0")," since they are unix timestamps."))}I.isMDXComponent=!0;var A={};function W(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},A,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"You want to return the head node of the combined list, so make sure you track that correctly.\nAlso make sure this node doesn't appear in the list more than once."))}W.isMDXComponent=!0;var E=t("Ydbm"),q={};function L(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},q,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"There is a recursive solution which is ",Object(i.a)(E.a.n,null)," time, but this incurs ",Object(i.a)(E.a.n,null)," space from the call stack."))}L.isMDXComponent=!0;var z={};function F(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},z,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"There is an iterative solution that follows similar logic as the recursive solution and is also ",Object(i.a)(E.a.n,null)," time.\nIt improves the space to be constant ",Object(i.a)(E.a.constant,null),"."))}F.isMDXComponent=!0;var _={};function B(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},_,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"You will need to track 4 pointers: the head for the combined list that is returned, the tail for the combined list for appends, and the first unused node from both of the input blockchains."))}B.isMDXComponent=!0;var J=[I,W,L,F,B],U=t("jkan"),P={};function Y(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},P,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"We are given the head nodes of two sorted blockchains, and we know these blockchains can be represented as linked lists.\nAs a result, we want to return the head of a blockchain that is a sorted version of the merged chains."),Object(i.a)("p",null,"Since we know that the two input lists are sorted,\nwe can pretty quickly determine that we only need to compare the timestamps for the current front node of each list.\nWhichever timestamp is smaller, we add that item to a combined list and iterate past it so that we don't include it again."),Object(i.a)(U.a,{src:"/images/full-combine-blockchains.gif",mdxType:"Image"}))}Y.isMDXComponent=!0;var R={};function G(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},R,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"We don't know the length of the blockchains,\nso we will need to iterate through them either iteratively with a ",Object(i.a)("inlineCode",{parentName:"p"},"while")," loop or recursively."),Object(i.a)("p",null,"The logic for each is similar, and they both operate in linear ",Object(i.a)(E.a.n,null)," time.\nHowever, for the recursive solution, we will create a function call for the entire list until we reach our stopping condition,\nand this will add an additional ",Object(i.a)(E.a.n,null)," space complexity to account for the call stack.\nFor the iterative solution, we will only need to maintain pointers which means this can be accomplished in ",Object(i.a)(E.a.constant,null)," constant space."),Object(i.a)("p",null,"Because of this, we'll work through the iterative solution, but the recursive solution will also be given at the end of the lesson for completeness."),Object(i.a)("p",null,"So what pointers do we need to maintain and how do we track them as we walk through the blockchains?"))}G.isMDXComponent=!0;var V=t("gWsq"),K={};function Q(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},K,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"The prompt tells us to return the head node of our combined blockchain, so we'll want to maintain a reference to that.\nThe head node of the combined blockchain corresponds to the head of the input blockchain that has the smallest timestamp."),Object(i.a)(U.a,{src:"/images/maintain-blockchain-head.png",mdxType:"Image"}),Object(i.a)("p",null,"As we iterate through our blockchains, we will be appending nodes to our combined list.\nTo be able to append, we will need to track the tail of our combined linked list with a pointer."),Object(i.a)("p",null,"Since we only need to compare a single node from each of the input linked lists,\nwe will have a pointer for each that tracks the node with the smallest timestamp that hasn't been added to the combined list.\nOnce a node is appended, the pointer for that input list will then move to its ",Object(i.a)("inlineCode",{parentName:"p"},"next")," node."),Object(i.a)(U.a,{src:"/images/smallest-pointer-node.png",mdxType:"Image"}),Object(i.a)("p",null,"In total, this gives us 4 pointers we'll track."),Object(i.a)(V.h,{mdxType:"Container"},Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},"#",Object(i.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"combined list head pointer",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token spread operator"},"..."),"items ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"in")," order",Object(i.a)("span",{parentName:"code",className:"token spread operator"},"...")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," #",Object(i.a)("span",{parentName:"code",className:"token number"},"2")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"combined list tail pointer",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n\n#",Object(i.a)("span",{parentName:"code",className:"token number"},"3")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"current smallest timestamp node ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"in")," ",Object(i.a)("span",{parentName:"code",className:"token maybe-class-name"},"SkilledChain"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token spread operator"},"...")," rest  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"of")," chain ",Object(i.a)("span",{parentName:"code",className:"token spread operator"},"...")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),"\n#",Object(i.a)("span",{parentName:"code",className:"token number"},"4")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"current smallest timestamp node ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"in")," ",Object(i.a)("span",{parentName:"code",className:"token maybe-class-name"},"DevCoin"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token spread operator"},"...")," rest  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"of")," chain ",Object(i.a)("span",{parentName:"code",className:"token spread operator"},"...")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"-"),Object(i.a)("span",{parentName:"code",className:"token operator"},">")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),"\n"))))}Q.isMDXComponent=!0;var Z={};function $(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},Z,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"We've seen how to iterate through a single linked list.\nWe use a ",Object(i.a)("inlineCode",{parentName:"p"},"while")," loop and the pointer continues to move to the ",Object(i.a)("inlineCode",{parentName:"p"},"next")," node until it reaches ",Object(i.a)(l.a,{mdxType:"Null"}),"."),Object(i.a)("p",null,"With two linked lists, we want to iterate until either one of the lists reaches ",Object(i.a)(l.a,{mdxType:"Null"}),".\nWhy is that?"),Object(i.a)("p",null,"Once we have depleted one list by using all of its nodes, we know that the other list must have remaining nodes since it hasn't reached ",Object(i.a)(l.a,{mdxType:"Null"}),".\nWith one list remaining, there are no more comparisons to be done. Since the remaining list is already in order, we can simply attach it to the end of our combined list."),Object(i.a)(U.a,{src:"/images/combine-remaining-nodes.png",mdxType:"Image"}),Object(i.a)("p",null,"During the ",Object(i.a)("inlineCode",{parentName:"p"},"while")," loop iteration, we will compare the timestamp of the pointers for the current smallest item from our input lists.\nWhichever is smaller, we will append that node to our combined list.\nIf they are the same, it doesn't matter which we add.\nThen we will move the pointer of the input list we just used forward to its ",Object(i.a)("inlineCode",{parentName:"p"},"next"),", and we'll move the combined list tail pointer to its ",Object(i.a)("inlineCode",{parentName:"p"},"next")," so it is at the new tail.\nWe are then ready to repeat these steps again for the next node comparison until one list reaches the end."),Object(i.a)("p",null,"Once the loop is complete and after we attach the nodes of the remaining list, it will be fully merged.\nWe can return the head node pointer we created at the beginning which corresponds to the start of the combined sorted linked list."))}$.isMDXComponent=!0;var ee=[Y,G,Q,$],ae=t("lcwc"),te=t("PH+U"),ne=t("S2YG"),ce={};function oe(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},ce,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},"Iterate through multiple linked lists simultaneously"),Object(i.a)("li",{parentName:"ul"},"Manage multiple pointers"),Object(i.a)("li",{parentName:"ul"},"Consider iteration vs. recursion"),Object(i.a)("li",{parentName:"ul"},"Understand how sorting simplifies our solution"),Object(i.a)("li",{parentName:"ul"},"Handle edge cases and off-by-one bugs")))}oe.isMDXComponent=!0;var se=oe,pe={};function re(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},pe,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token function-variable function"},"combineBlockchains")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"chainHead1",Object(i.a)("span",{parentName:"span",className:"token punctuation"},",")," chainHead2"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Store the head of the first item in the combined chain"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," resultHead ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"<")," chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"?")," chainHead1 ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Init the combined list with the first item"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," combinedTail ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," resultHead",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," currentNode1 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," currentNode2 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Move the node forward that was already added to our resultHead"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"<")," chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    currentNode1 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    currentNode2 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// We iterate through until one of the linked lists has been depleted"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode1 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"&&")," currentNode2 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// In either case, we do the same thing."),"\n    ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// We attach the node to our combined list,"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// and then we move forward in the contributed chain's list"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"currentNode1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"<")," currentNode2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      combinedTail",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      currentNode1 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      combinedTail",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      currentNode2 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n    ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Move to the new tail in the combined chain"),"\n    combinedTail ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," combinedTail",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// One of the chains has been depleted (reached null)"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// The other has it's remaining items in sorted order,"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// so we can just set the next value of our"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// combined list to the non-null node"),"\n  combinedTail",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," currentNode1 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"||")," currentNode2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// ^ NOTE: We use || above which is a short circuit evalution."),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// If currentNode1 has a value, it will be the `next`,"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// otherwise it will yield to currentNode2"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," resultHead",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}re.isMDXComponent=!0;var me=Object(u.a)({},d.a.Javascript,c.createElement(re,null)),ie=Object(N.a)(me),le={};function de(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},le,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token function-variable function"},"combineBlockchains")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"chainHead1",Object(i.a)("span",{parentName:"span",className:"token punctuation"},",")," chainHead2"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Stopping condition when one of lists is null, we return the other"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"chainHead1 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"chainHead2 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Recursively call our function"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"<")," chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"combineBlockchains"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"  chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"combineBlockchains"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"chainHead1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"  chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," chainHead2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}de.isMDXComponent=!0;var ue=Object(u.a)({},d.a.Javascript,c.createElement(de,null)),Ne=Object(N.a)(ue),be=Object(u.a)({},d.a.Javascript,"resultHead"),je=Object(f.a)(be),Oe=Object(u.a)({},d.a.Javascript,"currentNode1"),ke=Object(f.a)(Oe),he=Object(u.a)({},d.a.Javascript,"currentNode2"),we=Object(f.a)(he),fe={};function ye(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},fe,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("p",null,"We're going to solve our solution iteratively, so let's talk through what we do:"),Object(i.a)("ol",null,Object(i.a)("li",{parentName:"ol"},"Check the ",Object(i.a)("inlineCode",{parentName:"li"},"timestamp")," of the input nodes and whichever is smaller, we assign it to ",Object(i.a)(je,{mdxType:"HeadNode"}),"."),Object(i.a)("li",{parentName:"ol"},"Initialize the ",Object(i.a)("inlineCode",{parentName:"li"},"combined")," blockchain to the same head node since it is both the head and tail to start."),Object(i.a)("li",{parentName:"ol"},"Create pointers to walk through the input linked lists ",Object(i.a)(ke,{mdxType:"CurrentNode1"})," and ",Object(i.a)(we,{mdxType:"CurrentNode2"}),"."),Object(i.a)("li",{parentName:"ol"},"Since we set the ",Object(i.a)(je,{mdxType:"HeadNode"})," to the smallest node, we need to move the pointer for that input list forward one spot before we iterate since it has already been added."),Object(i.a)("li",{parentName:"ol"},"Iterate through the linked lists ",Object(i.a)("inlineCode",{parentName:"li"},"while")," neither list points to a ",Object(i.a)(l.a,{mdxType:"Null"})," ",Object(i.a)("inlineCode",{parentName:"li"},"next"),"."),Object(i.a)("li",{parentName:"ol"},"Each iteration through the list, we look for the lower timestamp node, and if they are equal, it doesn't matter which we pick."),Object(i.a)("li",{parentName:"ol"},"Whichever node has the smaller timestamp, we append it to the ",Object(i.a)("inlineCode",{parentName:"li"},"combined")," list and then we move the pointer of that input list forward one node to its ",Object(i.a)("inlineCode",{parentName:"li"},"next"),"."),Object(i.a)("li",{parentName:"ol"},"Before we complete the loop, we move the pointer for ",Object(i.a)("inlineCode",{parentName:"li"},"combined")," forward so it is at the new tail."),Object(i.a)("li",{parentName:"ol"},"Once our list is complete, whichever list is not ",Object(i.a)(l.a,{mdxType:"Null"}),", we point ",Object(i.a)("inlineCode",{parentName:"li"},"combined")," to the front node of the remaining items."),Object(i.a)("li",{parentName:"ol"},"Return ",Object(i.a)(je,{mdxType:"HeadNode"})," which is the start of our combined sorted list.")),Object(i.a)(ie,{mdxType:"SolutionCode"}),Object(i.a)(ae.a,{mdxType:"ComplexitySubtitle"}),Object(i.a)("p",null,Object(i.a)(E.a.n,null)," time and ",Object(i.a)(E.a.constant,null)," space."),Object(i.a)("p",null,"Here ",Object(i.a)("inlineCode",{parentName:"p"},"n")," is the size of the combined blockchain."),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},"Time: We iterate through the linked list once to combine all the nodes."),Object(i.a)("li",{parentName:"ul"},"Space: We only create pointers, so we solve this in constant space.")),Object(i.a)("h3",null,"Bonus"),Object(i.a)("p",null,"For the recursive solution, we actually don't maintain any additional pointers.\nThe order of our output list is determined by the order in which we call our function.\nWe still compare the timestamp of the front nodes, and whichever is smaller, we set its ",Object(i.a)("inlineCode",{parentName:"p"},"next")," value to the result of the recursive call that comes after it.\nWhichever is used, we increment it forward so that the new front nodes are compared.\nWe continue this process until one of the lists is ",Object(i.a)(l.a,{mdxType:"Null"})," which is our stopping condition, and then all the remaining nodes are returned.\nThere is a new function call created that works deeper into the list until we hit a stopping node, and then all function calls will unwind and return their value.\nThis is why we get the additional ",Object(i.a)(E.a.n,null)," space."),Object(i.a)(Ne,{mdxType:"RecursiveCode"}),Object(i.a)(te.a,{mdxType:"VariationsSubtitle"}),Object(i.a)("ul",null,Object(i.a)("li",{parentName:"ul"},"What if a list could be empty?"),Object(i.a)("li",{parentName:"ul"},"What if we wanted to sort an unordered list?"),Object(i.a)("li",{parentName:"ul"},"What if we had an arbitrary number of ",Object(i.a)("inlineCode",{parentName:"li"},"k")," sorted linked lists - how would you merge those?"),Object(i.a)("li",{parentName:"ul"},"We could also merge sorted arrays in a similar manner.")),Object(i.a)(ne.a,{mdxType:"LearningOutcomesSubtitle"}),Object(i.a)(se,{mdxType:"LearningOutcomes"}))}ye.isMDXComponent=!0;var ge=ye,ve={};function xe(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},ve,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token function-variable function"},"combineBlockchains")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"chainHead1",Object(i.a)("span",{parentName:"span",className:"token punctuation"},",")," chainHead2"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token comment"},"// Your solution here"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}xe.isMDXComponent=!0;var Te=Object(u.a)({},d.a.Javascript,c.createElement(xe,null)),Ce=function(e){return Te[e]},He={};function Se(e){var a=e.components,t=Object(m.a)(e,["components"]);return Object(i.a)("wrapper",Object(n.a)({},He,t,{components:a,mdxType:"MDXLayout"}),Object(i.a)("pre",{className:"language-javascript"},Object(i.a)("code",{parentName:"pre",className:"language-javascript"},Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," tests ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{")," list1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token number"},"1"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"3"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"10"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," list2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token number"},"2"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"4"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"5"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"6"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token number"},"1"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"2"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"3"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"4"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"5"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"6"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"10"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(i.a)("span",{parentName:"code",className:"token string"},"'standard case'"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Node")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},"timestamp"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," timestamp",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token function-variable function"},"buildLinkedList")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token parameter"},"array")," ",Object(i.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," head ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"array",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token number"},"0"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"1"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(i.a)("span",{parentName:"code",className:"token operator"},"<")," array",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(i.a)("span",{parentName:"code",className:"token operator"},"++"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    node",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(i.a)("span",{parentName:"code",className:"token class-name"},"Node"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"array",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," node",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," head",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token function-variable function"},"listToArray")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token parameter"},"head")," ",Object(i.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," results ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," head",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"while")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(i.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    results",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"node",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"timestamp"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    node ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," node",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"next"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," results",Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(i.a)("span",{parentName:"code",className:"token function-variable function"},"validate")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token parameter"},Object(i.a)("span",{parentName:"span",className:"token punctuation"},"{")," input",Object(i.a)("span",{parentName:"span",className:"token punctuation"},",")," expected",Object(i.a)("span",{parentName:"span",className:"token punctuation"},",")," description ",Object(i.a)("span",{parentName:"span",className:"token punctuation"},"}")),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," head1 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"buildLinkedList"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"input",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"list1"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," head2 ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"buildLinkedList"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"input",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"list2"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," userAnswer ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"combineBlockchains"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"head1",Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," head2",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"const")," answerAsArray ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token function"},"listToArray"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"userAnswer",Object(i.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," passed ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token boolean"},"true"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"answerAsArray",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"length")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"!==")," expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    passed ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token boolean"},"false"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"else")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"for")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(i.a)("span",{parentName:"code",className:"token keyword"},"let")," i ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token number"},"0"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";")," i ",Object(i.a)("span",{parentName:"code",className:"token operator"},"<")," answerAsArray",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(i.a)("span",{parentName:"code",className:"token property-access"},"length"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";")," i",Object(i.a)("span",{parentName:"code",className:"token operator"},"++"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"("),"answerAsArray",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]")," ",Object(i.a)("span",{parentName:"code",className:"token operator"},"!==")," expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"["),"i",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n        passed ",Object(i.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(i.a)("span",{parentName:"code",className:"token boolean"},"false"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n    ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(i.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"{")," passed",Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," description",Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," expected",Object(i.a)("span",{parentName:"code",className:"token punctuation"},",")," userAnswer",Object(i.a)("span",{parentName:"code",className:"token punctuation"},":")," answerAsArray ",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(i.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(i.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}Se.isMDXComponent=!0;var De=Object(u.a)({},d.a.Javascript,c.createElement(Se,null)),Me=function(e){return De[e]},Xe={segments:[{name:"Introduction",startTimeSeconds:0,endTimeSeconds:8},{name:"Question Prompt",startTimeSeconds:8,endTimeSeconds:40},{name:"Solution Breakdown",startTimeSeconds:40,endTimeSeconds:331},{name:"Solution Summary and Big O",startTimeSeconds:331,endTimeSeconds:389},{name:"Code Walkthrough",startTimeSeconds:389,endTimeSeconds:722}]},Ie=function(e){var a=e.hasLessonAccess;return c.createElement(p.a,Object(n.a)({},e,{Introduction:M,QuestionStatement:T,Solution:a?ge:r.a,LearningOutcomes:a?se:null,validationItems:J,explanationItems:a?ee:[],getUserAnswer:Ce,getTests:a?Me:r.b,getSolutionCode:a?ie:r.b,video:Xe}))},Ae=!0;a.default=Object(s.a)((function(e){return c.useEffect((function(){e.lesson&&"ACTIVE"===e.lesson.status||(window.location.href="/course")}),[e]),e.lesson&&"ACTIVE"===e.lesson.status?c.createElement(o.a,Object(n.a)({},e,{Component:Ie})):null}),{ssr:!1})},jDXR:function(e,a,t){"use strict";var n=t("q1tI"),c=function(e){var a=e.children;return n.createElement("h2",null,a)};a.a=c},jkan:function(e,a,t){"use strict";var n=t("q1tI"),c=t("vOnD"),o=t("uqmq"),s=t("5nwr"),p=Object(c.e)(o.b).withConfig({componentId:"sc-1u1nk7e-0"})(["display:flex;justify-content:center;align-items:center;flex-direction:column;"]),r=c.e.img.withConfig({componentId:"sc-1u1nk7e-1"})(["border-radius:6px;max-width:",";","{max-width:100% !important;}"],(function(e){var a=e.maxWidth;return a?"".concat(a," !important"):"100%"}),Object(s.b)()),m=c.e.div.withConfig({componentId:"sc-1u1nk7e-2"})(["margin-top:4px;font-size:12px;color:",";text-align:center;width:100%;a,a:hover,a:visited{color:",";text-decoration:underline;}"],(function(e){return e.theme.color.textSecondary}),(function(e){return e.theme.color.textSecondary})),i=function(){return n.createElement("span",null,"Credit:"," ",n.createElement("a",{href:"https://visualgo.net/",target:"_blank",rel:"noopener noreferrer"},"VisuAlgo"))},l=function(e){var a=e.src,t=e.credit,c=e.isVisuAlgo,o=e.maxWidth;return n.createElement(p,null,n.createElement(r,{maxWidth:o,src:a}),!!t&&n.createElement(m,null,t),!!c&&n.createElement(m,null,n.createElement(i,null)))};a.a=l},uqmq:function(e,a,t){"use strict";t.d(a,"b",(function(){return s})),t.d(a,"c",(function(){return p})),t.d(a,"a",(function(){return r}));var n=t("vOnD"),c=t("gWsq"),o=t("SOUA"),s=Object(n.e)(c.h).withConfig({componentId:"sc-16wjbcj-0"})(["margin-top:","px;"],o.a),p=Object(n.e)(s).withConfig({componentId:"sc-16wjbcj-1"})(["display:flex;justify-content:center;align-items:center;"]),r=n.e.div.withConfig({componentId:"sc-16wjbcj-2"})(["margin-top:","px;"],o.a)}},[["UXfW",0,1,4,6,5,9,12,11,13,14,15,18,17,21,2,3,7,8,10,16,19,22,23,24]]]);