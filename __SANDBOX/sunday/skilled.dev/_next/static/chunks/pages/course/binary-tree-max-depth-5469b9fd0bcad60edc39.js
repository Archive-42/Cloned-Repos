_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[55],{"7Fnj":function(e,a,t){"use strict";var n=t("rePB"),c=t("JT+q"),o=t("Utoj"),s=Object(n.a)({},o.a.Javascript,"null"),p=Object(c.a)(s);a.a=p},HlGe:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/course/binary-tree-max-depth",function(){return t("Kl3U")}])},Kl3U:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return De}));var n=t("wx14"),c=t("q1tI"),o=t("NoRJ"),s=t("Qovc"),p=t("gh+C"),m=t("kB7q"),r=t("Ff2n"),N=t("7ljp"),l=(t("YFqc"),t("Utoj")),u=(t("uk0T"),t("rePB")),d=t("Jpar"),i={};function b(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},i,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},"    ",Object(N.a)("span",{parentName:"code",className:"token number"},"9"),"      ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// root = level 0"),"\n   ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\\n  ",Object(N.a)("span",{parentName:"code",className:"token number"},"5"),"  ",Object(N.a)("span",{parentName:"code",className:"token number"},"22"),"    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// level 1"),"\n ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/")," \\   \\\n",Object(N.a)("span",{parentName:"code",className:"token number"},"1"),"   ",Object(N.a)("span",{parentName:"code",className:"token number"},"7"),"  ",Object(N.a)("span",{parentName:"code",className:"token number"},"30"),"  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// level 2"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token operator"},"/"),"\n     ",Object(N.a)("span",{parentName:"code",className:"token number"},"25"),"    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// level 3"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token function"},"findMaxDepth"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// returns 3"),"\n")))}b.isMDXComponent=!0;var j=Object(u.a)({},l.a.Javascript,c.createElement(b,null)),O=Object(d.a)(j),k={};function h(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},k,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)(O,{mdxType:"InputOutput"}))}h.isMDXComponent=!0;var y=t("JT+q"),w=Object(u.a)({},l.a.Javascript,"findMaxDepth"),f=Object(y.a)(w),g={};function v(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},g,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," data",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}v.isMDXComponent=!0;var x=Object(u.a)({},l.a.Javascript,c.createElement(v,null)),T=Object(d.a)(x),D={};function C(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},D,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,Object(N.a)("strong",{parentName:"p"},"Given the root node of a binary tree, write a function ",Object(N.a)(f,{mdxType:"SolutionSignature"})," that returns an integer corresponding to the maximum depth.")),Object(N.a)("p",null,"The maximum depth is going to be the node with the level furthest from the root.\nThe root node is a 0 depth, and an empty input would be considered -1."),Object(N.a)(h,{mdxType:"SampleInputOutput"}),Object(N.a)("p",null,"The tree nodes will use the following implementation:"),Object(N.a)(T,{mdxType:"BinaryNode"}))}C.isMDXComponent=!0;var M=C,S={};function X(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},S,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)(M,{mdxType:"QuestionStatement"}))}X.isMDXComponent=!0;var B=X,I={};function E(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},I,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"This can be solved iteratively or recursively using either DFS or BFS.\nFollow whichever path you feel most comfortable with,\nbut remember to mention that a recursive solution could cause a stack overflow."))}E.isMDXComponent=!0;var L={};function _(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},L,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"All you need to track is the max depth at any point.\nIf the current max you've found is larger than the depth of the current level,\nthen we know to ignore this depth and continue looking.\nIf the current depth is larger than the max we found, we store this as the new max depth."))}_.isMDXComponent=!0;var q=t("Ydbm"),J={};function A(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},J,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"This can be done in ",Object(N.a)(q.a.n,null)," time and space."))}A.isMDXComponent=!0;var W=[E,_,A],F={};function U(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},F,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"This problem can be solved either iteratively or recursively.\nThe recursive solution is very clean and straightforward,\nbut as with all recursive functions, it has the possibility to cause a stack overflow."),Object(N.a)("p",null,"I'll walk through the iterative solution because it will provide additional insight into how to traverse through a tree and also how to think about depth.\nI'll present the recursive solution as a bonus at the end."),Object(N.a)("p",null,"This question asks us to find the maximum depth, and this will correspond to the leaf node furthest from the root.\nTrees are non-linear and we have been given no information about its structure, so we can assume we'll need to visit all ",Object(N.a)("inlineCode",{parentName:"p"},"n")," nodes in ",Object(N.a)(q.a.n,null)," time.\nWe are only given the root node as an input, so we will also need to figure out our own way to track the depth."))}U.isMDXComponent=!0;var P=t("7Fnj"),V={};function G(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},V,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},"stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," depth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," depth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\nstack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," depth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," depth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}G.isMDXComponent=!0;var Q=Object(u.a)({},l.a.Javascript,c.createElement(G,null)),Y=Object(d.a)(Q),H={};function R(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},H,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"To solve this problem, we'll need to track 3 things:"),Object(N.a)("ol",null,Object(N.a)("li",{parentName:"ol"},"The depth for a node when we encounter it"),Object(N.a)("li",{parentName:"ol"},"The remaining unvisited nodes"),Object(N.a)("li",{parentName:"ol"},"The maximum depth")),Object(N.a)("p",null,"When we traverse a tree recursively, we build up the call stack with an additional item for each node.\nOur stopping condition is reaching a ",Object(N.a)(P.a,{mdxType:"Null"})," value for both the ",Object(N.a)("inlineCode",{parentName:"p"},"left")," and ",Object(N.a)("inlineCode",{parentName:"p"},"right")," pointer, indicating a leaf node."),Object(N.a)("p",null,"We can do the same thing iteratively by using a stack data structure.\nAs we encounter nodes, we push its ",Object(N.a)("inlineCode",{parentName:"p"},"left")," and ",Object(N.a)("inlineCode",{parentName:"p"},"right")," pointers to the stack,\nand we continue to iterate ",Object(N.a)("inlineCode",{parentName:"p"},"while")," the stack has values."),Object(N.a)("p",null,"The additional piece of information we need to track is the depth at a given node.\nSo when we push a child node to the stack, we'll also include its depth which is just the current depth ",Object(N.a)("inlineCode",{parentName:"p"},"+1")," since we are moving one item further into the tree."),Object(N.a)(Y,{mdxType:"StackStorage"}),Object(N.a)("p",null,"We know that the root node is a depth of 0.\nSince we begin iterating from the root, we can just increment by 1 at each level, allowing us to easily count up."),Object(N.a)("p",null,"Now that we're maintaining the stack and pushing the depth to it, we have covered points 1 and 2 above.\nWe're traversing it iteratively and adding the depth alongside each unvisited node.\nNow we just need to determine the maximum depth."))}R.isMDXComponent=!0;var K=t("jkan"),z={};function Z(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},z,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"To know the maximum depth, all we need to do is track the current maximum in a variable and compare it to each node's depth.\nIf we encounter a node that has a larger depth, we replace the current maximum.\nSince we are traversing through all ",Object(N.a)("inlineCode",{parentName:"p"},"n")," nodes, once we finish iterating, the value stored in the current maximum will correspond to the tree's overall maximum depth."),Object(N.a)(K.a,{src:"/images/max-node-depth.gif",mdxType:"Image"}))}Z.isMDXComponent=!0;var $=[U,R,Z],ee=t("lcwc"),ae=t("PH+U"),te=t("S2YG"),ne={};function ce(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},ne,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("ul",null,Object(N.a)("li",{parentName:"ul"},"Traverse a tree iteratively"),Object(N.a)("li",{parentName:"ul"},"Understand and track the depth of a tree")))}ce.isMDXComponent=!0;var oe=ce,se={};function pe(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},se,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"findMaxDepth")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"===")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"-"),Object(N.a)("span",{parentName:"code",className:"token number"},"1"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," leftDepth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"findMaxDepth"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," rightDepth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"findMaxDepth"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token known-class-name class-name"},"Math"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"max"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"leftDepth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," rightDepth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"1"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}pe.isMDXComponent=!0;var me=Object(u.a)({},l.a.Javascript,c.createElement(pe,null)),re=Object(d.a)(me),Ne={};function le(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},Ne,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"findMaxDepth")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," stack ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"["),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"let")," maxDepth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"-"),Object(N.a)("span",{parentName:"code",className:"token number"},"1"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";")," ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Value to return if no node is given"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Updates to the correct root depth of 0"),"\n    maxDepth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," maxDepth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"1"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Add the root to the stack"),"\n    stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," depth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," maxDepth  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"while"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"length")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"0"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Remove top item on the stack and extract the node and its depth"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," depth ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"pop"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n    ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// If the node exists, compare it to the current max and add its children to the stack"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"if")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"node ",Object(N.a)("span",{parentName:"code",className:"token operator"},"!==")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      maxDepth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token known-class-name class-name"},"Math"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"max"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"maxDepth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," depth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," depth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," depth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      stack",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token method function property-access"},"push"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," node",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," depth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," depth ",Object(N.a)("span",{parentName:"code",className:"token operator"},"+")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"1")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," maxDepth",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}le.isMDXComponent=!0;var ue=Object(u.a)({},l.a.Javascript,c.createElement(le,null)),de=Object(d.a)(ue),ie={};function be(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},ie,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("p",null,"We'll traverse through the tree iteratively by storing the unvisited nodes in a stack by pushing its ",Object(N.a)("inlineCode",{parentName:"p"},"left")," and ",Object(N.a)("inlineCode",{parentName:"p"},"right")," children to the stack.\nAlongside each node, we'll also store its depth which is just its parent's depth incremented by 1.\nIf we encounter a ",Object(N.a)(P.a,{mdxType:"Null"})," value, we know that we reached the end of a path and ignore it.\nOtherwise, we maintain the maximum depth by comparing it to the depth at each node, and this will yield the solution once we traverse all the nodes."),Object(N.a)(de,{mdxType:"SolutionCode"}),Object(N.a)(ee.a,{mdxType:"ComplexitySubtitle"}),Object(N.a)("p",null,Object(N.a)(q.a.n,null)," time and ",Object(N.a)(q.a.n,null)," space."),Object(N.a)("p",null,"We visit all ",Object(N.a)("inlineCode",{parentName:"p"},"n")," nodes which requires ",Object(N.a)(q.a.n,null)," time.\nIn a worst case, our stack will contain all ",Object(N.a)("inlineCode",{parentName:"p"},"n")," items in an unbalanced tree."),Object(N.a)("p",null,"For the unbalanced tree case, you would continue to add two nodes and only remove one.\nSo by the time you reach a leaf node, you would have ",Object(N.a)(q.a.n,{letter:"n / 2"}),".\nIf your tree is reasonably balanced, the space complexity would be ",Object(N.a)(q.a.logn,null)," because large chunks of the tree would not be handled (added to the stack) until you pop off the items from other subtrees."),Object(N.a)(ae.a,{mdxType:"VariationsSubtitle"}),Object(N.a)("p",null,"Understanding node depth is a popular concept in tree interview questions.\nMake sure you understand how to track and manage the depth at any point."),Object(N.a)("p",null,"Other common questions include:"),Object(N.a)("ul",null,Object(N.a)("li",{parentName:"ul"},"Solve this same problem recursively or using BFS"),Object(N.a)("li",{parentName:"ul"},"Sum the depth of all nodes"),Object(N.a)("li",{parentName:"ul"},"Find the maximum depth of an arbitrary tree (not binary)")),Object(N.a)("h3",null,"Bonus"),Object(N.a)("p",null,"The recursive solution is elegant and shows that the maximum depth is just a sum of the levels in the call stack by following all the right and left paths.\nWe take the maximum of either the ",Object(N.a)("inlineCode",{parentName:"p"},"left")," or ",Object(N.a)("inlineCode",{parentName:"p"},"right")," at each recursive call, and once the stack unwinds to the original root, we will know our depth."),Object(N.a)(re,{mdxType:"RecursiveSolution"}),Object(N.a)(te.a,{mdxType:"LearningOutcomesSubtitle"}),Object(N.a)(oe,{mdxType:"LearningOutcomes"}))}be.isMDXComponent=!0;var je=be,Oe={};function ke(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},Oe,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"findMaxDepth")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"root"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token comment"},"// Your solution here"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n")))}ke.isMDXComponent=!0;var he=Object(u.a)({},l.a.Javascript,c.createElement(ke,null)),ye=function(e){return he[e]},we={};function fe(e){var a=e.components,t=Object(r.a)(e,["components"]);return Object(N.a)("wrapper",Object(n.a)({},we,t,{components:a,mdxType:"MDXLayout"}),Object(N.a)("pre",{className:"language-javascript"},Object(N.a)("code",{parentName:"pre",className:"language-javascript"},Object(N.a)("span",{parentName:"code",className:"token keyword"},"class")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token function"},"constructor"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},"data"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"data")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," data",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"this"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," tests ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"["),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token keyword null nil"},"null"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"-"),Object(N.a)("span",{parentName:"code",className:"token number"},"1"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'handles empty list'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"0"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'handles only a root'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"20"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"20"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"17"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"70"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"3"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'normal case'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"55"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"65"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"75"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"85"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"5"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'unbalanced case'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n    input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," root ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"42"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"20"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"17"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"12"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"18"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"25"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"24"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"left"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"27"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"50"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"70"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n      root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"."),Object(N.a)("span",{parentName:"code",className:"token property-access"},"right")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"new")," ",Object(N.a)("span",{parentName:"code",className:"token class-name"},"BinaryNode"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token number"},"80"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n      ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," root",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n    ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token number"},"3"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n    description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},":")," ",Object(N.a)("span",{parentName:"code",className:"token string"},"'multiple nodes at the same level'"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n  ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},","),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"]"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," ",Object(N.a)("span",{parentName:"code",className:"token function-variable function"},"validate")," ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),Object(N.a)("span",{parentName:"code",className:"token parameter"},Object(N.a)("span",{parentName:"span",className:"token punctuation"},"{")," input",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," expected",Object(N.a)("span",{parentName:"span",className:"token punctuation"},",")," description ",Object(N.a)("span",{parentName:"span",className:"token punctuation"},"}")),Object(N.a)("span",{parentName:"code",className:"token punctuation"},")")," ",Object(N.a)("span",{parentName:"code",className:"token arrow operator"},"=>")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," userAnswer ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," ",Object(N.a)("span",{parentName:"code",className:"token function"},"findMaxDepth"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},"("),"input",Object(N.a)("span",{parentName:"code",className:"token punctuation"},")"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"const")," passed ",Object(N.a)("span",{parentName:"code",className:"token operator"},"=")," userAnswer ",Object(N.a)("span",{parentName:"code",className:"token operator"},"===")," expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n\n  ",Object(N.a)("span",{parentName:"code",className:"token keyword"},"return")," ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"{")," passed",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," description",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," expected",Object(N.a)("span",{parentName:"code",className:"token punctuation"},",")," userAnswer ",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n",Object(N.a)("span",{parentName:"code",className:"token punctuation"},"}"),Object(N.a)("span",{parentName:"code",className:"token punctuation"},";"),"\n")))}fe.isMDXComponent=!0;var ge=Object(u.a)({},l.a.Javascript,c.createElement(fe,null)),ve=function(e){return ge[e]},xe={segments:[{name:"Introduction",startTimeSeconds:0,endTimeSeconds:10},{name:"Question Prompt",startTimeSeconds:10,endTimeSeconds:35},{name:"Constraints",startTimeSeconds:35,endTimeSeconds:68},{name:"Solution Breakdown",startTimeSeconds:68,endTimeSeconds:304},{name:"Solution Summary",startTimeSeconds:304,endTimeSeconds:347},{name:"Big O",startTimeSeconds:347,endTimeSeconds:420},{name:"Code Walkthrough",startTimeSeconds:420,endTimeSeconds:630}]},Te=function(e){var a=e.hasLessonAccess;return c.createElement(p.a,Object(n.a)({},e,{Introduction:B,QuestionStatement:M,Solution:a?je:m.a,LearningOutcomes:a?oe:null,validationItems:W,explanationItems:a?$:[],getUserAnswer:ye,getTests:a?ve:m.b,getSolutionCode:a?de:m.b,video:xe}))},De=!0;a.default=Object(s.a)((function(e){return c.useEffect((function(){e.lesson&&"ACTIVE"===e.lesson.status||(window.location.href="/course")}),[e]),e.lesson&&"ACTIVE"===e.lesson.status?c.createElement(o.a,Object(n.a)({},e,{Component:Te})):null}),{ssr:!1})},jkan:function(e,a,t){"use strict";var n=t("q1tI"),c=t("vOnD"),o=t("uqmq"),s=t("5nwr"),p=Object(c.e)(o.b).withConfig({componentId:"sc-1u1nk7e-0"})(["display:flex;justify-content:center;align-items:center;flex-direction:column;"]),m=c.e.img.withConfig({componentId:"sc-1u1nk7e-1"})(["border-radius:6px;max-width:",";","{max-width:100% !important;}"],(function(e){var a=e.maxWidth;return a?"".concat(a," !important"):"100%"}),Object(s.b)()),r=c.e.div.withConfig({componentId:"sc-1u1nk7e-2"})(["margin-top:4px;font-size:12px;color:",";text-align:center;width:100%;a,a:hover,a:visited{color:",";text-decoration:underline;}"],(function(e){return e.theme.color.textSecondary}),(function(e){return e.theme.color.textSecondary})),N=function(){return n.createElement("span",null,"Credit:"," ",n.createElement("a",{href:"https://visualgo.net/",target:"_blank",rel:"noopener noreferrer"},"VisuAlgo"))},l=function(e){var a=e.src,t=e.credit,c=e.isVisuAlgo,o=e.maxWidth;return n.createElement(p,null,n.createElement(m,{maxWidth:o,src:a}),!!t&&n.createElement(r,null,t),!!c&&n.createElement(r,null,n.createElement(N,null)))};a.a=l},uqmq:function(e,a,t){"use strict";t.d(a,"b",(function(){return s})),t.d(a,"c",(function(){return p})),t.d(a,"a",(function(){return m}));var n=t("vOnD"),c=t("gWsq"),o=t("SOUA"),s=Object(n.e)(c.h).withConfig({componentId:"sc-16wjbcj-0"})(["margin-top:","px;"],o.a),p=Object(n.e)(s).withConfig({componentId:"sc-16wjbcj-1"})(["display:flex;justify-content:center;align-items:center;"]),m=n.e.div.withConfig({componentId:"sc-16wjbcj-2"})(["margin-top:","px;"],o.a)}},[["HlGe",0,1,4,6,5,9,12,11,13,14,15,18,17,21,2,3,7,8,10,16,19,22,23,24]]]);