@import "../style/globals.scss";

/* Code blocks look like: 

<pre class='shiki lsp twoslash'>
  <div class='language-id>[lang-id]</div>
    <div class='code-container'>
      <code>[the code as a series of spans]</code>
      <a href='playground...'>Try</a>
    </div>
  </pre> 
*/

pre {
  /* In theory shiki will overwrite these, but this is to make sure there are defaults */
  background-color: white;
  color: black;

  /* Give it some space to breathe */
  padding: 12px;

  /* All code samples get a grey border, twoslash ones get a different color */
  border-left: 1px solid #999;
  border-bottom: 1px solid #999;

  margin-bottom: 3rem;

  /* Important to allow the code to move horizontally; */
  overflow: auto;
  &.shiki {
    overflow: initial;

    &:hover .dim {
      opacity: 1;
    }

    div.dim {
      opacity: 0.5;
    }

    div.dim,
    div.highlight {
      margin: 0;
      padding: 0;
    }

    div.highlight {
      opacity: 1;
      background-color: #f1f8ff;
    }

    div.line {
      min-height: 1rem;
    }
  }

  /* So that folks know you can highlight */
  &.twoslash {
    // border-color: $ts-main-blue-lightest-color;
    border-color: #719af4;
  }

  /* The code inside should scroll, but the overflow can't be on the shiki because it would not allow the relative positioning */
  .code-container {
    overflow: auto;

    > a {
      position: absolute;
      right: 8px;
      bottom: 8px;
      border-radius: 4px;
      border: 1px solid #719af4;
      padding: 0 8px;
      color: #719af4;
      text-decoration: none;
      opacity: 0;
      transition-timing-function: ease;
      transition: opacity 0.3s;

      @media (prefers-reduced-motion: reduce) {
        transition: none;
      }

      &:hover {
        color: white;
        background-color: #719af4;
      }
    }

    &:hover a {
      opacity: 1;
    }
  }

  /* Handle scrolling, and showing code correctly */
  code {
    // These are somewhat redundant in this codebase, but relevant for everyone else
    /** Style setup */
    font-size: 15px;
    font-family: var(--code-font);

    white-space: pre;
    -webkit-overflow-scrolling: touch;

    a {
      text-decoration: none;
    }
  }

  /* Let errors use the outer shiki for their absolute sizing, and not be affected by the scrolling of the code */
  position: relative;

  data-err {
    background: url("data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%206%203'%20enable-background%3D'new%200%200%206%203'%20height%3D'3'%20width%3D'6'%3E%3Cg%20fill%3D'%23c94824'%3E%3Cpolygon%20points%3D'5.5%2C0%202.5%2C3%201.1%2C3%204.1%2C0'%2F%3E%3Cpolygon%20points%3D'4%2C0%206%2C2%206%2C0.6%205.4%2C0'%2F%3E%3Cpolygon%20points%3D'0%2C2%201%2C3%202.4%2C3%200%2C0.6'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E")
      repeat-x bottom left;
    padding-bottom: 3px;
  }

  .query {
    margin-bottom: 10px;
    color: #137998;
    display: inline-block;
  }

  /* In order to have the 'popped out' style design and to not break the layout
  /* we need to place a fake and un-selectable copy of the error which _isn't_ broken out
  /* behind the actual error message.

  /* This section keeps both of those in sync  */
  .error,
  .error-behind {
    margin-left: -14px;
    margin-top: 8px;
    margin-bottom: 4px;
    padding: 6px;
    padding-left: 14px;
    width: calc(100% - 19px);

    white-space: pre-wrap;
    display: block;
  }

  .error {
    position: absolute;
    background-color: #ffeeee;
    border-left: 2px solid #bf1818;

    /* Give the space to the error code  */
    display: flex;
    align-items: center;
    color: black;

    .code {
      display: none;
    }
  }

  .error-behind {
    user-select: none;
    color: #ffeeee;
  }

  .inline-completions {
    ul.dropdown {
      display: inline-block;
      position: absolute;
      width: 240px;
      background-color: gainsboro;
      color: grey;
      padding-top: 4px;

      font-family: $font-code;
      font-size: 0.8rem;
      margin: 0;
      padding: 0;

      border-left: 4px solid #4b9edd;

      // Fake the cursor above us
      &::before {
        background-color: #4b9edd;
        width: 2px;
        position: absolute;
        top: -1.2rem;
        left: -3px;
        content: " ";
      }

      li {
        overflow-x: hidden;
        padding-left: 4px;
        margin-bottom: 4px;

        &.deprecated {
          text-decoration: line-through;
        }

        span.result-found {
          color: #4b9edd;
        }
        span.result {
          width: 100px;
          color: black;
          display: inline-block;
        }
      }
    }
  }
}

.dark-theme .markdown pre {
  background-color: #d8d8d8;
  border-color: #ddd;
  filter: invert(98%) hue-rotate(180deg);
}

// Extracted from vscode

// .monaco-editor .squiggly-warning { background: url("data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%206%203'%20enable-background%3D'new%200%200%206%203'%20height%3D'3'%20width%3D'6'%3E%3Cg%20fill%3D'%23428226'%3E%3Cpolygon%20points%3D'5.5%2C0%202.5%2C3%201.1%2C3%204.1%2C0'%2F%3E%3Cpolygon%20points%3D'4%2C0%206%2C2%206%2C0.6%205.4%2C0'%2F%3E%3Cpolygon%20points%3D'0%2C2%201%2C3%202.4%2C3%200%2C0.6'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E") repeat-x bottom left; }
// .monaco-editor .squiggly-info { background: url("data:image/svg+xml,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%206%203'%20enable-background%3D'new%200%200%206%203'%20height%3D'3'%20width%3D'6'%3E%3Cg%20fill%3D'%2375beff'%3E%3Cpolygon%20points%3D'5.5%2C0%202.5%2C3%201.1%2C3%204.1%2C0'%2F%3E%3Cpolygon%20points%3D'4%2C0%206%2C2%206%2C0.6%205.4%2C0'%2F%3E%3Cpolygon%20points%3D'0%2C2%201%2C3%202.4%2C3%200%2C0.6'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E") repeat-x bottom left; }
// .monaco-editor .squiggly-hint { background: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20height%3D%223%22%20width%3D%2212%22%3E%3Cg%20fill%3D%22%236c6c6c%22%3E%3Ccircle%20cx%3D%221%22%20cy%3D%221%22%20r%3D%221%22%2F%3E%3Ccircle%20cx%3D%225%22%20cy%3D%221%22%20r%3D%221%22%2F%3E%3Ccircle%20cx%3D%229%22%20cy%3D%221%22%20r%3D%221%22%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E") no-repeat bottom left; }

data-lsp {
  /* Ensures there's no 1px jump when the hover happens above */
  border-bottom: 1px dotted transparent;

  /* Fades in unobtrusively */
  transition-timing-function: ease;
  transition: border-color 0.3s;

  /* Respect people's wishes to not have animations */
  @media (prefers-reduced-motion: reduce) {
    transition: none;
  }
}

/** When you mouse over the pre, show the underlines */
pre:hover data-lsp {
  border-color: rgb(116, 116, 116);
}

/** The tooltip-like which provides the LSP response */
#twoslash-mouse-hover-info {
  background-color: rgb(63, 63, 63);
  color: #fff;
  text-align: left;
  padding: 5px 8px;
  border-radius: 2px;
  font-family: "Cascadia Mono-SemiLight", "JetBrains Mono", Menlo, Monaco,
    Consolas, Courier New, monospace;
  font-size: 14px;
  white-space: pre-wrap;
  border-radius: 2px;
  z-index: 100;
  pointer-events: none;
}
